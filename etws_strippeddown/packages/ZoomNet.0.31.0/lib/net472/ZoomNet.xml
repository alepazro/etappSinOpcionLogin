<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZoomNet</name>
    </assembly>
    <members>
        <member name="T:ZoomNet.Internal">
            <summary>
            Internal extension methods.
            </summary>
        </member>
        <member name="M:ZoomNet.Internal.FromUnixTime(System.Int64,ZoomNet.Internal.UnixTimePrecision)">
            <summary>
            Converts a 'unix time' (which is expressed as the number of seconds/milliseconds since
            midnight on January 1st 1970) to a .Net <see cref="T:System.DateTime" />.
            </summary>
            <param name="unixTime">The unix time.</param>
            <param name="precision">The desired precision.</param>
            <returns>
            The <see cref="T:System.DateTime" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Internal.ToUnixTime(System.DateTime,ZoomNet.Internal.UnixTimePrecision)">
            <summary>
            Converts a .Net <see cref="T:System.DateTime" /> into a 'Unix time' (which is expressed as the number
            of seconds/milliseconds since midnight on January 1st 1970).
            </summary>
            <param name="date">The date.</param>
            <param name="precision">The desired precision.</param>
            <returns>
            The numer of seconds/milliseconds since midnight on January 1st 1970.
            </returns>
        </member>
        <member name="M:ZoomNet.Internal.ToZoomFormat(System.Nullable{System.DateTime},System.Nullable{ZoomNet.Models.TimeZones})">
            <summary>
            Converts a .Net <see cref="T:System.DateTime" /> into a string that can be accepted by the Zoom API.
            </summary>
            <param name="date">The date.</param>
            <param name="timeZone">The time zone.</param>
            <returns>
            The string representation of the date expressed in the Zoom format.
            </returns>
        </member>
        <member name="M:ZoomNet.Internal.ToZoomFormat(System.DateTime,System.Nullable{ZoomNet.Models.TimeZones})">
            <summary>
            Converts a .Net <see cref="T:System.DateTime" /> into a string that can be accepted by the Zoom API.
            </summary>
            <param name="date">The date.</param>
            <param name="timeZone">The time zone.</param>
            <returns>
            The string representation of the date expressed in the Zoom format.
            </returns>
        </member>
        <member name="M:ZoomNet.Internal.ReadAsStringAsync(System.Net.Http.HttpContent,System.Text.Encoding)">
             <summary>
             Reads the content of the HTTP response as string asynchronously.
             </summary>
             <param name="httpContent">The content.</param>
             <param name="encoding">The encoding. You can leave this parameter null and the encoding will be
             automatically calculated based on the charset in the response. Also, UTF-8
             encoding will be used if the charset is absent from the response, is blank
             or contains an invalid value.</param>
             <returns>The string content of the response.</returns>
             <remarks>
             This method is an improvement over the built-in ReadAsStringAsync method
             because it can handle invalid charset returned in the response. For example
             you may be sending a request to an API that returns a blank charset or a
             misspelled one like 'utf8' instead of the correctly spelled 'utf-8'. The
             built-in method throws an exception if an invalid charset is specified
             while this method uses the UTF-8 encoding in that situation.
            
             My motivation for writing this extension method was to work around a situation
             where the 3rd party API I was sending requests to would sometimes return 'utf8'
             as the charset and an exception would be thrown when I called the ReadAsStringAsync
             method to get the content of the response into a string because the .Net HttpClient
             would attempt to determine the proper encoding to use but it would fail due to
             the fact that the charset was misspelled. I contacted the vendor, asking them
             to either omit the charset or fix the misspelling but they didn't feel the need
             to fix this issue because:
             "in some programming languages, you can use the syntax utf8 instead of utf-8".
             In other words, they are happy to continue using the misspelled value which is
             supported by "some" programming languages instead of using the properly spelled
             value which is supported by all programming languages.
             </remarks>
             <example>
             <code>
             var httpRequest = new HttpRequestMessage
             {
                 Method = HttpMethod.Get,
                 RequestUri = new Uri("https://api.vendor.com/v1/endpoint")
             };
             var httpClient = new HttpClient();
             var response = await httpClient.SendAsync(httpRequest, CancellationToken.None).ConfigureAwait(false);
             var responseContent = await response.Content.ReadAsStringAsync(null).ConfigureAwait(false);
             </code>
             </example>
        </member>
        <member name="M:ZoomNet.Internal.GetEncoding(System.Net.Http.HttpContent,System.Text.Encoding)">
            <summary>
            Gets the encoding.
            </summary>
            <param name="content">The content.</param>
            <param name="defaultEncoding">The default encoding.</param>
            <returns>
            The encoding.
            </returns>
            <remarks>
            This method tries to get the encoding based on the charset or uses the
            'defaultEncoding' if the charset is empty or contains an invalid value.
            </remarks>
            <example>
              <code>
            var httpRequest = new HttpRequestMessage
            {
            Method = HttpMethod.Get,
            RequestUri = new Uri("https://my.api.com/v1/myendpoint")
            };
            var httpClient = new HttpClient();
            var response = await httpClient.SendAsync(httpRequest, CancellationToken.None).ConfigureAwait(false);
            var encoding = response.Content.GetEncoding(Encoding.UTF8);
            </code>
            </example>
        </member>
        <member name="M:ZoomNet.Internal.AsObject``1(Pathoschild.Http.Client.IResponse,System.String,System.Boolean,Newtonsoft.Json.JsonConverter)">
            <summary>Asynchronously retrieve the JSON encoded response body and convert it to an object of the desired type.</summary>
            <typeparam name="T">The response model to deserialize into.</typeparam>
            <param name="response">The response.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="throwIfPropertyIsMissing">Indicates if an exception should be thrown when the specified JSON property is missing from the response.</param>
            <param name="jsonConverter">Converter that will be used during deserialization.</param>
            <returns>Returns the strongly typed object.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsObject``1(Pathoschild.Http.Client.IRequest,System.String,System.Boolean,Newtonsoft.Json.JsonConverter)">
            <summary>Asynchronously retrieve the JSON encoded response body and convert it to an object of the desired type.</summary>
            <typeparam name="T">The response model to deserialize into.</typeparam>
            <param name="request">The request.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="throwIfPropertyIsMissing">Indicates if an exception should be thrown when the specified JSON property is missing from the response.</param>
            <param name="jsonConverter">Converter that will be used during deserialization.</param>
            <returns>Returns the strongly typed object.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsRawJsonObject(Pathoschild.Http.Client.IResponse,System.String,System.Boolean)">
            <summary>Get a raw JSON object representation of the response, which can also be accessed as a <c>dynamic</c> value.</summary>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsRawJsonObject(Pathoschild.Http.Client.IRequest,System.String,System.Boolean)">
            <summary>Get a raw JSON object representation of the response, which can also be accessed as a <c>dynamic</c> value.</summary>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsRawJsonArray(Pathoschild.Http.Client.IResponse,System.String,System.Boolean)">
            <summary>Get a raw JSON object representation of the response, which can also be accessed as a <c>dynamic</c> value.</summary>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsRawJsonArray(Pathoschild.Http.Client.IRequest,System.String,System.Boolean)">
            <summary>Get a raw JSON object representation of the response, which can also be accessed as a <c>dynamic</c> value.</summary>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsPaginatedResponse``1(Pathoschild.Http.Client.IResponse,System.String,Newtonsoft.Json.JsonConverter)">
            <summary>Asynchronously retrieve the JSON encoded content and convert it to a 'PaginatedResponse' object.</summary>
            <typeparam name="T">The response model to deserialize into.</typeparam>
            <param name="response">The response.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="jsonConverter">Converter that will be used during deserialization.</param>
            <returns>Returns the paginated response.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsPaginatedResponse``1(Pathoschild.Http.Client.IRequest,System.String,Newtonsoft.Json.JsonConverter)">
            <summary>Asynchronously retrieve the JSON encoded content and convert it to a 'PaginatedResponse' object.</summary>
            <typeparam name="T">The response model to deserialize into.</typeparam>
            <param name="request">The request.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="jsonConverter">Converter that will be used during deserialization.</param>
            <returns>Returns the paginated response.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsPaginatedResponseWithToken``1(Pathoschild.Http.Client.IResponse,System.String,Newtonsoft.Json.JsonConverter)">
            <summary>Asynchronously retrieve the JSON encoded response body and convert it to a 'PaginatedResponseWithToken' object.</summary>
            <typeparam name="T">The response model to deserialize into.</typeparam>
            <param name="response">The response.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="jsonConverter">Converter that will be used during deserialization.</param>
            <returns>Returns the paginated response.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsPaginatedResponseWithToken``1(Pathoschild.Http.Client.IRequest,System.String,Newtonsoft.Json.JsonConverter)">
            <summary>Asynchronously retrieve the JSON encoded response body and convert it to a 'PaginatedResponseWithToken' object.</summary>
            <typeparam name="T">The response model to deserialize into.</typeparam>
            <param name="request">The request.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="jsonConverter">Converter that will be used during deserialization.</param>
            <returns>Returns the paginated response.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsPaginatedResponseWithTokenAndDateRange``1(Pathoschild.Http.Client.IResponse,System.String,Newtonsoft.Json.JsonConverter)">
            <summary>Asynchronously retrieve the JSON encoded response body and convert it to a 'PaginatedResponseWithToken' object.</summary>
            <typeparam name="T">The response model to deserialize into.</typeparam>
            <param name="response">The response.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="jsonConverter">Converter that will be used during deserialization.</param>
            <returns>Returns the paginated response.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsPaginatedResponseWithTokenAndDateRange``1(Pathoschild.Http.Client.IRequest,System.String,Newtonsoft.Json.JsonConverter)">
            <summary>Asynchronously retrieve the JSON encoded response body and convert it to a 'PaginatedResponseWithToken' object.</summary>
            <typeparam name="T">The response model to deserialize into.</typeparam>
            <param name="request">The request.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="jsonConverter">Converter that will be used during deserialization.</param>
            <returns>Returns the paginated response.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.WithJsonBody``1(Pathoschild.Http.Client.IRequest,``0)">
            <summary>Set the body content of the HTTP request.</summary>
            <typeparam name="T">The type of object to serialize into a JSON string.</typeparam>
            <param name="request">The request.</param>
            <param name="body">The value to serialize into the HTTP body content.</param>
            <returns>Returns the request builder for chaining.</returns>
            <remarks>
            This method is equivalent to IRequest.AsBody&lt;T&gt;(T body) because omitting the media type
            causes the first formatter in MediaTypeFormatterCollection to be used by default and the first
            formatter happens to be the JSON formatter. However, I don't feel good about relying on the
            default ordering of the items in the MediaTypeFormatterCollection.
            </remarks>
        </member>
        <member name="M:ZoomNet.Internal.AsString(Pathoschild.Http.Client.IResponse,System.Text.Encoding)">
            <summary>Asynchronously retrieve the response body as a <see cref="T:System.String"/>.</summary>
            <param name="response">The response.</param>
            <param name="encoding">The encoding. You can leave this parameter null and the encoding will be
            automatically calculated based on the charset in the response. Also, UTF-8
            encoding will be used if the charset is absent from the response, is blank
            or contains an invalid value.</param>
            <returns>Returns the response body, or <c>null</c> if the response has no body.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsString(Pathoschild.Http.Client.IRequest,System.Text.Encoding)">
            <summary>Asynchronously retrieve the response body as a <see cref="T:System.String"/>.</summary>
            <param name="request">The request.</param>
            <param name="encoding">The encoding. You can leave this parameter null and the encoding will be
            automatically calculated based on the charset in the response. Also, UTF-8
            encoding will be used if the charset is absent from the response, is blank
            or contains an invalid value.</param>
            <returns>Returns the response body, or <c>null</c> if the response has no body.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.ToDurationString(System.TimeSpan)">
            <summary>
             Converts the value of the current System.TimeSpan object to its equivalent string
             representation by using a human readable format.
            </summary>
            <param name="timeSpan">The time span.</param>
            <returns>Returns the human readable representation of the TimeSpan.</returns>
        </member>
        <member name="M:ZoomNet.Internal.GetAttributeOfType``1(System.Enum)">
            <summary>
            Gets the attribute of the specified type.
            </summary>
            <typeparam name="T">The type of the desired attribute.</typeparam>
            <param name="enumVal">The enum value.</param>
            <returns>The attribute.</returns>
        </member>
        <member name="M:ZoomNet.Internal.GetValue(System.Net.Http.Headers.HttpHeaders,System.String)">
            <summary>
            Returns the first value for a specified header stored in the System.Net.Http.Headers.HttpHeaderscollection.
            </summary>
            <param name="headers">The HTTP headers.</param>
            <param name="name">The specified header to return value for.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:ZoomNet.Internal.AsObject``1(System.Net.Http.HttpContent,System.String,System.Boolean,Newtonsoft.Json.JsonConverter)">
            <summary>Asynchronously converts the JSON encoded content and convert it to an object of the desired type.</summary>
            <typeparam name="T">The response model to deserialize into.</typeparam>
            <param name="httpContent">The content.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="throwIfPropertyIsMissing">Indicates if an exception should be thrown when the specified JSON property is missing from the response.</param>
            <param name="jsonConverter">Converter that will be used during deserialization.</param>
            <returns>Returns the strongly typed object.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsRawJsonObject(System.Net.Http.HttpContent,System.String,System.Boolean)">
            <summary>Get a raw JSON object representation of the response, which can also be accessed as a <c>dynamic</c> value.</summary>
            <param name="httpContent">The content.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="throwIfPropertyIsMissing">Indicates if an exception should be thrown when the specified JSON property is missing from the response.</param>
            <returns>Returns the response body, or <c>null</c> if the response has no body.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsRawJsonArray(System.Net.Http.HttpContent,System.String,System.Boolean)">
            <summary>Get a raw JSON object representation of the response, which can also be accessed as a <c>dynamic</c> value.</summary>
            <param name="httpContent">The content.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="throwIfPropertyIsMissing">Indicates if an exception should be thrown when the specified JSON property is missing from the response.</param>
            <returns>Returns the response body, or <c>null</c> if the response has no body.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsPaginatedResponse``1(System.Net.Http.HttpContent,System.String,Newtonsoft.Json.JsonConverter)">
            <summary>Asynchronously retrieve the JSON encoded content and convert it to a 'PaginatedResponse' object.</summary>
            <typeparam name="T">The response model to deserialize into.</typeparam>
            <param name="httpContent">The content.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="jsonConverter">Converter that will be used during deserialization.</param>
            <returns>Returns the response body, or <c>null</c> if the response has no body.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsPaginatedResponseWithToken``1(System.Net.Http.HttpContent,System.String,Newtonsoft.Json.JsonConverter)">
            <summary>Asynchronously retrieve the JSON encoded content and convert it to a 'PaginatedResponseWithToken' object.</summary>
            <typeparam name="T">The response model to deserialize into.</typeparam>
            <param name="httpContent">The content.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="jsonConverter">Converter that will be used during deserialization.</param>
            <returns>Returns the response body, or <c>null</c> if the response has no body.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="M:ZoomNet.Internal.AsPaginatedResponseWithTokenAndDateRange``1(System.Net.Http.HttpContent,System.String,Newtonsoft.Json.JsonConverter)">
            <summary>Asynchronously retrieve the JSON encoded content and convert it to a 'PaginatedResponseWithToken' object.</summary>
            <typeparam name="T">The response model to deserialize into.</typeparam>
            <param name="httpContent">The content.</param>
            <param name="propertyName">The name of the JSON property (or null if not applicable) where the desired data is stored.</param>
            <param name="jsonConverter">Converter that will be used during deserialization.</param>
            <returns>Returns the response body, or <c>null</c> if the response has no body.</returns>
            <exception cref="T:Pathoschild.Http.Client.ApiException">An error occurred processing the response.</exception>
        </member>
        <member name="T:ZoomNet.Public">
            <summary>
            Public extension methods.
            </summary>
        </member>
        <member name="M:ZoomNet.Public.GetCurrentAsync(ZoomNet.Resources.IUsers,System.Threading.CancellationToken)">
            <summary>
            Returns information about the current user.
            </summary>
            <param name="usersResource">The user resource.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The current user.</returns>
        </member>
        <member name="M:ZoomNet.Public.AddAssistantByIdAsync(ZoomNet.Resources.IUsers,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an assistant to a user.
            </summary>
            <param name="usersResource">The user resource.</param>
            <param name="userId">The user Id.</param>
            <param name="assistantId">The id of the assistant to associate with this user.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Public.AddAssistantByEmailAsync(ZoomNet.Resources.IUsers,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an assistant to a user.
            </summary>
            <param name="usersResource">The user resource.</param>
            <param name="userId">The user Id.</param>
            <param name="assistantEmail">The email address of the assistant to associate with this user.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Public.LeaveChannelAsync(ZoomNet.Resources.IChat,System.String,System.Threading.CancellationToken)">
            <summary>
            Leave a chat channel.
            </summary>
            <param name="chatResource">The chat resource.</param>
            <param name="channelId">The channel Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Public.SendMessageToContactAsync(ZoomNet.Resources.IChat,System.String,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.ChatMention},System.Threading.CancellationToken)">
            <summary>
            Send a message to a user on your contact list.
            </summary>
            <param name="chatResource">The chat resource.</param>
            <param name="recipientEmail">The email address of the contact to whom you would like to send the message.</param>
            <param name="message">The message.</param>
            <param name="mentions">Mentions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The message Id.
            </returns>
        </member>
        <member name="M:ZoomNet.Public.SendMessageToChannelAsync(ZoomNet.Resources.IChat,System.String,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.ChatMention},System.Threading.CancellationToken)">
            <summary>
            Send a message to a channel of which you are a member of.
            </summary>
            <param name="chatResource">The chat resource.</param>
            <param name="channelId">The channel Id.</param>
            <param name="message">The message.</param>
            <param name="mentions">Mentions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The message Id.
            </returns>
        </member>
        <member name="M:ZoomNet.Public.GetMessagesToContactAsync(ZoomNet.Resources.IChat,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the messages that you have sent/received to/from a user on your contact list.
            </summary>
            <param name="chatResource">The chat resource.</param>
            <param name="recipientEmail">The email address of the contact with whom the user conversed.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ChatMessage">messages</see>.
            </returns>
            <remarks>The Zoom API doesn't seem to return the 'TotalRecords' property in the response.</remarks>
        </member>
        <member name="M:ZoomNet.Public.GetMessagesToChannelAsync(ZoomNet.Resources.IChat,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the messages you have sent/received to/from a chat channel.
            </summary>
            <param name="chatResource">The chat resource.</param>
            <param name="channelId">The channel Id.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ChatMessage">messages</see>.
            </returns>
            <remarks>The Zoom API doesn't seem to return the 'TotalRecords' property in the response.</remarks>
        </member>
        <member name="M:ZoomNet.Public.UpdateMessageToContactAsync(ZoomNet.Resources.IChat,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.ChatMention},System.Threading.CancellationToken)">
            <summary>
            Edit a chat message that you previously sent to a user on your contact list.
            </summary>
            <param name="chatResource">The chat resource.</param>
            <param name="messageId">The unique identifier of the message.</param>
            <param name="recipientEmail">The email address of the contact to whom you would like to send the message.</param>
            <param name="message">The message.</param>
            <param name="mentions">Mentions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Public.UpdateMessageToChannelAsync(ZoomNet.Resources.IChat,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.ChatMention},System.Threading.CancellationToken)">
            <summary>
            Edit a chat message that you previously sent to a channel that you are a member of.
            </summary>
            <param name="chatResource">The chat resource.</param>
            <param name="messageId">The unique identifier of the message.</param>
            <param name="channelId">The unique identifier of the channel.</param>
            <param name="message">The message.</param>
            <param name="mentions">Mentions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Public.DeleteMessageToContactAsync(ZoomNet.Resources.IChat,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a chat message that you previously sent to a user on your contact list.
            </summary>
            <param name="chatResource">The chat resource.</param>
            <param name="messageId">The unique identifier of the message.</param>
            <param name="recipientEmail">The email address of the contact to whom the message was sent.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Public.DeleteMessageToChannelAsync(ZoomNet.Resources.IChat,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a chat message that you previously sent to a channel that you are a member of.
            </summary>
            <param name="chatResource">The chat resource.</param>
            <param name="messageId">The unique identifier of the message.</param>
            <param name="channelId">The unique identifier of the channel.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Public.ParseEventWebhookAsync(ZoomNet.IWebhookParser,System.IO.Stream)">
            <summary>
            Parses the event webhook asynchronously.
            </summary>
            <param name="parser">The webhook parser.</param>
            <param name="stream">The stream.</param>
            <returns>An <see cref="T:ZoomNet.Models.Webhooks.Event" />.</returns>
        </member>
        <member name="T:ZoomNet.IConnectionInfo">
            <summary>
            Interface for connection information.
            </summary>
        </member>
        <member name="T:ZoomNet.IWebhookParser">
            <summary>
            Interface for the webhook parser.
            </summary>
        </member>
        <member name="M:ZoomNet.IWebhookParser.ParseEventWebhook(System.String)">
            <summary>
            Parses the event webhook.
            </summary>
            <param name="requestBody">The content submitted by Zoom's WebHook.</param>
            <returns>An <see cref="T:ZoomNet.Models.Webhooks.Event" />.</returns>
        </member>
        <member name="T:ZoomNet.IZoomClient">
            <summary>
            Interface for the Zoom REST client.
            </summary>
        </member>
        <member name="P:ZoomNet.IZoomClient.Accounts">
            <summary>
            Gets the resource which allows you to manage sub accounts.
            </summary>
            <value>
            The accounts resource.
            </value>
        </member>
        <member name="P:ZoomNet.IZoomClient.Chat">
            <summary>
            Gets the resource which allows you to manage chat channels, messages, etc.
            </summary>
            <value>
            The chat resource.
            </value>
        </member>
        <member name="P:ZoomNet.IZoomClient.CloudRecordings">
            <summary>
            Gets the resource which allows you to manage cloud recordings.
            </summary>
            <value>
            The cloud recordings resource.
            </value>
        </member>
        <member name="P:ZoomNet.IZoomClient.Contacts">
            <summary>
            Gets the resource which allows you to manage contacts.
            </summary>
            <value>
            The contacts resource.
            </value>
        </member>
        <member name="P:ZoomNet.IZoomClient.DataCompliance">
            <summary>
            Gets the resource which allows you to notify Zoom that you comply with the policy which requires
            you to handle user's data in accordance to the user's preference after the user uninstalls your app.
            </summary>
            <value>
            The data compliance resource.
            </value>
        </member>
        <member name="P:ZoomNet.IZoomClient.Meetings">
            <summary>
            Gets the resource which allows you to manage meetings.
            </summary>
            <value>
            The meetings resource.
            </value>
        </member>
        <member name="P:ZoomNet.IZoomClient.PastMeetings">
            <summary>
            Gets the resource which allows you to manage meetings that occured in the past.
            </summary>
            <value>
            The past meetings resource.
            </value>
        </member>
        <member name="P:ZoomNet.IZoomClient.PastWebinars">
            <summary>
            Gets the resource which allows you to manage webinars that occured in the past.
            </summary>
            <value>
            The past webinars resource.
            </value>
        </member>
        <member name="P:ZoomNet.IZoomClient.Users">
            <summary>
            Gets the resource which allows you to manage users.
            </summary>
            <value>
            The users resource.
            </value>
        </member>
        <member name="P:ZoomNet.IZoomClient.Webinars">
            <summary>
            Gets the resource which allows you to manage webinars.
            </summary>
            <value>
            The webinars resource.
            </value>
        </member>
        <member name="P:ZoomNet.IZoomClient.Dashboards">
            <summary>
            Gets the resource which allows you to view metrics.
            </summary>
        </member>
        <member name="T:ZoomNet.JwtConnectionInfo">
            <summary>
            Connect using JWT.
            </summary>
        </member>
        <member name="P:ZoomNet.JwtConnectionInfo.ApiKey">
            <summary>
            Gets the API Key.
            </summary>
        </member>
        <member name="P:ZoomNet.JwtConnectionInfo.ApiSecret">
            <summary>
            Gets the API Secret.
            </summary>
        </member>
        <member name="M:ZoomNet.JwtConnectionInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.JwtConnectionInfo"/> class.
            </summary>
            <param name="apiKey">Your JWT app API Key.</param>
            <param name="apiSecret">Your JWT app API Secret.</param>
        </member>
        <member name="T:ZoomNet.Models.Account">
            <summary>
            An account.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Account.Id">
            <summary>
            Gets or sets the account id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Account.Name">
            <summary>
            Gets or sets the name of the account.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Account.OwnerEmailAddress">
            <summary>
            Gets or sets the email address of the owner of the account.
            </summary>
            <value>
            The email address of the owner.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Account.Type">
            <summary>
            Gets or sets the account type.
            </summary>
            <value>The account type.</value>
        </member>
        <member name="P:ZoomNet.Models.Account.Seats">
            <summary>
            Gets or sets the number of seats.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Account.SubscriptionStart">
            <summary>
            Gets or sets the date and time when the subscription was started.
            </summary>
            <value>The account created time.</value>
        </member>
        <member name="P:ZoomNet.Models.Account.SubscriptionEnd">
            <summary>
            Gets or sets the date and time when the subscription will end.
            </summary>
            <value>The account created time.</value>
        </member>
        <member name="P:ZoomNet.Models.Account.CreatedOn">
            <summary>
            Gets or sets the date and time when the meeting was created.
            </summary>
            <value>The account created time.</value>
        </member>
        <member name="P:ZoomNet.Models.Account.Number">
            <summary>
            Gets or sets the account number.
            </summary>
            <value>The account number.</value>
        </member>
        <member name="T:ZoomNet.Models.Assistant">
            <summary>
            Assistant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Assistant.Id">
            <summary>
            Gets or sets the assistant id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Assistant.Email">
            <summary>
            Gets or sets the assistant's email address.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.AudioType">
            <summary>
            Enumeration to indicate the type of audio available to attendees.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.AudioType.Voip">
            <summary>
            VOIP only.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.AudioType.Telephony">
            <summary>
            PSTN telephony only.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.AudioType.Both">
            <summary>
            Both telephony and VOIP.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.AudioType.ThirdParty">
            <summary>
            Third party audio conference.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.AuthenticationOptions">
            <summary>
            Authentication options.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.AuthenticationOptions.Id">
            <summary>
            Gets or sets the unique identifier.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.AuthenticationOptions.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.AuthenticationOptions.Type">
            <summary>
            Gets or sets the authentication type.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.AuthenticationOptions.Visible">
            <summary>
            Gets or sets a value indicating whether the authentication is visible.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.AuthenticationOptions.Domains">
            <summary>
            Gets or sets the domains.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.AuthenticationSettings">
            <summary>
            Authentication settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.AuthenticationSettings.RequireAuthentication">
            <summary>
            Gets or sets a value indicating whether users must be authenticated.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.AuthenticationSettings.AuthenticationOptions">
            <summary>
            Gets or sets the authentication options.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.AuthenticationType">
            <summary>
            Enumeration to indicate the type of authentication.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.AuthenticationType.Internal">
            <summary>
            Internal.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.AuthenticationType.EnforceLogin">
            <summary>
            Enforce login.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.AuthenticationType.EnforceLoginWithDomains">
            <summary>
            Enforce login with domains.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ChatChannel">
            <summary>
            Chat channel.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatChannel.Id">
            <summary>
            Gets or sets the channel id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ChatChannel.JId">
            <summary>
            Gets or sets the {Zoom does not provide documentation for this field}.
            </summary>
            <value>
            The JId.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ChatChannel.Name">
            <summary>
            Gets or sets the name of the channel.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatChannel.Type">
            <summary>
            Gets or sets the type of the channel.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatChannel.Settings">
            <summary>
            Gets or sets the settings for the channel.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ChatChannelMember">
            <summary>
            Member in a channel.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatChannelMember.Id">
            <summary>
            Gets or sets the member id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ChatChannelMember.Email">
            <summary>
            Gets or sets a valid email address.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatChannelMember.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatChannelMember.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatChannelMember.Role">
            <summary>
            Gets or sets the role.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ChatChannelRole">
            <summary>
            Enumeration to indicate the role of a member of a chat channel.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ChatChannelRole.Owner">
            <summary>
            Live.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ChatChannelRole.Administrator">
            <summary>
            Past
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ChatChannelRole.Member">
            <summary>
            PastOne
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ChatChannelSettings">
            <summary>
            Chat channel settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatChannelSettings.CanSeePreviousMessageFiles">
            <summary>
            Gets or sets a value indicating whether members can see files previously posted to the channel.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatChannelSettings.CanAddExternalUsers">
            <summary>
            Gets or sets a value indicating whether external users can be added to the channel.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatChannelSettings.Permissions">
            <summary>
            Gets or sets the permissions.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ChatChannelType">
            <summary>
            Enumeration to indicate the type of channel.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ChatChannelType.Private">
            <summary>
            Members must be invited to join.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ChatChannelType.PrivateWithUsersInSameAccount">
            <summary>
            Members of this channel should be invited amd the members should be from the same organization.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ChatChannelType.Public">
            <summary>
            Anyone can search for this channel and join this channel.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ChatChannelType.Instant">
            <summary>
            This is an instant channel which can be created by adding members to a new chat.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ChatMention">
            <summary>
            'Mention' in a chat message.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatMention.Start">
            <summary>
            Gets or sets the start position of the mention(\"@\") in the message string.
            For example if you want to include the mention at the beginning of the message,
            the value for this field will be 0.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatMention.End">
            <summary>
            Gets or sets the end position of the mention.
            Example message: \"@Shrijana How are you?\".
            In this case, the end position of the mention \"@Shrijana\" is 8.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatMention.Type">
            <summary>
            Gets or sets the type of mention.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatMention.Contact">
            <summary>
            Gets or sets the contact being mentioned.
            </summary>
            <remarks>Will be empty if <see cref="P:ZoomNet.Models.ChatMention.Type"/> is <see cref="F:ZoomNet.Models.ChatMentionType.All"/>.</remarks>
        </member>
        <member name="T:ZoomNet.Models.ChatMentionType">
            <summary>
            Enumeration to indicate the type of mention.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ChatMentionType.Contact">
            <summary>
            Mentions a specific contact.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ChatMentionType.All">
            <summary>
            Members everyone in the channel.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ChatMessage">
            <summary>
            Chat message.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatMessage.Id">
            <summary>
            Gets or sets the unique identifier of the message.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatMessage.Message">
            <summary>
            Gets or sets the message content.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatMessage.SentOn">
            <summary>
            Gets or sets the date and time at which the message was sent.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ChatMessage.Timestamp">
            <summary>
            Gets or sets the timestamp of the message in microseconds.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ChimeType">
            <summary>
            Enumeration to indicate the type of chime.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ChimeType.HostOnly">
            <summary>
            Play sound when host joins or leaves.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ChimeType.All">
            <summary>
            Play sound when any participant joins or leaves.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ChimeType.None">
            <summary>
            No join or leave sound.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ClientFeedbackDetail">
            <summary>
            Details of participant feedback on Zoom meetings client.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ClientFeedbackDetail.Name">
            <summary>
            Gets or sets the participant's name.
            </summary>
            <value>The participant's name.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientFeedbackDetail.MeetingId">
            <summary>
            Gets or sets the meeting id.
            </summary>
            <value>The meeting id.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientFeedbackDetail.Time">
            <summary>
            Gets or sets the time the feedback was submitted by the participant.
            </summary>
            <value>The time the feedback was submitted by the participant.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientFeedbackDetail.Email">
            <summary>
            Gets or sets the participant's email address.
            </summary>
            <value>The participants email.</value>
        </member>
        <member name="T:ZoomNet.Models.ClientFeedbackMetrics">
            <summary>
            Metrics for a feedback item.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ClientFeedbackMetrics.FeedbackId">
            <summary>
            Gets or sets the feedback id.
            </summary>
            <value>The feedback id.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientFeedbackMetrics.FeebackName">
            <summary>
            Gets or sets the feedback name.
            </summary>
            <value>The feedback name.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientFeedbackMetrics.ParticipantsCount">
            <summary>
            Gets or sets the participant count.
            </summary>
            <value>The number of participants that upvoted the feedback.</value>
        </member>
        <member name="T:ZoomNet.Models.ClientFeedbackMetricsReport">
            <summary>
            Report with client feedback metrics for a given range.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ClientFeedbackMetricsReport.From">
            <summary>
            Gets or sets the start date for this report.
            </summary>
            <value>The start date for this report.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientFeedbackMetricsReport.To">
            <summary>
            Gets or sets the end date for this report.
            </summary>
            <value>The end date for this report.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientFeedbackMetricsReport.TotalRecords">
            <summary>
            Gets or sets the number of all records available across pages.
            </summary>
            <value>The number of all records available across pages.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientFeedbackMetricsReport.ClientFeedbacks">
            <summary>
            Gets or sets the collection of client feedback metrics.
            </summary>
            <value>The collection of client feedback metrics.</value>
        </member>
        <member name="T:ZoomNet.Models.ClientSatisfactionMetrics">
            <summary>
            Metrics for a client satisfaction item.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ClientSatisfactionMetrics.Date">
            <summary>
            Gets or sets the date of the report.
            </summary>
            <value>The date of the report.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientSatisfactionMetrics.SatisfactionPercent">
            <summary>
            Gets or sets the satisfaction percentage. <br/>
            The satisfaction percentage is calculated as `(good_count + none_count)` / `total_count`.
            </summary>
            <value>The satisfaction percentage.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientSatisfactionMetrics.GoodCount">
            <summary>
            Gets or sets the total number of "thumbs up" received for this meeting.
            </summary>
            <value>The total number of "thumbs up" received for this meeting.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientSatisfactionMetrics.NotGoodCount">
            <summary>
            Gets or sets the total number of "thumbs down" received for this meeting.
            </summary>
            <value>The total number of "thumbs down" received for this meeting.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientSatisfactionMetrics.NoneCount">
            <summary>
            Gets or sets the total number of attendees who didn't submit any response (neither thumbs up nor thumbs down).
            </summary>
            <value>The total number of attendees who didn't submit any response (neither thumbs up nor thumbs down).</value>
        </member>
        <member name="T:ZoomNet.Models.ClientSatisfactionReport">
            <summary>
            Report on client statisfaction feedback.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ClientSatisfactionReport.From">
            <summary>
            Gets or sets the start date for this report.
            </summary>
            <value>The start date for this report.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientSatisfactionReport.To">
            <summary>
            Gets or sets the end date for this report.
            </summary>
            <value>The end date for this report.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientSatisfactionReport.TotalRecords">
            <summary>
            Gets or sets the number of all records available across pages.
            </summary>
            <value>The number of all records available across pages.</value>
        </member>
        <member name="P:ZoomNet.Models.ClientSatisfactionReport.ClientSatisfactions">
            <summary>
            Gets or sets the collection of client feedback metrics.
            </summary>
            <value>The collection of client feedback metrics.</value>
        </member>
        <member name="T:ZoomNet.Models.Contact">
            <summary>
            Contact.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Contact.Id">
            <summary>
            Gets or sets the unique identifier.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Contact.EmailAddress">
            <summary>
            Gets or sets the email address.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Contact.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Contact.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Contact.PhoneNumber">
            <summary>
            Gets or sets the phone number.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Contact.PresenceStatus">
            <summary>
            Gets or sets the presence status.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Contact.DirectNumber">
            <summary>
            Gets or sets the direct number.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Contact.ExtensionNumber">
            <summary>
            Gets or sets the extension.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ContactType">
            <summary>
            Enumeration to indicate the type of contact.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ContactType.Internal">
            <summary>
            Contacts from the user's organization.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ContactType.External">
            <summary>
            External contacts.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.CrcPortMetrics">
            <summary>
            Metrics for the CRC port usage.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.CrcPortMetrics.From">
            <summary>
            Gets or sets the start date for this report.
            </summary>
            <value>The start date for this report.</value>
        </member>
        <member name="P:ZoomNet.Models.CrcPortMetrics.To">
            <summary>
            Gets or sets the end date for this report.
            </summary>
            <value>The end date for this report.</value>
        </member>
        <member name="T:ZoomNet.Models.CrcPortsHourUsage">
            <summary>
            Usage of the CRC for the hour.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.CrcPortsHourUsage.Hour">
            <summary>
            Gets or sets the hour that the usage is for, in 24h format.
            </summary>
            <value>The hour in the day, during which the CRC was used. For example if the CRC was used at 11 pm, the value of this field will be 23.</value>
        </member>
        <member name="P:ZoomNet.Models.CrcPortsHourUsage.MaxUsage">
            <summary>
            Gets or sets the maximum usage for the hour.
            </summary>
            <value>The maximum number of concurrent ports that are being used in that hour.</value>
        </member>
        <member name="P:ZoomNet.Models.CrcPortsHourUsage.TotalUsage">
            <summary>
            Gets or sets the total usage for the hour.
            </summary>
            <value>The total number of H.323/SIP connections in that hour.</value>
        </member>
        <member name="T:ZoomNet.Models.CrcPortsUsage">
            <summary>
            Hourly data of CRC usage.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.CrcPortsUsage.DateTime">
            <summary>
            Gets or sets the date and time of the port usage.
            </summary>
            <value>The date and time of the port usage.</value>
        </member>
        <member name="P:ZoomNet.Models.CrcPortsUsage.HourlyUsage">
            <summary>
            Gets or sets the hourly metrics for the port usage.
            </summary>
            <value>The hourly port usage.</value>
        </member>
        <member name="T:ZoomNet.Models.DashboardMeetingMetrics">
            <summary>
            Metrics for a meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingMetrics.InRoomParticipants">
            <summary>
            Gets or sets the number of Zoom Room participants in the meeting.
            </summary>
            <value>
            The number of Zoom Room participants in the meeting.
            </value>
        </member>
        <member name="T:ZoomNet.Models.DashboardMeetingMetricsPaginationObject">
            <summary>
            Pagination Object for meeting metrics returned as deep nested properties in some <see cref="T:ZoomNet.Resources.IDashboards"/> endpoints.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingMetricsPaginationObject.From">
            <summary>
            Gets or sets the start date for the report.
            </summary>
            <value> Start date for this report in 'yyyy-mm-dd' format.</value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingMetricsPaginationObject.To">
            <summary>
            Gets or sets the end date for the report.
            </summary>
            <value> End date for this report in 'yyyy-mm-dd' format.</value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingMetricsPaginationObject.PageCount">
            <summary>
            Gets or sets the number of items returned on this page.
            </summary>
            <value>The number of items returned on this page.</value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingMetricsPaginationObject.PageSize">
            <summary>
            Gets or sets the number of records returned within a single API call.
            </summary>
            <value>The number of records returned within a single API call.</value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingMetricsPaginationObject.TotalRecords">
            <summary>
            Gets or sets the number of all records available across pages.
            </summary>
            <value>The number of all records available across pages.</value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingMetricsPaginationObject.NextPageToken">
            <summary>
            Gets or sets the token to retrieve the next page.
            </summary>
            <value>The page token.</value>
            <remarks>This token expires after 15 minutes.</remarks>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingMetricsPaginationObject.Records">
            <summary>
            Gets or sets the metrics for the meetings.
            </summary>
            <value>The metrics for the meetings.</value>
        </member>
        <member name="T:ZoomNet.Models.DashboardMeetingParticipant">
            <summary>
            Metrics of a meeting participant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipant.Camera">
            <summary>
            Gets or sets the type of camera used by participant during the meeting.
            </summary>
            <value>
            The type of camera used by participant during the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipant.InRoomParticipants">
            <summary>
            Gets or sets the number of participants who joined via Zoom Room.
            </summary>
            <value>
            The number of participants who joined via Zoom Room.
            </value>
        </member>
        <member name="T:ZoomNet.Models.DashboardMeetingParticipantQos">
            <summary>
            Metrics of the quality of service experienced by a meeting participant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipantQos.UserId">
            <summary>
            Gets or sets participant ID.
            </summary>
            <value>
            The participant id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipantQos.UserName">
            <summary>
            Gets or sets participant display name.
            </summary>
            <value>
            The participant display name.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipantQos.Device">
            <summary>
            Gets or sets the type of device using which the participant joined the meeting.
            </summary>
            <value>
            The type of device using which the participant joined the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipantQos.IpAddress">
            <summary>
            Gets or sets participant's IP address.
            </summary>
            <value>
            The participant’s IP address.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipantQos.Location">
            <summary>
            Gets or sets participant's location.
            </summary>
            <value>
            The participant’s location.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipantQos.JoinTime">
            <summary>
            Gets or sets the time at which participant joined the meeting.
            </summary>
            <value>
            The time at which participant joined the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipantQos.LeaveTime">
            <summary>
            Gets or sets the time at which a participant left the meeting.
            </summary>
            <value>
            The time at which a participant left the meeting. For live meetings this field will only be returned if a participant has left the ongoing meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipantQos.PcName">
            <summary>
            Gets or sets the name of participant’s PC.
            </summary>
            <value>
            The name of participant’s PC.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipantQos.Domain">
            <summary>
            Gets or sets the participant’s PC domain.
            </summary>
            <value>
            The participant’s PC domain.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipantQos.MacAddress">
            <summary>
            Gets or sets the participant’s MAC address.
            </summary>
            <value>
            The participant’s MAC address.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipantQos.HardDiskId">
            <summary>
            Gets or sets the participant’s hard disk ID.
            </summary>
            <value>
            The participant’s hard disk ID.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipantQos.Version">
            <summary>
            Gets or sets the participant’s Zoom Client version.
            </summary>
            <value>
            The participant’s Zoom Client version.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMeetingParticipantQos.QualityOfServiceData">
            <summary>
            Gets or sets the collection of quality of service data.
            </summary>
            <value>
            The quality of service data available for the meeting.
            </value>
        </member>
        <member name="T:ZoomNet.Models.DashboardMeetingType">
            <summary>
            Enumeration to indicate the type of meeting metrics are being returned for.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.DashboardMeetingType.Live">
            <summary>
            Live.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.DashboardMeetingType.Past">
            <summary>
            Past
            </summary>
        </member>
        <member name="F:ZoomNet.Models.DashboardMeetingType.PastOne">
            <summary>
            PastOne
            </summary>
        </member>
        <member name="T:ZoomNet.Models.DashboardMetricsBase">
            <summary>
            Base model for metrics returned by Dashboards client for meetings and webinars.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.Uuid">
            <summary>
            Gets or sets the unique id.
            </summary>
            <value>
            The unique id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.Id">
            <summary>
            Gets or sets the meeting id, also known as the meeting number.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.Topic">
            <summary>
            Gets or sets the topic of the meeting.
            </summary>
            <value>
            The topic.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.Host">
            <summary>
            Gets or sets the display name of the meeting host.
            </summary>
            <value>
            The host display name.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.Email">
            <summary>
            Gets or sets the email address of the meeting host.
            </summary>
            <value>
            The host email address.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.UserType">
            <summary>
            Gets or sets the license type of the user.
            </summary>
            <value>
            The users license type.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.StartTime">
            <summary>
            Gets or sets the start time of the meeting.
            </summary>
            <value>
            The meeting start time.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.EndTime">
            <summary>
            Gets or sets the end time of the meeting.
            </summary>
            <value>
            The meeting end time.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.Duration">
            <summary>
            Gets or sets the meeting duration.
            </summary>
            <value>
            The meeting duration.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.ParticipantCount">
            <summary>
            Gets or sets the meeting participant count.
            </summary>
            <value>
            The meeting participant count.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.HasPstn">
            <summary>
            Gets or sets a value indicating whether or not the PSTN was used in the meeting.
            </summary>
            <value>
            Indication whether or not the PSTN was used in the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.HasVoip">
            <summary>
            Gets or sets a value indicating whether or not VoIP was used in the meeting.
            </summary>
            <value>
            Indication whether or not VoIP was used in the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.Has3RdPartyAudio">
            <summary>
            Gets or sets a value indicating whether or not <a href="https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference">3rd party audio</a> was used in the meeting.
            </summary>
            <value>
            Indication whether or not 3rd Party audio was used.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.HasVideo">
            <summary>
            Gets or sets a value indicating whether or not video was used in the meeting.
            </summary>
            <value>
            Indication whether or not video was used in the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.HasScreenShare">
            <summary>
            Gets or sets a value indicating whether or not screenshare feature was used in the meeting.
            </summary>
            <value>
            Indication whether or not screenshare feature was used in the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.HasRecording">
            <summary>
            Gets or sets a value indicating whether or not the recording feature was used in the meeting.
            </summary>
            <value>
            Indication whether or not the recording feature was used in the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.HasSip">
            <summary>
            Gets or sets a value indicating whether or not someone joined the meeting using SIP.
            </summary>
            <value>
            Indication whether or not someone joined the meeting using SIP.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardMetricsBase.Department">
            <summary>
            Gets or sets the department of the host.
            </summary>
            <value>
            The department of the host.
            </value>
        </member>
        <member name="T:ZoomNet.Models.DashboardParticipant">
            <summary>
            Metrics of a participant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.Id">
            <summary>
            Gets or sets the Universally unique identifier of the participant.
            </summary>
            <value>
            The Universally unique identifier of the participant.<br/>
            It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom<br/>
            If the participant joins the meeting without logging in the value of this field will be blank.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.UserId">
            <summary>
            Gets or sets the participant ID.
            </summary>
            <value>
            The participant ID.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.UserName">
            <summary>
            Gets or sets the participant display name.
            </summary>
            <value>
            The participant display name.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.Device">
            <summary>
            Gets or sets the type of device using which the participant joined the meeting.
            </summary>
            <value>
            The type of device using which the participant joined the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.IpAddress">
            <summary>
            Gets or sets the participant’s IP address.
            </summary>
            <value>
            The participant’s IP address.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.Location">
            <summary>
            Gets or sets the participant’s location.
            </summary>
            <value>
            The participant’s location.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.NetworkType">
            <summary>
            Gets or sets the participant’s network type.
            </summary>
            <value>
            The participant’s network type.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.Microphone">
            <summary>
            Gets or sets the type of microphone that participant used during the meeting.
            </summary>
            <value>
            The type of microphone that participant used during the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.Speaker">
            <summary>
            Gets or sets the type of speaker participant used during the meeting.
            </summary>
            <value>
            The type of speaker participant used during the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.DataCenter">
            <summary>
            Gets or sets the data center where participant’s meeting data is stored.
            </summary>
            <value>
            The data center where participant’s meeting data is stored.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.ConnectionType">
            <summary>
            Gets or sets the participant connection type.
            </summary>
            <value>
            The participant connection type.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.JoinTime">
            <summary>
            Gets or sets the time at which participant joined the meeting.
            </summary>
            <value>
            The time at which participant joined the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.LeaveTime">
            <summary>
            Gets or sets the time at which a participant left the meeting.
            </summary>
            <value>
            The time at which a participant left the meeting. For live meetings this field will only be returned if a participant has left the ongoing meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.ShareApplication">
            <summary>
            Gets or sets a value indicating whether or not a user selected to share an iPhone/iPad application during the screen-share.
            </summary>
            <value>
            Indicates whether or not a user selected to share an iPhone/iPad application during the screen-share.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.ShareDesktop">
            <summary>
            Gets or sets a value indicating whether or not a user selected to share their desktop during the screen-share.
            </summary>
            <value>
            Indicates whether or not a user selected to share their desktop during the screen-share.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.ShareWhiteboard">
            <summary>
            Gets or sets a value indicating whether or not a user selected to share their white-board during the screen-share.
            </summary>
            <value>
            Indicates whether or not a user selected to share their white-board during the screen-share.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.Recording">
            <summary>
            Gets or sets a value indicating whether or not recording was used during the meeting.
            </summary>
            <value>
            Indicates whether or not recording was used during the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.PcName">
            <summary>
            Gets or sets the name of participant’s PC.
            </summary>
            <value>
            The name of participant’s PC.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.Domain">
            <summary>
            Gets or sets the participant’s PC domain.
            </summary>
            <value>
            The participant’s PC domain.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.MacAddress">
            <summary>
            Gets or sets the participant’s MAC address.
            </summary>
            <value>
            The participant’s MAC address.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.HardDiskId">
            <summary>
            Gets or sets the participant’s hard disk ID.
            </summary>
            <value>
            The participant’s hard disk ID.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.Version">
            <summary>
            Gets or sets the participant’s Zoom Client version.
            </summary>
            <value>
            The participant’s Zoom Client version.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.LeaveReason">
            <summary>
            Gets or sets the Possible reasons for why participant left the meeting.
            </summary>
            <value>
            The Possible reasons for why participant left the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipant.Email">
            <summary>
            Gets or sets the Email address of the participant.
            </summary>
            <value>
            The Email address of the participant.
            </value>
        </member>
        <member name="T:ZoomNet.Models.DashboardParticipantQos">
            <summary>
            Quality of service provided to a participant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.DateTime">
            <summary>
            Gets or sets date-time of QOS.
            </summary>
            <value>
            The date-time of the quality of service data.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.AudioInput">
            <summary>
            Gets or sets audio input data.
            </summary>
            <value>
            The quality of service for audio input.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.AudioOutput">
            <summary>
            Gets or sets audio output data.
            </summary>
            <value>
            The quality of service for audio output.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.VideoInput">
            <summary>
            Gets or sets video input data.
            </summary>
            <value>
            The quality of service for video input.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.VideoOutput">
            <summary>
            Gets or sets video output data.
            </summary>
            <value>
            The quality of service for video output.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.ScreenShareInput">
            <summary>
            Gets or sets screen share input data.
            </summary>
            <value>
            The quality of service for screen share input.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.ScreenShareOutput">
            <summary>
            Gets or sets screen share output data.
            </summary>
            <value>
            The quality of service for screen share output.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.CpuUsage">
            <summary>
            Gets or sets the CPU usage data.
            </summary>
            <value>
            The CPU usage data.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.AudioDeviceFromCrc">
            <summary>
            Gets or sets the value of metrics on audio being sent from a Cloud Room Connector used by the participant to join the meeting.
            </summary>
            <value>
            Metrics on audio being sent from a Cloud Room Connector used by the participant to join the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.AudioDeviceToCrc">
            <summary>
            Gets or sets the value of metrics on audio received by a participant who joined the meeting via a Cloud Room Connector.
            </summary>
            <value>
            Metrics on audio received by a participant who joined the meeting via a Cloud Room Connector.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.VideoDeviceFromCrc">
            <summary>
            Gets or sets the value of metrics on video being sent from a Cloud Room Connector used by the participant to join the meeting.
            </summary>
            <value>
            Metrics on video being sent from a Cloud Room Connector used by the participant to join the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.VideoDeviceToCrc">
            <summary>
            Gets or sets the value of metrics on video received by a participant who joined the meeting via a Cloud Room Connector.
            </summary>
            <value>
            Metrics on video received by a participant who joined the meeting via a Cloud Room Connector.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.ScreenShareDeviceFromCrc">
            <summary>
            Gets or sets the value of metrics on screen share being sent from a Cloud Room Connector used by the participant to join the meeting.
            </summary>
            <value>
            Metrics on screen share being sent from a Cloud Room Connector used by the participant to join the meeting.
            </value>
        </member>
        <member name="P:ZoomNet.Models.DashboardParticipantQos.ScreenShareDeviceToCrc">
            <summary>
            Gets or sets the value of metrics on screen share received by a participant who joined the meeting via a Cloud Room Connector.
            </summary>
            <value>
            Metrics on screen share received by a participant who joined the meeting via a Cloud Room Connector.
            </value>
        </member>
        <member name="T:ZoomNet.Models.EmailNotificationUserSettings">
            <summary>
            Email notification user settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.EmailNotificationUserSettings.AttendeesJoinBeforeHost">
            <summary>
            Gets or sets a value indicating whether a notification is sent when attendees join a meeting before the host.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.EmailNotificationUserSettings.CancelMeeting">
            <summary>
            Gets or sets a value indicating whether a notification is sent when a meeting is cancelled.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.EmailNotificationUserSettings.ChangeAlternativeHost">
            <summary>
            Gets or sets a value indicating whether a notification is sent when an alternative host is set or removed from a meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.EmailNotificationUserSettings.MeetingScheduled">
            <summary>
            Gets or sets a value indicating whether a notification is sent to the host when a meeting is scheduled, rescheduled or cancelled.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.FeatureUserSettings">
            <summary>
            Feature user settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.FeatureUserSettings.MeetingCapacity">
            <summary>
            Gets or sets the user's meeting capacity.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.FeatureUserSettings.LargeMeetings">
            <summary>
            Gets or sets a value indicating whether the large meeting feature is available.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.FeatureUserSettings.LargeMeetingCapacity">
            <summary>
            Gets or sets the user's large meeting capacity.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.FeatureUserSettings.Webinar">
            <summary>
            Gets or sets a value indicating whether the webinar feature is available.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.FeatureUserSettings.WebinarCapacity">
            <summary>
            Gets or sets the user's webinar capacity.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.FeatureUserSettings.MeetingsInChina">
            <summary>
            Gets or sets a value indicating whether meetings can be hosted in China.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.FeatureUserSettings.MeetingsInIndia">
            <summary>
            Gets or sets a value indicating whether meetings can be hosted in India.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.FeatureUserSettings.ZoomPhone">
            <summary>
            Gets or sets a value indicating whether the Zoom phone feature is available.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ImMetric">
            <summary>
            Metric for chat room usage.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.UserName">
            <summary>
            Gets or sets the user display name.
            </summary>
            <value>The user display name.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.Email">
            <summary>
            Gets or sets the user email.
            </summary>
            <value>The user email.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.TotalSend">
            <summary>
            Gets or sets the total number of messages sent by the user.
            </summary>
            <value>The total number of messages sent by the user.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.TotalReceive">
            <summary>
            Gets or sets total number of messages received by the user.
            </summary>
            <value>The total number of messages received by the user.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.GroupSend">
            <summary>
            Gets or sets total number of messages sent by the user in channels.
            </summary>
            <value>The total number of messages sent by the user in channels.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.GroupReceive">
            <summary>
            Gets or sets total number of messages received by the user in channels.
            </summary>
            <value>The total number of messages received by the user in channels.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.CallsSend">
            <summary>
            Gets or sets total number of instant meeting calls made by the user.
            </summary>
            <value>The total number of instant meeting calls made by the user.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.CallReceive">
            <summary>
            Gets or sets total number of instant meeting calls received by the user.
            </summary>
            <value>The total number of instant meeting calls received by the user.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.FilesSend">
            <summary>
            Gets or sets total number of files sent by the user.
            </summary>
            <value>The total number of files sent by the user.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.FilesReceive">
            <summary>
            Gets or sets total number of files received by the user.
            </summary>
            <value>The total number of files received by the user.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.ImagesSend">
            <summary>
            Gets or sets total number of images sent by the user.
            </summary>
            <value>The total number of images sent by the user.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.ImagesReceive">
            <summary>
            Gets or sets total number of images received by the user.
            </summary>
            <value>The total number of images received by the user.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.VoiceSend">
            <summary>
            Gets or sets total number of voice files sent by the user.
            </summary>
            <value>The total number of voice files sent by the user.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.VoiceReceive">
            <summary>
            Gets or sets total number of voice files received by the user.
            </summary>
            <value>The total number of voice files received by the user.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.VideosSend">
            <summary>
            Gets or sets total number of video files sent by the user.
            </summary>
            <value>The total number of video files sent by the user.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.VideosReceive">
            <summary>
            Gets or sets total number of video files received by the user. .
            </summary>
            <value>The total number of video files received by the user. </value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.EmojiSend">
            <summary>
            Gets or sets total number of emojis sent by the user.
            </summary>
            <value>The total number of emojis sent by the user.</value>
        </member>
        <member name="P:ZoomNet.Models.ImMetric.EmojiReceive">
            <summary>
            Gets or sets total number of emojis received by the user.
            </summary>
            <value>The total number of emojis received by the user.</value>
        </member>
        <member name="T:ZoomNet.Models.InstantMeeting">
            <summary>
            An instant meeting.
            </summary>
            <seealso cref="T:ZoomNet.Models.Meeting" />
        </member>
        <member name="T:ZoomNet.Models.InstantMeetingUserSettings">
            <summary>
            Instant Meeting user settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.RequireEndToEndEncryption">
            <summary>
            Gets or sets a value indicating whether end-to-end encryption is required.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.EnableChat">
            <summary>
            Gets or sets a value indicating whether chat is enabled during meeting for all participants.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.EnablePrivateChat">
            <summary>
            Gets or sets a value indicating whether one-on-one private chat between participants is enabled.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.Chime">
            <summary>
            Gets or sets the chime type.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.EnableRecordAndPlayOwnVoice">
            <summary>
            Gets or sets a value indicating whether record and play their own voice.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.EnableFeedback">
            <summary>
            Gets or sets a value indicating whether to enable option to send feedback to Zoom at the end of the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.AllowCoHosts">
            <summary>
            Gets or sets a value indicating whether to allow the host to add co-hosts.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.EnablePolling">
            <summary>
            Gets or sets a value indicating whether to add polls to the meeting controls.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.AllowAttendeesOnHold">
            <summary>
            Gets or sets a value indicating whether to allow host to put attendees on hold.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.AllowAnnotation">
            <summary>
            Gets or sets a value indicating whether to allow participants to use annotation tools.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.EnableRemoteControl">
            <summary>
            Gets or sets a value indicating whether to enable remote control during screen share.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.EnableNonVerbalFeedback">
            <summary>
            Gets or sets a value indicating whether to enable non-verbal feedback through screens.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.AllowBreakoutRoom">
            <summary>
            Gets or sets a value indicating whether to allow host to split meeting participants into separate breakout rooms.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.AllowRemoteSupport">
            <summary>
            Gets or sets a value indicating whether to allow host to provide one-on-one support to participants.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.EnableCloseCaptions">
            <summary>
            Gets or sets a value indicating whether to enable close captions.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.EnableGroupHdVideo">
            <summary>
            Gets or sets a value indicating whether to enable group HD video.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.EnableVirtualBackground">
            <summary>
            Gets or sets a value indicating whether to enable virtual background.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.AllowTakeCameraControl">
            <summary>
            Gets or sets a value indicating whether to allow another user to take control of the camera.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.EnableWaitingRoom">
            <summary>
            Gets or sets a value indicating whether to enable waiting room.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.AllowLiveStreaming">
            <summary>
            Gets or sets a value indicating whether to allow live streaming.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.AllowWorkplaceByFacebook">
            <summary>
            Gets or sets a value indicating whether to allow live streaming by host through Workplace by Facebook.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.AllowCustomLiveStreaming">
            <summary>
            Gets or sets a value indicating whether to allow custom live streaming.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.CustomLiveStreamingInstructions">
            <summary>
            Gets or sets the PMI password.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.ShowMeetingControlToolbar">
            <summary>
            Gets or sets a value indicating whether to always show meeting controls during a meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.AllowCustomDataCenterRegions">
            <summary>
            Gets or sets a value indicating whether to allow setting the data center regions to use for hosting your real-time meeting and webinar traffic.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.InstantMeetingUserSettings.CustomDataCenterRegions">
            <summary>
            Gets or sets the data center regions to use for hosting your real-time meeting and webinar traffic.
            </summary>
            <remarks>
            The available regions are: EU, HK, AU, IN, TY, CN, US and CA.
            </remarks>
        </member>
        <member name="T:ZoomNet.Models.IssuesOfZoomRooms">
            <summary>
            Top issues from Zoom rooms.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.IssuesOfZoomRooms.IssueType">
            <summary>
            Gets or sets the Issue Name.<br/>
            The value of the this field could be one of the following:<br/>
            * `Room Controller disconnected`<br/>
            * `Room Controller connected`<br/>
            * `Selected camera has disconnected`<br/>
            * `Selected camera is reconnected`<br/>
            * `Selected microphone has disconnected`<br/>
            * `Selected microphone is reconnected`<br/>
            * `Selected speaker has disconnected`<br/>
            * `Selected speaker is reconnected`<br/>
            * `Zoom room is offline`<br/>
            * `Zoom room is online`<br/>
            * `High CPU usage is detected`<br/>
            * `Low bandwidth network is detected`<br/>
            * `{name} battery is low`<br/>
            * `{name} battery is normal`<br/>
            * `{name} disconnected`<br/>
            * `{name} connected`<br/>
            * `{name} is not charging`<br/><br/>
            Possible values for {name}: <br/>
            * Zoom Rooms Computer<br/>
            * Controller<br/>
            * Scheduling Display.<br/>
            </summary>
            <value>The Issue name.</value>
        </member>
        <member name="P:ZoomNet.Models.IssuesOfZoomRooms.ZoomRoomsCount">
            <summary>
            Gets or sets the count of Zoom rooms where the issue appeared.
            </summary>
            <value>The count of Zoom rooms where the issue appeared.</value>
        </member>
        <member name="T:ZoomNet.Models.IssuesOfZoomRoomsReport">
            <summary>
            Top issues across Zoom rooms for the given date range.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.IssuesOfZoomRoomsReport.From">
            <summary>
            Gets or sets the start date for this report.
            </summary>
            <value>The start date for this report.</value>
        </member>
        <member name="P:ZoomNet.Models.IssuesOfZoomRoomsReport.To">
            <summary>
            Gets or sets the end date for this report.
            </summary>
            <value>The end date for this report.</value>
        </member>
        <member name="P:ZoomNet.Models.IssuesOfZoomRoomsReport.TotalRecords">
            <summary>
            Gets or sets the number of all records available across pages.
            </summary>
            <value>The number of all records available across pages.</value>
        </member>
        <member name="P:ZoomNet.Models.IssuesOfZoomRoomsReport.Issues">
            <summary>
            Gets or sets the collection of Zoom room issues.
            </summary>
            <value>The collection of Zoom room issues.</value>
        </member>
        <member name="T:ZoomNet.Models.IssueType">
            <summary>
            Possible issue types in a Zoom room.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.RoomControllerDisconnected">
            <summary>
            Room Controller disconnected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.RoomControllerConnected">
            <summary>
            Room Controller connected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.SelectedCameraHasDisconnected">
            <summary>
            Selected camera has disconnected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.SelectedCameraIsReconnected">
            <summary>
            Selected camera is reconnected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.SelectedMicrophoneHasDisconnected">
            <summary>
            Selected microphone has disconnected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.SelectedMicrophoneIsReconnected">
            <summary>
            Selected microphone is reconnected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.SelectedSpeakerHasDisconnected">
            <summary>
            Selected speaker has disconnected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.SelectedSpeakerIsReconnected">
            <summary>
            Selected speaker is reconnected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.ZoomRoomIsOffline">
            <summary>
            Zoom room is offline.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.ZoomRoomIsOnline">
            <summary>
            Zoom room is online.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.HighCpuUsageIsDetected">
            <summary>
            High CPU usage is detected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.LowBandwidthNetworkIsDetected">
            <summary>
            Low bandwidth network is detected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.ZoomRoomsComputerBatteryIsLow">
            <summary>
            Zoom Rooms Computer battery is low.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.ZoomRoomsComputerBatteryIsNormal">
            <summary>
            Zoom Rooms Computer battery is normal.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.ZoomRoomsComputerDisconnected">
            <summary>
            Zoom Rooms Computer disconnected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.ZoomRoomsComputerConnected">
            <summary>
            Zoom Rooms Computer connected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.ZoomRoomsComputerIsNotCharging">
            <summary>
            Zoom Rooms Computer is not charging.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.ControllerBatteryIsLow">
            <summary>
            Controller battery is low.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.ControllerBatteryIsNormal">
            <summary>
            Controller battery is normal.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.ControllerDisconnected">
            <summary>
            Controller disconnected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.ControllerConnected">
            <summary>
            Controller connected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.ControllerIsNotCharging">
            <summary>
            Controller is not charging.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.SchedulingDisplayBatteryIsLow">
            <summary>
            Scheduling Display battery is low.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.SchedulingDisplayBatteryIsNormal">
            <summary>
            Scheduling Display battery is normal.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.SchedulingDisplayDisconnected">
            <summary>
            Scheduling Display disconnected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.SchedulingDisplayConnected">
            <summary>
            Scheduling Display connected.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.SchedulingDisplayIsNotCharging">
            <summary>
            Scheduling Display is not charging.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.NoCamera">
            <summary>
            No camera.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.IssueType.NoMicrophone">
            <summary>
            No microphone.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.LiveStreamingInfo">
            <summary>
            Information about a live stream.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.LiveStreamingInfo.ServiceName">
            <summary>
            Gets or sets the name of the live streaming service.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.LiveStreamingInfo.Settings">
            <summary>
            Gets or sets the meeting id, also known as the meeting number.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.LiveStreamingSettings">
            <summary>
            A live stream settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.LiveStreamingSettings.Url">
            <summary>
            Gets or sets the stream URL.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.LiveStreamingSettings.Key">
            <summary>
            Gets or sets the stream key.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.LiveStreamingSettings.PageUrl">
            <summary>
            Gets or sets the stream page URL.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Meeting">
            <summary>
            A meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Meeting.Uuid">
            <summary>
            Gets or sets the unique id.
            </summary>
            <value>
            The unique id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Meeting.Id">
            <summary>
            Gets or sets the meeting id, also known as the meeting number.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Meeting.HostId">
            <summary>
            Gets or sets the ID of the user who is set as the host of the meeting.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Meeting.Topic">
            <summary>
            Gets or sets the topic of the meeting.
            </summary>
            <value>
            The topic.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Meeting.Type">
            <summary>
            Gets or sets the meeting type.
            </summary>
            <value>The meeting type.</value>
        </member>
        <member name="P:ZoomNet.Models.Meeting.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Meeting.Agenda">
            <summary>
            Gets or sets the meeting description.
            </summary>
            <value>Meeting description.</value>
        </member>
        <member name="P:ZoomNet.Models.Meeting.CreatedOn">
            <summary>
            Gets or sets the date and time when the meeting was created.
            </summary>
            <value>The meeting created time.</value>
        </member>
        <member name="P:ZoomNet.Models.Meeting.StartUrl">
            <summary>
            Gets or sets the URL for the host to start the meeting.
            </summary>
            <value>The start URL.</value>
        </member>
        <member name="P:ZoomNet.Models.Meeting.JoinUrl">
            <summary>
            Gets or sets the URL to join the meeting.
            </summary>
            <value>The join URL.</value>
        </member>
        <member name="P:ZoomNet.Models.Meeting.Password">
            <summary>
            Gets or sets the password to join the meeting.
            Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *].
            Max of 10 characters.
            </summary>
            <value>Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.</value>
        </member>
        <member name="P:ZoomNet.Models.Meeting.H323Password">
            <summary>
            Gets or sets the H.323/SIP room system password.
            </summary>
            <value>
            The h.323 password.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Meeting.PstnPassword">
            <summary>
            Gets or sets the password to join the phone session.
            </summary>
            <value>
            The pstn password.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Meeting.Settings">
            <summary>
            Gets or Sets the meeting settings.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.MeetingApprovalType">
            <summary>
            Enumeration to indicate the type of approval for a meeting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingApprovalType.Automatic">
            <summary>
            Automatically approve.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingApprovalType.Manual">
            <summary>
            Manually approve.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingApprovalType.None">
            <summary>
            No registration required.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.MeetingFile">
            <summary>
            A file sent via in-meeting chat during a meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingFile.Name">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:ZoomNet.Models.MeetingFile.DownloadUrl">
            <summary>
            Gets or sets the URL to download the file.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:ZoomNet.Models.MeetingFile.Size">
            <summary>
            Gets or sets the size of the file (in bytes).
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="T:ZoomNet.Models.MeetingListType">
            <summary>
            Enumeration to indicate the type of meeting to be listed.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingListType.Scheduled">
            <summary>
            Scheduled.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingListType.Live">
            <summary>
            Live.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingListType.Upcoming">
            <summary>
            Upcoming.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.MeetingOccurrence">
            <summary>
            Meeting occurrence.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingOccurrence.OccurrenceId">
            <summary>
            Gets or sets the occurrence Id.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ZoomNet.Models.MeetingOccurrence.StartTime">
            <summary>
            Gets or sets the start time.
            </summary>
            <value>The occurrence start time.</value>
        </member>
        <member name="P:ZoomNet.Models.MeetingOccurrence.Duration">
            <summary>
            Gets or sets the duration in minutes.
            </summary>
            <value>The duration in minutes.</value>
        </member>
        <member name="P:ZoomNet.Models.MeetingOccurrence.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The occurrence status.
            </value>
        </member>
        <member name="T:ZoomNet.Models.MeetingRegistrationType">
            <summary>
            Enumeration to indicate the type of registration for a meeting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingRegistrationType.RegisterOnceAttendAll">
            <summary>
            Attendees register once and can attend any of the occurrences.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingRegistrationType.RegisterForEachOccurrence">
            <summary>
            Attendees need to register for each occurrence to attend.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingRegistrationType.RegisterOnceAttendOnce">
            <summary>
            Attendees register once and can choose one or more occurrence to attend.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.MeetingSettings">
            <summary>
            Meeting Settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.StartVideoWhenHostJoins">
            <summary>
            Gets or sets the value indicating whether to start video when host joins the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.StartVideoWhenParticipantsJoin">
            <summary>
            Gets or sets the value indicating whether to start video when participants join the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.HostInChina">
            <summary>
            Gets or sets the value indicating whether the meeting should be hosted in China.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.HostInIndia">
            <summary>
            Gets or sets the value indicating whether the meeting should be hosted in India.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.JoinBeforeHost">
            <summary>
            Gets or sets the value indicating whether participants can join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.MuteUponEntry">
            <summary>
            Gets or sets the value indicating whether participants are muted upon entry.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.Watermark">
            <summary>
            Gets or sets the value indicating whether a watermark should be displayed when viewing shared screen.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.UsePmi">
            <summary>
            Gets or sets the value indicating whether to use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.ApprovalType">
            <summary>
            Gets or sets the approval type.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.RegistrationType">
            <summary>
            Gets or sets the registration type. Used for recurring meeting with fixed time only.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.Audio">
            <summary>
            Gets or sets the value indicating how participants can join the audio portion of the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.AutoRecording">
            <summary>
            Gets or sets the value indicating if audio is recorded and if so, when the audio is saved.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.EnforceLogin">
            <summary>
            Gets or sets the value indicating that only signed-in users can join this meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.EnforceLoginDomains">
            <summary>
            Gets or sets the value indicating only signed-in users with specified domains can join this meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.AlternativeHosts">
            <summary>
            Gets or sets the value indicating alternative hosts emails or IDs. Multiple value separated by comma.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.CloseRegistration">
            <summary>
            Gets or sets the value indicating whether registration is closed after event date.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.SendRegistrationConfirmationEmail">
            <summary>
            Gets or sets the value indicating whether a confirmation email is sent when a participant registers.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.WaitingRoom">
            <summary>
            Gets or sets the value indicating whether to use a waiting room.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.GlobalDialInCountries">
            <summary>
            Gets or sets the list of global dial-in countries.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.ContactName">
            <summary>
            Gets or sets the contact name for registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.MeetingSettings.ContactEmail">
            <summary>
            Gets or sets the contact email for registration.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.MeetingStatus">
            <summary>
            Enumeration to indicate the status of a meeting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingStatus.Waiting">
            <summary>
            Waiting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingStatus.Started">
            <summary>
            Started.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingStatus.Finished">
            <summary>
            Finished.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.MeetingType">
            <summary>
            Enumeration to indicate the type of meeting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingType.Instant">
            <summary>
            Instant.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingType.Scheduled">
            <summary>
            Scheduled.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingType.RecurringNoFixedTime">
            <summary>
            Recurring meeting with no fixed time.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingType.Personal">
            <summary>
            Meeting was started using a Personal Meeting ID.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.MeetingType.RecurringFixedTime">
            <summary>
            Recurring meeting with fixed time.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.OAuthGrantType">
            <summary>
            Enumeration to indicate the OAuth grant type.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.OAuthGrantType.AuthorizationCode">
            <summary>
            Authorization code. This is the most commonly used grant type for Zoom APIs.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.OAuthGrantType.ClientCredentials">
            <summary>
            Client Credentials.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.OAuthGrantType.RefreshToken">
            <summary>
            Refresh token.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.PaginatedResponse`1">
            <summary>
            Pagination Object.
            </summary>
            <typeparam name="T">The type of records.</typeparam>
        </member>
        <member name="P:ZoomNet.Models.PaginatedResponse`1.PageCount">
            <summary>
            Gets or sets the number of items returned on this page.
            </summary>
            <value>The number of items returned on this page.</value>
        </member>
        <member name="P:ZoomNet.Models.PaginatedResponse`1.PageNumber">
            <summary>
            Gets or sets the page number of current results.
            </summary>
            <value>The page number of current results.</value>
        </member>
        <member name="P:ZoomNet.Models.PaginatedResponse`1.PageSize">
            <summary>
            Gets or sets the number of records returned within a single API call.
            </summary>
            <value>The number of records returned within a single API call.</value>
        </member>
        <member name="P:ZoomNet.Models.PaginatedResponse`1.TotalRecords">
            <summary>
            Gets or sets the number of all records available across pages.
            </summary>
            <value>The number of all records available across pages.</value>
        </member>
        <member name="P:ZoomNet.Models.PaginatedResponse`1.Records">
            <summary>
            Gets or sets the records.
            </summary>
            <value>The records.</value>
        </member>
        <member name="T:ZoomNet.Models.PaginatedResponseWithToken`1">
            <summary>
            Pagination Object.
            </summary>
            <typeparam name="T">The type of records.</typeparam>
        </member>
        <member name="P:ZoomNet.Models.PaginatedResponseWithToken`1.PageSize">
            <summary>
            Gets or sets the number of records returned within a single API call.
            </summary>
            <value>The number of records returned within a single API call.</value>
        </member>
        <member name="P:ZoomNet.Models.PaginatedResponseWithToken`1.TotalRecords">
            <summary>
            Gets or sets the number of all records available across pages.
            </summary>
            <value>The number of all records available across pages.</value>
        </member>
        <member name="P:ZoomNet.Models.PaginatedResponseWithToken`1.NextPageToken">
            <summary>
            Gets or sets the token to retrieve the next page.
            </summary>
            <value>The page token.</value>
            <remarks>This token expires after 15 minutes.</remarks>
        </member>
        <member name="P:ZoomNet.Models.PaginatedResponseWithToken`1.Records">
            <summary>
            Gets or sets the records.
            </summary>
            <value>The records.</value>
        </member>
        <member name="P:ZoomNet.Models.PaginatedResponseWithToken`1.MoreRecordsAvailable">
            <summary>
            Gets a value indicating whether more records are available.
            </summary>
            <value>true if more records are available; false otherwise.</value>
        </member>
        <member name="T:ZoomNet.Models.PaginatedResponseWithTokenAndDateRange`1">
            <summary>
            Pagination Object.
            </summary>
            <typeparam name="T">The type of records.</typeparam>
        </member>
        <member name="P:ZoomNet.Models.PaginatedResponseWithTokenAndDateRange`1.From">
            <summary>
            Gets or sets the start date for the report.
            </summary>
            <value> Start date for this report.</value>
        </member>
        <member name="P:ZoomNet.Models.PaginatedResponseWithTokenAndDateRange`1.To">
            <summary>
            Gets or sets the end date for the report.
            </summary>
            <value> End date for this report.</value>
        </member>
        <member name="T:ZoomNet.Models.Panelist">
            <summary>
            Panelist.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Panelist.Id">
            <summary>
            Gets or sets the panelist id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Panelist.Email">
            <summary>
            Gets or sets the panelist's email address.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Panelist.FullName">
            <summary>
            Gets or sets the panelist's full name.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Panelist.JoinUrl">
            <summary>
            Gets or sets the panelist's join URL.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Participant">
            <summary>
            Participant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Participant.Uuid">
            <summary>
            Gets or sets the participant uuid.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Participant.Email">
            <summary>
            Gets or sets the participant's email address.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Participant.DisplayName">
            <summary>
            Gets or sets the participant's display name.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ParticipantSharingDetails">
            <summary>
            Sharing and recording details of participants from live or past meetings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ParticipantSharingDetails.Id">
            <summary>
            Gets or sets the Universally unique identifier of the participant.
            </summary>
            <value>
            The Universally unique identifier of the participant.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ParticipantSharingDetails.UserId">
            <summary>
            Gets or sets the participant ID.
            </summary>
            <value>
            The participant ID.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ParticipantSharingDetails.UserName">
            <summary>
            Gets or sets the participant display name.
            </summary>
            <value>
            The participant display name.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ParticipantSharingDetails.SharingAndRecordingDetails">
            <summary>
            Gets or sets the sharing details.
            </summary>
            <value>
            An array of sharing and recording details.
            </value>
        </member>
        <member name="T:ZoomNet.Models.PasswordRequirements">
            <summary>
            Password requirements.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.PasswordRequirements.MinimumLength">
            <summary>
            Gets or sets the minimum required length.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.PasswordRequirements.MustHaveLetters">
            <summary>
            Gets or sets a value indicating whether password must contain at least one alphabetical letter.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.PasswordRequirements.MustHaveNumbers">
            <summary>
            Gets or sets a value indicating whether password must contain at least one number.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.PasswordRequirements.MustHaveSpecialCharacter">
            <summary>
            Gets or sets a value indicating whether password must contain at least one special character.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.PasswordRequirements.MustOnlyContainNumbers">
            <summary>
            Gets or sets a value indicating whether password must contain only numeric characters.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.PastInstance">
            <summary>
            A meeting or webinar instance that occured in the past.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.PastInstance.Uuid">
            <summary>
            Gets or sets the uuid.
            </summary>
            <value>
            The uuid.
            </value>
        </member>
        <member name="P:ZoomNet.Models.PastInstance.StartedOn">
            <summary>
            Gets or sets the date and time when the instance started.
            </summary>
            <value>The start time.</value>
        </member>
        <member name="T:ZoomNet.Models.PastMeeting">
            <summary>
            A meeting that occured in the past.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.PastMeeting.Uuid">
            <summary>
            Gets or sets the unique id.
            </summary>
            <value>
            The unique id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.PastMeeting.Id">
            <summary>
            Gets or sets the meeting id, also known as the meeting number.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.PastMeeting.HostId">
            <summary>
            Gets or sets the ID of the user who is set as the host of the meeting.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.PastMeeting.Topic">
            <summary>
            Gets or sets the topic of the meeting.
            </summary>
            <value>
            The topic.
            </value>
        </member>
        <member name="P:ZoomNet.Models.PastMeeting.Type">
            <summary>
            Gets or sets the meeting type.
            </summary>
            <value>The meeting type.</value>
        </member>
        <member name="P:ZoomNet.Models.PastMeeting.UserName">
            <summary>
            Gets or sets the user display name.
            </summary>
            <value>The user display name.</value>
        </member>
        <member name="P:ZoomNet.Models.PastMeeting.UserEmail">
            <summary>
            Gets or sets the user email.
            </summary>
            <value>The user email.</value>
        </member>
        <member name="P:ZoomNet.Models.PastMeeting.StartedOn">
            <summary>
            Gets or sets the date and time when the meeting started.
            </summary>
            <value>The meeting start time.</value>
        </member>
        <member name="P:ZoomNet.Models.PastMeeting.EndedOn">
            <summary>
            Gets or sets the date and time when the meeting ended.
            </summary>
            <value>The meeting end time.</value>
        </member>
        <member name="P:ZoomNet.Models.PastMeeting.Duration">
            <summary>
            Gets or sets the meeting duration in minutes.
            </summary>
            <value>The meeting duration.</value>
        </member>
        <member name="P:ZoomNet.Models.PastMeeting.TotalMinutes">
            <summary>
            Gets or sets the sum of meeting minutes from all participants.
            </summary>
            <value>The total meeting minutes.</value>
        </member>
        <member name="P:ZoomNet.Models.PastMeeting.ParticipantsCount">
            <summary>
            Gets or sets the number of participants.
            </summary>
            <value>The number of participants.</value>
        </member>
        <member name="T:ZoomNet.Models.PayMode">
            <summary>
            Enumeration to indicate who the payee is.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.PayMode.Master">
            <summary>
            Master account holder pays.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.PayMode.SubAccount">
            <summary>
            Sub account holder pays.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.PmiMeetingPasswordRequirementType">
            <summary>
            Enumeration to indicate when a password is required for personal meetings.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.PmiMeetingPasswordRequirementType.JbhOnly">
            <summary>
            Password is only necessary for JBH (???).
            </summary>
        </member>
        <member name="F:ZoomNet.Models.PmiMeetingPasswordRequirementType.Always">
            <summary>
            Password is always necessary.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.PmiMeetingPasswordRequirementType.Never">
            <summary>
            Password is never necessary.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Poll">
            <summary>
            A poll.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Poll.Id">
            <summary>
            Gets or sets the unique identifier.
            </summary>
            <value>
            The ID.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Poll.Status">
            <summary>
            Gets or sets the status of the poll.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Poll.Title">
            <summary>
            Gets or sets the title of the poll.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Poll.Questions">
            <summary>
            Gets or sets the questions.
            </summary>
            <value>
            The questions.
            </value>
        </member>
        <member name="T:ZoomNet.Models.PollAnswer">
            <summary>
            The answer to a question asked during a poll.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.PollAnswer.Question">
            <summary>
            Gets or sets the question asked during the poll.
            </summary>
            <value>
            The question.
            </value>
        </member>
        <member name="P:ZoomNet.Models.PollAnswer.Answer">
            <summary>
            Gets or sets the answer submitted by the participant.
            </summary>
            <value>
            The question.
            </value>
        </member>
        <member name="T:ZoomNet.Models.PollQuestion">
            <summary>
            The answer to a question asked during a poll.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.PollQuestion.Question">
            <summary>
            Gets or sets the question asked during the poll.
            </summary>
            <value>
            The question.
            </value>
        </member>
        <member name="P:ZoomNet.Models.PollQuestion.Type">
            <summary>
            Gets or sets the type of question.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:ZoomNet.Models.PollQuestion.Answers">
            <summary>
            Gets or sets the answers to the question.
            </summary>
            <value>
            The answers.
            </value>
        </member>
        <member name="T:ZoomNet.Models.PollResult">
            <summary>
            The result of a poll for a given participant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.PollResult.ParticipantName">
            <summary>
            Gets or sets the name of the user who submitted answers to the poll.
            </summary>
            <remarks>
            If "anonymous" option is enabled for a poll, the participant's polling information will be kept anonymous and the value of 'name' field will be "Anonymous Attendee".
            </remarks>
            <value>
            The name of the participant.
            </value>
        </member>
        <member name="P:ZoomNet.Models.PollResult.ParticipantEmail">
            <summary>
            Gets or sets the email address of the user who submitted answers to the poll.
            </summary>
            <value>
            The email address of the participant.
            </value>
        </member>
        <member name="P:ZoomNet.Models.PollResult.Details">
            <summary>
            Gets or sets the answers to questions asked during the poll.
            </summary>
            <value>
            The answers.
            </value>
        </member>
        <member name="T:ZoomNet.Models.PollStatus">
            <summary>
            Enumeration to indicate the status of a poll.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.PollStatus.NotStarted">
            <summary>
            Poll has not started.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.PollStatus.Started">
            <summary>
            Poll has started.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.PollStatus.Ended">
            <summary>
            Poll has ended.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.PollStatus.SharingResults">
            <summary>
            Sharing poll results.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.PresenceStatus">
            <summary>
            Enumeration to indicate the presence status of a user.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.PresenceStatus.Unknown">
            <summary>
            Unknown.
            </summary>
            <remarks>Default value</remarks>
        </member>
        <member name="F:ZoomNet.Models.PresenceStatus.DoNotDisturb">
            <summary>
            Do not disturb.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.PresenceStatus.Away">
            <summary>
            Away.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.PresenceStatus.Available">
            <summary>
            Available.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.PresenceStatus.Offline">
            <summary>
            Offline.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.QualityOfService.CpuUsage">
            <summary>
            CPU usage metrics.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.QualityOfService.CpuUsage.MinCpuUsage">
            <summary>
            Gets or sets the Zoom minimum cpu usage.
            </summary>
            <value>
            The minimum value for Zoom CPU usage.
            </value>
        </member>
        <member name="P:ZoomNet.Models.QualityOfService.CpuUsage.AverageCpuUsage">
            <summary>
            Gets or sets the Zoom average cpu usage.
            </summary>
            <value>
            The average value for Zoom CPU usage.
            </value>
        </member>
        <member name="P:ZoomNet.Models.QualityOfService.CpuUsage.MaxCpuUsage">
            <summary>
            Gets or sets the Zoom maximum cpu usage.
            </summary>
            <value>
            The maximum value for Zoom CPU usage.
            </value>
        </member>
        <member name="P:ZoomNet.Models.QualityOfService.CpuUsage.SystemMaxCpuUsage">
            <summary>
            Gets or sets the system maximum cpu usage.
            </summary>
            <value>
            The maximum value for system CPU usage.
            </value>
        </member>
        <member name="T:ZoomNet.Models.QualityOfService.PacketQualityOfServiceMetrics">
            <summary>
            Quality of service data.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.QualityOfService.PacketQualityOfServiceMetrics.Bitrate">
            <summary>
            Gets or sets the bitrate value.
            </summary>
            <value>
            Bitrate: The number of bits per second that can be transmitted along a digital network.
            </value>
        </member>
        <member name="P:ZoomNet.Models.QualityOfService.PacketQualityOfServiceMetrics.Latency">
            <summary>
            Gets or sets the latency value.
            </summary>
            <value>
            Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet.
            </value>
        </member>
        <member name="P:ZoomNet.Models.QualityOfService.PacketQualityOfServiceMetrics.Jitter">
            <summary>
            Gets or sets the jitter value.
            </summary>
            <value>
            Jitter: The variation in the delay of received packets.
            </value>
        </member>
        <member name="P:ZoomNet.Models.QualityOfService.PacketQualityOfServiceMetrics.AverageLoss">
            <summary>
            Gets or sets the average loss value.
            </summary>
            <value>
            Average Loss: The average amount of packet loss, that is the percentage of packets that fail to arrive at their destination.
            </value>
        </member>
        <member name="P:ZoomNet.Models.QualityOfService.PacketQualityOfServiceMetrics.MaxLoss">
            <summary>
            Gets or sets the max loss value.
            </summary>
            <value>
            Max Loss: The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
            </value>
        </member>
        <member name="T:ZoomNet.Models.QualityOfService.VideoQualityOfServiceMetrics">
            <summary>
            Quality of service data for video.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.QualityOfService.VideoQualityOfServiceMetrics.Resolution">
            <summary>
            Gets or sets the resolution value.
            </summary>
            <value>
            The video resolution.
            </value>
        </member>
        <member name="P:ZoomNet.Models.QualityOfService.VideoQualityOfServiceMetrics.FrameRate">
            <summary>
            Gets or sets the frame rate value.
            </summary>
            <value>
            The frame rate.
            </value>
        </member>
        <member name="T:ZoomNet.Models.QuestionType">
            <summary>
            Enumeration to indicate the type of poll question.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.QuestionType.SingleChoice">
            <summary>
            Single.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.QuestionType.MultipleChoice">
            <summary>
            Multiple.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Recording">
            <summary>
            A recording.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Recording.Uuid">
            <summary>Gets or sets the unique id.</summary>
            <value>The unique id.</value>
        </member>
        <member name="P:ZoomNet.Models.Recording.Id">
            <summary>Gets or sets the recording id.</summary>
            <value>The id.</value>
        </member>
        <member name="P:ZoomNet.Models.Recording.AccountId">
            <summary>Gets or sets the ID of the user account.</summary>
            <value>The account id.</value>
        </member>
        <member name="P:ZoomNet.Models.Recording.HostId">
            <summary>Gets or sets the ID of the user who is set as the host of the meeting.</summary>
            <value>The user id.</value>
        </member>
        <member name="P:ZoomNet.Models.Recording.Topic">
            <summary>Gets or sets the topic of the meeting.</summary>
            <value>The topic.</value>
        </member>
        <member name="P:ZoomNet.Models.Recording.StartTime">
            <summary>Gets or sets the date and time when the meeting started.</summary>
            <value>The start time.</value>
        </member>
        <member name="P:ZoomNet.Models.Recording.Duration">
            <summary>Gets or sets the meeting duration.</summary>
            <value> The duration.</value>
        </member>
        <member name="P:ZoomNet.Models.Recording.TotalSize">
            <summary>Gets or sets the total size of the recording.</summary>
            <value>The total size.</value>
        </member>
        <member name="P:ZoomNet.Models.Recording.FilesCount">
            <summary>Gets or sets the number of files.</summary>
            <value>The number of files.</value>
        </member>
        <member name="P:ZoomNet.Models.Recording.RecordingFiles">
            <summary>Gets or sets the recording files.</summary>
        </member>
        <member name="P:ZoomNet.Models.Recording.ShareUrl">
            <summary>Gets or sets the URL which can be used to share the recording.</summary>
            <value>The play URL.</value>
        </member>
        <member name="T:ZoomNet.Models.RecordingContentType">
            <summary>
            Enumeration to indicate the type of content in a recording file.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingContentType.NotSpecified">
            <summary>Not specified.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingContentType.SharedScreenWithSpeakerViewClosedCaptioned">
            <summary>Shared screen with speaker view closed captioned.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingContentType.SharedScreenWithSpeakerView">
            <summary>Shared screen with speaker view.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingContentType.SharedScreenWithGalleryView">
            <summary>Shared screen with gallery view.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingContentType.SpeakerView">
            <summary>Speaker view.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingContentType.GalleryView">
            <summary>Gallery view.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingContentType.SharedScreen">
            <summary>Shared screen.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingContentType.AudioOnly">
            <summary>Audio only.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingContentType.AudioTranscript">
            <summary>Audio transcript.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingContentType.ChatFile">
            <summary>Chat file.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingContentType.Timeline">
            <summary>timeline.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingContentType.ActiveSpeaker">
            <summary>Active speaker.</summary>
        </member>
        <member name="T:ZoomNet.Models.RecordingFile">
            <summary>
            A recording file.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingFile.Id">
            <summary>Gets or sets the recording file id.</summary>
            <value>The id.</value>
        </member>
        <member name="P:ZoomNet.Models.RecordingFile.MeetingId">
            <summary>Gets or sets the ID of the meeting.</summary>
            <value>The meeting id.</value>
        </member>
        <member name="P:ZoomNet.Models.RecordingFile.StartTime">
            <summary>Gets or sets the date and time when the recording started.</summary>
            <value>The start time.</value>
        </member>
        <member name="P:ZoomNet.Models.RecordingFile.EndTime">
            <summary>Gets or sets the date and time when the recording ended.</summary>
            <value>The end time.</value>
        </member>
        <member name="P:ZoomNet.Models.RecordingFile.FileType">
            <summary>Gets or sets the file type.</summary>
            <value>The file type.</value>
        </member>
        <member name="P:ZoomNet.Models.RecordingFile.Size">
            <summary>Gets or sets the size of the file.</summary>
            <value>The size.</value>
        </member>
        <member name="P:ZoomNet.Models.RecordingFile.PlayUrl">
            <summary>Gets or sets the URL which can be used to play the file.</summary>
            <value>The play URL.</value>
        </member>
        <member name="P:ZoomNet.Models.RecordingFile.DownloadUrl">
            <summary>Gets or sets the URL which can be used to download the file.</summary>
            <value>The download URL.</value>
        </member>
        <member name="P:ZoomNet.Models.RecordingFile.Status">
            <summary>Gets or sets the recording status.</summary>
            <value>The status.</value>
        </member>
        <member name="P:ZoomNet.Models.RecordingFile.DeleteTime">
            <summary>Gets or sets the date and time when the recording was deleted.</summary>
            <value>The delete time.</value>
            <remarks>Returned in the response only for trash query.</remarks>
        </member>
        <member name="P:ZoomNet.Models.RecordingFile.ContentType">
            <summary>Gets or sets the content type.</summary>
            <value>The content type.</value>
        </member>
        <member name="T:ZoomNet.Models.RecordingFileType">
            <summary>
            Enumeration to indicate the type of recording file.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingFileType.NotSpecified">
            <summary>Not specified.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingFileType.Video">
            <summary>Video.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingFileType.Audio">
            <summary>Audio only.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingFileType.Timeline">
            <summary>Timestamp file of the recording in JSON format.</summary>
            <remarks>To get a timeline file, the 'Add timestamp to the recording' setting must be enabled.</remarks>
        </member>
        <member name="F:ZoomNet.Models.RecordingFileType.Transcript">
            <summary>Transcription of the recording in VTT format.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingFileType.Chat">
            <summary>A text file containing in-meeting chat messages that were sent during the meeting.</summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingFileType.ClosedCaptioning">
            <summary>File contains closed captions of the recording in VTT file format.</summary>
        </member>
        <member name="T:ZoomNet.Models.RecordingRegistration">
            <summary>
            A registration for a recording.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingRegistration.RegistrantId">
            <summary>Gets or sets the registrant id.</summary>
            <value>The registrant id.</value>
        </member>
        <member name="P:ZoomNet.Models.RecordingRegistration.MeetingId">
            <summary>Gets or sets the meeting id.</summary>
            <value>The meeting id.</value>
        </member>
        <member name="P:ZoomNet.Models.RecordingRegistration.Topic">
            <summary>Gets or sets the meeting topic.</summary>
            <value>The topic.</value>
        </member>
        <member name="P:ZoomNet.Models.RecordingRegistration.ShareUrl">
            <summary>Gets or sets the URL for the on-demand recording.</summary>
            <value>The user id.</value>
        </member>
        <member name="T:ZoomNet.Models.RecordingSettings">
            <summary>
            Meeting recording settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingSettings.SharingType">
            <summary>
            Gets or sets the value indicating how the meeting recording is shared.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingSettings.RequiresAuthentication">
            <summary>
            Gets or sets a value indicating whether gets or sets the value indicating whether only authenticated user can view the recording.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingSettings.AuthenticationOptions">
            <summary>
            Gets or sets the authentication options.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingSettings.AllowDownload">
            <summary>
            Gets or sets a value indicating whether the recording can be downloaded.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingSettings.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingSettings.RegistrationRequired">
            <summary>
            Gets or sets a value indicating whether registration is required to view the recording.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingSettings.RegistrationApprovalType">
            <summary>
            Gets or sets the approval type for the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingSettings.NotifyHost">
            <summary>
            Gets or sets a value indicating whether to send an email to the host when someone registers to view the recording.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingSettings.ShowSocialShareButtons">
            <summary>
            Gets or sets a value indicating whether to show social share buttons on registration page.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.RecordingSharingType">
            <summary>
            Enumeration to indicate the type of audio available to attendees.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingSharingType.Publicly">
            <summary>
            Publicly.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingSharingType.Internally">
            <summary>
            Internally.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingSharingType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.RecordingType">
            <summary>
            Enumeration to indicate where the audio recording is saved.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingType.OnLocal">
            <summary>
            Record on local.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingType.OnCloud">
            <summary>
            Record on cloud.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RecordingType.Disabled">
            <summary>
            Do not record.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.RecordingUserSettings">
            <summary>
            Recording user settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingUserSettings.EnableLocalRecording">
            <summary>
            Gets or sets a value indicating whether to enable local recording.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingUserSettings.EnableCloudRecording">
            <summary>
            Gets or sets a value indicating whether to enable cloud recording.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingUserSettings.RecordSpeakerView">
            <summary>
            Gets or sets a value indicating whether to record the active speaker view.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingUserSettings.RecordGalleryView">
            <summary>
            Gets or sets a value indicating whether to record the gallery view.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingUserSettings.RecordAudioOnly">
            <summary>
            Gets or sets a value indicating whether to record an audio only file.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingUserSettings.SaveChatText">
            <summary>
            Gets or sets a value indicating whether to save chat text from the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingUserSettings.ShowTimestamp">
            <summary>
            Gets or sets a value indicating whether to show timestamp on video.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingUserSettings.AudioTranscript">
            <summary>
            Gets or sets a value indicating whether to audio transcript (???).
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingUserSettings.AutoRecording">
            <summary>
            Gets or sets the auto recording.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingUserSettings.AllowHostStopCloudRecording">
            <summary>
            Gets or sets a value indicating whether to allow the host to pause/stop the auto recording in the cloud.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingUserSettings.AutoDeleteCloudRecordings">
            <summary>
            Gets or sets a value indicating whether to automatically delete recording in the cloud.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingUserSettings.NumberOfDaysToKeepCloudRecordings">
            <summary>
            Gets or sets the number of days to keep a recording before automatically deleting it.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecordingUserSettings.PasswordRequirements">
            <summary>
            Gets or sets the password requirements.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.RecurrenceInfo">
            <summary>
            Recurrence.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecurrenceInfo.Type">
            <summary>
            Gets or sets the recurrence type.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecurrenceInfo.RepeatInterval">
            <summary>
            Gets or sets the interval should the meeting repeat.
            For a daily meeting, max of 90 days.
            For a weekly meeting, max of 12 weeks.
            For a monthly meeting, max of 3 months.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecurrenceInfo.WeeklyDays">
            <summary>
            Gets or sets the days of the week the meeting should repeat, multiple values separated by comma.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecurrenceInfo.MonthlyDay">
            <summary>
            Gets or sets the day of the month for the meeting to be scheduled.
            The value range is from 1 to 31.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecurrenceInfo.MonthlyWeek">
            <summary>
            Gets or sets the week for which the meeting should recur each month.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecurrenceInfo.MonthlyWeekDay">
            <summary>
            Gets or sets the day for which the meeting should recur each month.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecurrenceInfo.EndTimes">
            <summary>
            Gets or sets the select how many times the meeting will occur before it is canceled.
            Cannot be used with "end_date_time".
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecurrenceInfo.EndDateTime">
            <summary>
            Gets or sets the date the meeting will canceled.
            Cannot be used with "end_times".
            </summary>
        </member>
        <member name="T:ZoomNet.Models.RecurrenceType">
            <summary>
            Enumeration to indicate the type of recurrence.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RecurrenceType.Daily">
            <summary>
            Daily.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RecurrenceType.Weekly">
            <summary>
            Weekly.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RecurrenceType.Monthly">
            <summary>
            Monthly.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.RecurringMeeting">
            <summary>
            A meeting.
            </summary>
            <seealso cref="T:ZoomNet.Models.Meeting" />
        </member>
        <member name="P:ZoomNet.Models.RecurringMeeting.Timezone">
            <summary>
            Gets or sets the timezone.
            For example, "America/Los_Angeles".
            Please reference our <a href="https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones">timezone list</a> for supported timezones and their formats.
            </summary>
            <value>The meeting timezone. For example, "America/Los_Angeles". Please reference our <a href="https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones">timezone list</a> for supported timezones and their formats.</value>
        </member>
        <member name="P:ZoomNet.Models.RecurringMeeting.Occurrences">
            <summary>
            Gets or sets the occurrences.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecurringMeeting.RecurrenceInfo">
            <summary>
            Gets or sets the recurrence info.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.RecurringWebinar">
            <summary>
            A meeting.
            </summary>
            <seealso cref="T:ZoomNet.Models.Webinar" />
        </member>
        <member name="P:ZoomNet.Models.RecurringWebinar.Occurrences">
            <summary>
            Gets or sets the occurrences.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RecurringWebinar.RecurrenceInfo">
            <summary>
            Gets or sets the recurrence info.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Registrant">
            <summary>
            Registrant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.Id">
            <summary>
            Gets or sets the registrant id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Registrant.Email">
            <summary>
            Gets or sets a valid email address.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.Address">
            <summary>
            Gets or sets the address.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.City">
            <summary>
            Gets or sets the city.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.Country">
            <summary>
            Gets or sets the country.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.Zip">
            <summary>
            Gets or sets the zip/postal Code.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.State">
            <summary>
            Gets or sets the state/Province.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.Phone">
            <summary>
            Gets or sets the phone.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.Industry">
            <summary>
            Gets or sets the industry.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.Organization">
            <summary>
            Gets or sets the organization.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.JobTitle">
            <summary>
            Gets or sets the job Title.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.PurchasingTimeFrame">
            <summary>
            Gets or sets the purchasing Time Frame.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.RoleInPurchaseProcess">
            <summary>
            Gets or sets the role in purchase process.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.NumberOfEmployees">
            <summary>
            Gets or sets the number of employees.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.Comments">
            <summary>
            Gets or sets the questions &amp; comments.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.CustomQuestions">
            <summary>
            Gets or sets the custom questions.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.Status">
            <summary>
            Gets or sets the status.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Registrant.CreatedOn">
            <summary>
            Gets or sets the date and time when the registrant was created.
            </summary>
            <value>The registrant created time.</value>
        </member>
        <member name="P:ZoomNet.Models.Registrant.JoinUrl">
            <summary>
            Gets or sets the URL for this registrant to join the meeting.
            </summary>
            <value>The join URL.</value>
        </member>
        <member name="T:ZoomNet.Models.RegistrantInfo">
            <summary>
            Registrant info.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RegistrantInfo.Id">
            <summary>
            Gets or sets the registrant id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.RegistrantInfo.WebinarId">
            <summary>
            Gets or sets the webinar id.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RegistrantInfo.StartTime">
            <summary>
            Gets or sets the start time.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.RegistrantInfo.JoinUrl">
            <summary>
            Gets or sets the URL for this registrant to join the webinar.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.RegistrantStatus">
            <summary>
            Enumeration to indicate the status of a registrant.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RegistrantStatus.Pending">
            <summary>
            Pending.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RegistrantStatus.Approved">
            <summary>
            Approved.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.RegistrantStatus.Denied">
            <summary>
            Denied.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ScheduledMeeting">
            <summary>
            A scheduled meeting.
            </summary>
            <seealso cref="T:ZoomNet.Models.Meeting" />
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeeting.StartTime">
            <summary>
            Gets or sets the meeting start time.
            </summary>
            <value>The meeting start time. Only used for scheduled meetings and recurring meetings with fixed time.</value>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeeting.Duration">
            <summary>
            Gets or sets the meeting duration in minutes.
            </summary>
            <value>The meeting duration in minutes.</value>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeeting.Timezone">
            <summary>
            Gets or sets the timezone.
            For example, "America/Los_Angeles".
            Please reference our <a href="https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones">timezone list</a> for supported timezones and their formats.
            </summary>
            <value>The meeting timezone. For example, "America/Los_Angeles". Please reference our <a href="https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones">timezone list</a> for supported timezones and their formats.</value>
        </member>
        <member name="T:ZoomNet.Models.ScheduledMeetingUserSettings">
            <summary>
            Scheduled Meeting user settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.StartVideoWhenHostJoins">
            <summary>
            Gets or sets a value indicating whether to start video when host joins the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.StartVideoWhenParticipantsJoin">
            <summary>
            Gets or sets a value indicating whether to start video when participants join the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.Audio">
            <summary>
            Gets or sets a value indicating how participants can join the audio portion of the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.JoinBeforeHost">
            <summary>
            Gets or sets a value indicating whether participants can join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.PasswordRequiredToJoinBeforeHost">
            <summary>
            Gets or sets a value indicating whether a password is required if attendees can join before host.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.PasswordRequiredToJoinByPhone">
            <summary>
            Gets or sets a value indicating whether a password is required for participants joining by phone.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.UsePmiForScheduledMeetings">
            <summary>
            Gets or sets a value indicating whether to use Personal Meeting ID when scheduling a meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.UsePmiForInstantMeetings">
            <summary>
            Gets or sets a value indicating whether to use Personal Meeting ID when starting an instant meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.RequirePasswordForSchedulingNewMeetings">
            <summary>
            Gets or sets a value indicating whether a password is required when scheduling a new meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.RequirePasswordForScheduledMeetings">
            <summary>
            Gets or sets a value indicating whether a password is required for meeting that have already been scheduled.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.DefaultPasswordForSchedulingMeetings">
            <summary>
            Gets or sets the default password for scheduled meetings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.RequirePasswordForInstantMeetings">
            <summary>
            Gets or sets a value indicating whether a password is required for instant meetings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.RequirePasswordForPmiMeetings">
            <summary>
            Gets or sets a value indicating whether a password is required for meeting that have already been scheduled.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.PmiPassword">
            <summary>
            Gets or sets the PMI password.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.EmbedPasswordInJoinLink">
            <summary>
            Gets or sets a value indicating whether the meeting password will be encrypted and included in the join meeting link.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.PasswordRequirements">
            <summary>
            Gets or sets the password requirements.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScheduledMeetingUserSettings.EnablePersonalMeetingId">
            <summary>
            Gets or sets a value indicating whether the meeting password will be encrypted and included in the join meeting link.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ScheduledWebinar">
            <summary>
            A scheduled webinar.
            </summary>
            <seealso cref="T:ZoomNet.Models.Webinar" />
        </member>
        <member name="P:ZoomNet.Models.ScheduledWebinar.StartTime">
            <summary>
            Gets or sets the webinar start time.
            </summary>
            <value>The webinar start time.</value>
        </member>
        <member name="P:ZoomNet.Models.ScheduledWebinar.Timezone">
            <summary>
            Gets or sets the timezone.
            For example, "America/Los_Angeles".
            Please reference our <a href="https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones">timezone list</a> for supported timezones and their formats.
            </summary>
            <value>The webinar timezone. For example, "America/Los_Angeles". Please reference our <a href="https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones">timezone list</a> for supported timezones and their formats.</value>
        </member>
        <member name="T:ZoomNet.Models.ScreenshareContentType">
            <summary>
            Enumeration to indicate the type content share in a meeting/webinar.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ScreenshareContentType.Application">
            <summary>
            Application.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ScreenshareContentType.Whiteboard">
            <summary>
            Whiteboard.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.ScreenshareContentType.Desktop">
            <summary>
            Desktop.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.ScreenshareDetails">
            <summary>
            Details of a screensharing by a participant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScreenshareDetails.ContentType">
            <summary>
            Gets or sets the type of content shared. Allowed values: application, whiteboard, desktop.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScreenshareDetails.Source">
            <summary>
            Gets or sets the source.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScreenshareDetails.SharingMethod">
            <summary>
            Gets or sets the method of sharing for dropbox integration. Allowed values: deep_link, in_meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScreenshareDetails.Link">
            <summary>
            Gets or sets the link using which the file was shared via dropbox integration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ScreenshareDetails.Date">
            <summary>
            Gets or sets the date and time during which the screenshare happened.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.SharingAndRecordingDetail">
            <summary>
            Details of a sharing or recording by a meeting participant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.SharingAndRecordingDetail.Content">
            <summary>
            Gets or sets the type of content shared.
            </summary>
            <value>
            The type of content of the sharing/recording.
            </value>
        </member>
        <member name="P:ZoomNet.Models.SharingAndRecordingDetail.StartTime">
            <summary>
            Gets or sets the start time of the sharing.
            </summary>
            <value>
            The start time of the sharing.
            </value>
        </member>
        <member name="P:ZoomNet.Models.SharingAndRecordingDetail.EndTime">
            <summary>
            Gets or sets the end time of the sharing.
            </summary>
            <value>
            The end time of the sharing.
            </value>
        </member>
        <member name="T:ZoomNet.Models.TelephonyUserSettings">
            <summary>
            Telephony user settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.TelephonyUserSettings.AllowThirdPartyAudio">
            <summary>
            Gets or sets a value indicating whether third party audio is permitted.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.TelephonyUserSettings.ThirdPartyAudioInfo">
            <summary>
            Gets or sets the information about the third party audio service.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.TelephonyUserSettings.ShowInternationalNumbersInInvitation">
            <summary>
            Gets or sets a value indicating whether to show the international numbers link on the invitation email.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Template">
            <summary>
            Details of a webinar template.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Template.Id">
            <summary>
            Gets or sets the Id of the template.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Template.Name">
            <summary>
            Gets or sets the Name of the template.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.TimeZones">
            <summary>
            Enumeration pf the time zones supported by Zoom.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Pacific_Midway">
            <summary>Midway Island, Samoa.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Pacific_Pago_Pago">
            <summary>Pago Pago.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Pacific_Honolulu">
            <summary>Hawaii.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Anchorage">
            <summary>Alaska.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Vancouver">
            <summary>Vancouver.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Los_Angeles">
            <summary>Pacific Time (US and Canada).</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Tijuana">
            <summary>Tijuana.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Edmonton">
            <summary>Edmonton.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Denver">
            <summary>Mountain Time (US and Canada).</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Phoenix">
            <summary>Arizona.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Mazatlan">
            <summary>Mazatlan.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Winnipeg">
            <summary>Winnipeg.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Regina">
            <summary>Saskatchewan.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Chicago">
            <summary>Central Time (US and Canada).</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Mexico_City">
            <summary>Mexico City.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Guatemala">
            <summary>Guatemala.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_El_Salvador">
            <summary>El Salvador.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Managua">
            <summary>Managua.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Costa_Rica">
            <summary>Costa Rica.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Montreal">
            <summary>Montreal.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_New_York">
            <summary>Eastern Time (US and Canada).</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Indianapolis">
            <summary>Indiana (East).</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Panama">
            <summary>Panama.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Bogota">
            <summary>Bogota.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Lima">
            <summary>Lima.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Halifax">
            <summary>Halifax.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Puerto_Rico">
            <summary>Puerto Rico.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Caracas">
            <summary>Caracas.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Santiago">
            <summary>Santiago.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_St_Johns">
            <summary>Newfoundland and Labrador.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Montevideo">
            <summary>Montevideo.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Araguaina">
            <summary>Brasilia.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Argentina_Buenos_Aires">
            <summary>Buenos Aires, Georgetown.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Godthab">
            <summary>Greenland.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Sao_Paulo">
            <summary>Sao Paulo.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Atlantic_Azores">
            <summary>Azores.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Canada_Atlantic">
            <summary>Atlantic Time (Canada).</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Atlantic_Cape_Verde">
            <summary>Cape Verde Islands.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.UTC">
            <summary>Universal Time UTC.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Etc_Greenwich">
            <summary>Greenwich Mean Time.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Belgrade">
            <summary>Belgrade, Bratislava, Ljubljana.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.CET">
            <summary>Sarajevo, Skopje, Zagreb.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Atlantic_Reykjavik">
            <summary>Reykjavik.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Dublin">
            <summary>Dublin.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_London">
            <summary>London.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Lisbon">
            <summary>Lisbon.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Africa_Casablanca">
            <summary>Casablanca.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Africa_Nouakchott">
            <summary>Nouakchott.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Oslo">
            <summary>Oslo.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Copenhagen">
            <summary>Copenhagen.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Brussels">
            <summary>Brussels.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Berlin">
            <summary>Amsterdam, Berlin, Rome, Stockholm, Vienna.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Helsinki">
            <summary>Helsinki.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Amsterdam">
            <summary>Amsterdam.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Rome">
            <summary>Rome.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Stockholm">
            <summary>Stockholm.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Vienna">
            <summary>Vienna.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Luxembourg">
            <summary>Luxembourg.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Paris">
            <summary>Paris.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Zurich">
            <summary>Zurich.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Madrid">
            <summary>Madrid.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Africa_Bangui">
            <summary>West Central Africa.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Africa_Algiers">
            <summary>Algiers.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Africa_Tunis">
            <summary>Tunis.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Africa_Harare">
            <summary>Harare, Pretoria.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Africa_Nairobi">
            <summary>Nairobi.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Warsaw">
            <summary>Warsaw.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Prague">
            <summary>Prague Bratislava.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Budapest">
            <summary>Budapest.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Sofia">
            <summary>Sofia.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Istanbul">
            <summary>Istanbul.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Athens">
            <summary>Athens.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Bucharest">
            <summary>Bucharest.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Nicosia">
            <summary>Nicosia.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Beirut">
            <summary>Beirut.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Damascus">
            <summary>Damascus.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Jerusalem">
            <summary>Jerusalem.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Amman">
            <summary>Amman.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Africa_Tripoli">
            <summary>Tripoli.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Africa_Cairo">
            <summary>Cairo.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Africa_Johannesburg">
            <summary>Johannesburg.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Moscow">
            <summary>Moscow.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Baghdad">
            <summary>Baghdad.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Kuwait">
            <summary>Kuwait.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Riyadh">
            <summary>Riyadh.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Bahrain">
            <summary>Bahrain.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Qatar">
            <summary>Qatar.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Aden">
            <summary>Aden.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Tehran">
            <summary>Tehran.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Africa_Khartoum">
            <summary>Khartoum.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Africa_Djibouti">
            <summary>Djibouti.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Africa_Mogadishu">
            <summary>Mogadishu.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Dubai">
            <summary>Dubai.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Muscat">
            <summary>Muscat.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Baku">
            <summary>Baku, Tbilisi, Yerevan.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Kabul">
            <summary>Kabul.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Yekaterinburg">
            <summary>Yekaterinburg.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Tashkent">
            <summary>Islamabad, Karachi, Tashkent.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Calcutta">
            <summary>India.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Kathmandu">
            <summary>Kathmandu.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Novosibirsk">
            <summary>Novosibirsk.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Almaty">
            <summary>Almaty.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Dacca">
            <summary>Dacca.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Krasnoyarsk">
            <summary>Krasnoyarsk.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Dhaka">
            <summary>Astana, Dhaka.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Bangkok">
            <summary>Bangkok.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Saigon">
            <summary>Vietnam.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Jakarta">
            <summary>Jakarta.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Irkutsk">
            <summary>Irkutsk, Ulaanbaatar.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Shanghai">
            <summary>Beijing, Shanghai.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Hong_Kong">
            <summary>Hong Kong.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Taipei">
            <summary>Taipei.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Kuala_Lumpur">
            <summary>Kuala Lumpur.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Singapore">
            <summary>Singapore.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Australia_Perth">
            <summary>Perth.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Yakutsk">
            <summary>Yakutsk.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Seoul">
            <summary>Seoul.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Tokyo">
            <summary>Osaka, Sapporo, Tokyo.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Australia_Darwin">
            <summary>Darwin.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Australia_Adelaide">
            <summary>Adelaide.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Vladivostok">
            <summary>Vladivostok.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Pacific_Port_Moresby">
            <summary>Guam, Port Moresby.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Australia_Brisbane">
            <summary>Brisbane.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Australia_Sydney">
            <summary>Canberra, Melbourne, Sydney.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Australia_Hobart">
            <summary>Hobart.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Magadan">
            <summary>Magadan.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.SST">
            <summary>Solomon Islands.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Pacific_Noumea">
            <summary>New Caledonia.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Kamchatka">
            <summary>Kamchatka.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Pacific_Fiji">
            <summary>Fiji Islands, Marshall Islands.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Pacific_Auckland">
            <summary>Auckland, Wellington.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Asia_Kolkata">
            <summary>Mumbai, Kolkata, New Delhi.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Europe_Kiev">
            <summary>Kiev.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.America_Tegucigalpa">
            <summary>Tegucigalpa.</summary>
        </member>
        <member name="F:ZoomNet.Models.TimeZones.Pacific_Apia">
            <summary>Independent State of Samoa.</summary>
        </member>
        <member name="T:ZoomNet.Models.TrackingSource">
            <summary>
            Tracking Source.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.TrackingSource.Id">
            <summary>
            Gets or sets the unique identifier.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.TrackingSource.Name">
            <summary>
            Gets or sets the name of the source (platform) where the registration URL was shared.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.TrackingSource.TrackingUrl">
            <summary>
            Gets or sets the URL that was shared for the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.TrackingSource.VisitorCount">
            <summary>
            Gets or sets the number of visitors who visited the registration page from this source.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.TspUserSettings">
            <summary>
            TSP user settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.TspUserSettings.CallOut">
            <summary>
            Gets or sets a value indicating whether call out or not.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.TspUserSettings.CallOutCountries">
            <summary>
            Gets or sets the call out countries/regions.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.TspUserSettings.ShowInternationalNumbersInInvitation">
            <summary>
            Gets or sets a value indicating whether to show the international numbers link on the invitation email.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.User">
            <summary>
            User.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.Id">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.User.Email">
            <summary>
            Gets or sets a valid email address.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.PersonalMeetingId">
            <summary>
            Gets or sets the personal meeting id.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.UsePersonalMeetingId">
            <summary>
            Gets or sets a value indicating whether the PMI is used for instant meetings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.Timezone">
            <summary>
            Gets or sets the timezone.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.Department">
            <summary>
            Gets or sets the department.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.CreatedOn">
            <summary>
            Gets or sets the date and time when the user was created.
            </summary>
            <value>The user created time.</value>
        </member>
        <member name="P:ZoomNet.Models.User.LastLogin">
            <summary>
            Gets or sets the date and time when the user last logged in.
            </summary>
            <value>The login time.</value>
        </member>
        <member name="P:ZoomNet.Models.User.LastLoginClientVersion">
            <summary>
            Gets or sets the last login client version.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.Language">
            <summary>
            Gets or sets the language for the Zoom Web Portal.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.PhoneCountry">
            <summary>
            Gets or sets the country for Company Phone Number.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.PhoneNumber">
            <summary>
            Gets or sets the phone number.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.VanityUrl">
            <summary>
            Gets or sets the personal meeting room URL, if the user has one.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.PersonalMeetingUrl">
            <summary>
            Gets or sets the personal meeting URL.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.IsVerified">
            <summary>
            Gets or sets a value indicating whether the user is verified or not.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.ProfilePictureUrl">
            <summary>
            Gets or sets the URL for the profile picture.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.CmsUserId">
            <summary>
            Gets or sets the CMS ID.
            </summary>
            <remarks>
            Only enabled for Kaltura integration.
            </remarks>
        </member>
        <member name="P:ZoomNet.Models.User.AccountId">
            <summary>
            Gets or sets the account id.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.HostKey">
            <summary>
            Gets or sets the host key.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.Status">
            <summary>
            Gets or sets the status.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.GroupIds">
            <summary>
            Gets or sets the group ids.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.ImGroupIds">
            <summary>
            Gets or sets the IM group ids.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.JId">
            <summary>
            Gets or sets the ???.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.JobTitle">
            <summary>
            Gets or sets the job title.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.Company">
            <summary>
            Gets or sets the company.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.User.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.UserCreateType">
            <summary>
            Enumeration to specify how to create a new user.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.UserCreateType.Normal">
            <summary>
            User will get an email sent from Zoom.
            There is a confirmation link in this email.
            User will then need to click this link to activate their account to the Zoom service.
            The user can set or change their password in Zoom.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.UserCreateType.Auto">
            <summary>
            This action is provided for enterprise customer who has a managed domain.
            This feature is disabled by default because of the security risk involved in creating a user who does not belong to your domain without notifying the user.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.UserCreateType.Cust">
            <summary>
            This action is provided for API partner only.
            User created in this way has no password and is not able to log into the Zoom web site or client.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.UserCreateType.SSo">
            <summary>
            This action is provided for enabled "Pre-provisioning SSO User" option.
            User created in this way has no password.
            If it is not a basic user, will generate a Personal Vanity URL using user name (no domain) of the provisioning email.
            If user name or pmi is invalid or occupied, will use random number/random personal vanity URL.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.UserSettings">
            <summary>
            User settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.UserSettings.ScheduledMeeting">
            <summary>
            Gets or sets the settings for scheduled meetings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:ZoomNet.Models.UserSettings.InstantMeeting">
            <summary>
            Gets or sets the settings for instant meetings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:ZoomNet.Models.UserSettings.EmailNotification">
            <summary>
            Gets or sets the settings for email notification.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:ZoomNet.Models.UserSettings.Recordings">
            <summary>
            Gets or sets the settings for recordings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:ZoomNet.Models.UserSettings.Telephony">
            <summary>
            Gets or sets the settings for telephony.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:ZoomNet.Models.UserSettings.Feature">
            <summary>
            Gets or sets the settings for feature.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:ZoomNet.Models.UserSettings.Tsp">
            <summary>
            Gets or sets the settings for TSP.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="T:ZoomNet.Models.UserStatus">
            <summary>
            Enumeration to indicate the status of a user.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.UserStatus.Active">
            <summary>
            Active.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.UserStatus.Inactive">
            <summary>
            Inactive.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.UserStatus.Pending">
            <summary>
            Pending.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.UserType">
            <summary>
            Enumeration to indicate the type of a user.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.UserType.Basic">
            <summary>
            Basic.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.UserType.Licensed">
            <summary>
            Licensed.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.UserType.OnPremise">
            <summary>
            On-premise.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.WebhookParticipant">
             <summary>
             Participant (for webhooks).
             </summary>
             <remarks>
             This class is use to parse the participant information included in webhook JSON payloads.
             It is very similar to the <see cref="T:ZoomNet.Models.Participant"/> class but there are a few notable differences.
            
             For instance:
             - the JSON payload uses "email" instead of "user_email".
             - the JSON payload uses "user_name" instead of "name".
             - the JSON payload uses "email" instead of "user_email".
             - the JSON payload includes a "user_id" property which contains the participant identifier and a "id" property which contains the UserId.
             </remarks>
        </member>
        <member name="P:ZoomNet.Models.WebhookParticipant.ParticipantId">
            <summary>
            Gets or sets the unique participant identifier.
            </summary>
            <remarks>
            This is unique for each meeting participant and is valid only for that meeting.
            </remarks>
        </member>
        <member name="P:ZoomNet.Models.WebhookParticipant.DisplayName">
            <summary>
            Gets or sets the participant's display name.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebhookParticipant.UserId">
            <summary>
            Gets or sets the user id of the participant.
            </summary>
            <remarks>
            Same as the User Id used in the Users API if p[articipant oined the meeting by logging in.
            </remarks>
        </member>
        <member name="P:ZoomNet.Models.WebhookParticipant.Email">
            <summary>
            Gets or sets the participant's email address.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.AppDeauthorizedEvent">
            <summary>
            This event is triggered when a user uninstalls or deauthorizes your app.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.AppDeauthorizedEvent.AccountId">
            <summary>
            Gets or sets the unique identifier of the account in wich the event occured.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.AppDeauthorizedEvent.UserId">
            <summary>
            Gets or sets the user Id.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.AppDeauthorizedEvent.ClientId">
            <summary>
            Gets or sets the app's client Id.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.AppDeauthorizedEvent.CanPreserveUserData">
            <summary>
            Gets or sets a value indicating whether the user has authorized you to store their data even after they uninstall your app.
            If the value is 'false', you must delete the user's data and call the [Data Compliance API](https://marketplace.zoom.us/docs/api-reference/zoom-api/data-compliance/compliance) within ten days of receiving the deauthorization webhook.
            If the value is 'true', no further action is required on your end.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.AppDeauthorizedEvent.DeauthorizationTime">
            <summary>
            Gets or sets the time at which the user uninstalled your app.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.AppDeauthorizedEvent.Signature">
            <summary>
            Gets or sets the unique identifier for each instance of deauthorization / app uninstallation done by a user.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.Event">
            <summary>
            Represents a generic event.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.Event.EventType">
            <summary>
            Gets or sets the type of event.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.Event.Timestamp">
            <summary>
            Gets or sets the timestamp at which the event occured.
            </summary>
            <remarks>
            This field represents the timestamp for when the associated event occurred.
            If you keep track of notification delivery timestamp in your application, you
            can determine the latency in webhook delivery by calculating the difference
            between the delivery timestamp and the value of the event_ts parameter.
            </remarks>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.EventType">
            <summary>
            Enumeration to indicate the type of webhook event.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.Unknown">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.AppDeauthorized">
            <summary>
            A user has uninstalled or deauthorized your app.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingServiceIssue">
            <summary>
            A service issue has been encountered during a meeting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingCreated">
            <summary>
            A meeting has been created.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingDeleted">
            <summary>
            A meeting has been deleted.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingUpdated">
            <summary>
            A meeting has been updated.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingPermanentlyDeleted">
            <summary>
            A meeting has been permanently deleted.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingStarted">
            <summary>
            A meeting has started.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingEnded">
            <summary>
            A meeting has ended.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingRecovered">
            <summary>
            A meeting has been recovered.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingRegistrationCreated">
            <summary>
            A participant has registered for a meeting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingRegistrationApproved">
            <summary>
            A meeting registration has been approved.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingRegistrationCancelled">
            <summary>
            A meeting registration has been cancelled.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingRegistrationDenied">
            <summary>
            A meeting registration has been denied.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingSharingStarted">
            <summary>
            An attendee or the host has started sharing their screen during a meeting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingSharingEnded">
            <summary>
            An attendee or the host has stoped sharing their screen during a meeting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingParticipantWaitingForHost">
            <summary>
            An attendee is wating for the host to join the meeting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingParticipantJoinedBeforeHost">
            <summary>
            An attendee has joined the meeting before the host.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingParticipantJoinedWaitingRoom">
            <summary>
            An attendee has joined a meting waiting room.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingParticipantLeftWaitingRoom">
            <summary>
            An attendee has left a meting waiting room.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingParticipantAdmitted">
            <summary>
            A meeting host has admitted a participant from a waiting room to the meeting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingParticipantJoined">
            <summary>
            A meeting host has admitted a participant from a waiting room to the meeting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingParticipantSentToWaitingRoom">
            <summary>
            A meeting participant who has already joined a meeting is sent back to the waiting room during the meeting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingParticipantLeft">
            <summary>
            A meeting participant has left the meeting.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingLiveStreamStarted">
            <summary>
            A meeting live stream has started.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.MeetingLiveStreamStopped">
            <summary>
            A meeting live stream has stoipped.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarCreated">
            <summary>
            A webinar has been created.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarDeleted">
            <summary>
            A webinar has been deleted.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarUpdated">
            <summary>
            A webinar has been updated.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarStarted">
            <summary>
            A webinar has started.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarEnded">
            <summary>
            A webinar has ended.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarServiceIssue">
            <summary>
            A service issue has been encountered during a webinar.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarRegistrationCreated">
            <summary>
            A participant has registered for a webinar.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarRegistrationApproved">
            <summary>
            A webinar registration has been approved.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarRegistrationCancelled">
            <summary>
            A webinar registration has been cancelled.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarRegistrationDenied">
            <summary>
            A webinar registration has been denied.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarSharingStarted">
            <summary>
            An app user or account user has started sharing their screen during a webinar.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarSharingEnded">
            <summary>
            An app user or account user has stopped sharing their screen during a webinar.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarParticipantJoined">
            <summary>
            A webinar host or participant joined a webinar.
            </summary>
        </member>
        <member name="F:ZoomNet.Models.Webhooks.EventType.WebinarParticipantLeft">
            <summary>
            A webinar host or participant left a webinar.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingCreatedEvent">
            <summary>
            This event is triggered when a meeting is created.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingCreatedEvent.Operator">
            <summary>
            Gets or sets the email address of the user who created the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingCreatedEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who created the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingCreatedEvent.Operation">
            <summary>
            Gets or sets the operation (allowed values: all, single).
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingDeletedEvent">
            <summary>
            This event is triggered when a meeting is deleted.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingDeletedEvent.Operator">
            <summary>
            Gets or sets the email address of the user who deleted the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingDeletedEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who deleted the meeting.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingEndedEvent">
            <summary>
            This event is triggered when a meeting has ended.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingEvent">
            <summary>
            Represents an event related to a meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingEvent.AccountId">
            <summary>
            Gets or sets the unique identifier of the account in wich the event occured.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingEvent.Meeting">
            <summary>
            Gets or sets the meeting object.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingLiveStreamStartedEvent">
            <summary>
            This event is triggered when a meeting live stream started.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingLiveStreamStartedEvent.Operator">
            <summary>
            Gets or sets the email address of the user who started the live stream.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingLiveStreamStartedEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the user who started the live stream.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingLiveStreamStartedEvent.StartedOn">
            <summary>
            Gets or sets the date and time at which the live stream started.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingLiveStreamStartedEvent.StreamingInfo">
            <summary>
            Gets or sets the information about live stream.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingLiveStreamStoppedEvent">
            <summary>
            This event is triggered when a meeting live stream stopped.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingLiveStreamStoppedEvent.Operator">
            <summary>
            Gets or sets the email address of the user who stopped the live stream.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingLiveStreamStoppedEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the user who stopped the live stream.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingLiveStreamStoppedEvent.StoppedOn">
            <summary>
            Gets or sets the date and time at which the live stream stopped.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingLiveStreamStoppedEvent.StreamingInfo">
            <summary>
            Gets or sets the information about live stream.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingParticipantAdmittedEvent">
            <summary>
            This event is triggered when a meeting host admits the participant from a waiting room to the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantAdmittedEvent.AdmittedOn">
            <summary>
            Gets or sets the date and time at which the participant has been admitted to the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantAdmittedEvent.Participant">
            <summary>
            Gets or sets the participant.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingParticipantJoinedBeforeHostEvent">
            <summary>
            This event is triggered when a meeting participant joins a meeting before the host.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantJoinedBeforeHostEvent.Participant">
            <summary>
            Gets or sets the participant.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingParticipantJoinedEvent">
            <summary>
            This event is triggered when an attendee joins a meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantJoinedEvent.JoinedOn">
            <summary>
            Gets or sets the date and time at which the participant joined the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantJoinedEvent.Participant">
            <summary>
            Gets or sets the participant.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingParticipantJoinedWaitingRoomEvent">
            <summary>
            This event is triggered when a meeting participant joins a waiting room prior to being admitted to the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantJoinedWaitingRoomEvent.JoinedOn">
            <summary>
            Gets or sets the date and time at which the participant joined the waiting room.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantJoinedWaitingRoomEvent.Participant">
            <summary>
            Gets or sets the participant.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingParticipantLeftEvent">
            <summary>
            This event is triggered when a meeting participant leaves the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantLeftEvent.LeftOn">
            <summary>
            Gets or sets the date and time at which the participant left the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantLeftEvent.Participant">
            <summary>
            Gets or sets the participant.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingParticipantLeftWaitingRoomEvent">
            <summary>
            This event is triggered when a meeting host decides not to admit the participant to the meeting and removes the participant from the waiting room.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantLeftWaitingRoomEvent.LeftOn">
            <summary>
            Gets or sets the date and time at which the participant left the waiting room.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantLeftWaitingRoomEvent.Participant">
            <summary>
            Gets or sets the participant.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingParticipantSentToWaitingRoomEvent">
            <summary>
            This event is triggered when a meeting participant who has already joined the meeting is sent back to the waiting room during the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantSentToWaitingRoomEvent.SentToWaitingRoomOn">
            <summary>
            Gets or sets the date and time at which the participant was sent to the waiting room.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantSentToWaitingRoomEvent.Participant">
            <summary>
            Gets or sets the participant.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingParticipantWaitingForHostEvent">
            <summary>
            This event is triggered when a meeting participant is waiting fpor the host to join a meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingParticipantWaitingForHostEvent.Participant">
            <summary>
            Gets or sets the participant.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingPermanentlyDeletedEvent">
            <summary>
            This event is triggered when a meeting is permanently deleted.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingPermanentlyDeletedEvent.Operator">
            <summary>
            Gets or sets the email address of the user who deleted the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingPermanentlyDeletedEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who deleted the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingPermanentlyDeletedEvent.Operation">
            <summary>
            Gets or sets the operation.
            While permanently deleting a **recurring** meeting, users will have the option to recover either a single occurrence of the meeting or all occurrences of the meeting.
            The value of this field can be one of the following:
            - `all`: All occurrences of the recurring meeting were permanently deleted.
            - `single`: Only one occurrence of the recurring meeting was deleted.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingRecoveredEvent">
            <summary>
            This event is triggered when a meeting has been recovered.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingRecoveredEvent.Operator">
            <summary>
            Gets or sets the email address of the user who created the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingRecoveredEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who created the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingRecoveredEvent.Operation">
            <summary>
            Gets or sets the operation (allowed values: all, single).
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingRegistrationApprovedEvent">
            <summary>
            This event is triggered when a meeting registration has been approved.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingRegistrationApprovedEvent.Operator">
            <summary>
            Gets or sets the email address of the user who approved the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingRegistrationApprovedEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who approved the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingRegistrationApprovedEvent.Registrant">
            <summary>
            Gets or sets the registrant information.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingRegistrationCancelledEvent">
            <summary>
            This event is triggered when a meeting registration has been cancelled.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingRegistrationCancelledEvent.Operator">
            <summary>
            Gets or sets the email address of the user who cancelled the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingRegistrationCancelledEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who cancelled the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingRegistrationCancelledEvent.Registrant">
            <summary>
            Gets or sets the registrant information.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingRegistrationCreatedEvent">
            <summary>
            This event is triggered when a participant registers for a meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingRegistrationCreatedEvent.Registrant">
            <summary>
            Gets or sets the registrant information.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingRegistrationDeniedEvent">
            <summary>
            This event is triggered when a meeting registration has been denied.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingRegistrationDeniedEvent.Operator">
            <summary>
            Gets or sets the email address of the user who denied the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingRegistrationDeniedEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who denied the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingRegistrationDeniedEvent.Registrant">
            <summary>
            Gets or sets the registrant information.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingServiceIssueEvent">
            <summary>
            This event is triggered every time a service issue is encountered during a meeting.
            The following quality metrics can trigger an alert:
            - Unstable audio.
            - Unstable video.
            - Poor screen share quality.
            - High CPU usage.
            - Call reconnection problems.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingServiceIssueEvent.Issues">
            <summary>
            Gets or sets the issues that occured during the meeting.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingSharingEndedEvent">
            <summary>
            This event is triggered when an attendee or the host stops sharing their screen during a meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingSharingEndedEvent.Participant">
            <summary>
            Gets or sets the information about the participant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingSharingEndedEvent.ScreenshareDetails">
            <summary>
            Gets or sets the information about the screenshare.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingSharingStartedEvent">
            <summary>
            This event is triggered when an attendee or the host starts sharing their screen during a meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingSharingStartedEvent.Participant">
            <summary>
            Gets or sets the information about the participant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingSharingStartedEvent.ScreenshareDetails">
            <summary>
            Gets or sets the information about the screenshare.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingStartedEvent">
            <summary>
            This event is triggered when a meeting has started.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.MeetingUpdatedEvent">
            <summary>
            This event is triggered when a meeting is updated.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingUpdatedEvent.Operator">
            <summary>
            Gets or sets the email address of the user who updated the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingUpdatedEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who updated the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingUpdatedEvent.Operation">
            <summary>
            Gets or sets the operation (allowed values: all, single).
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.MeetingUpdatedEvent.ModifiedFields">
            <summary>
            Gets or sets the fields that have been modified.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarCreatedEvent">
            <summary>
            This event is triggered when a webinar is created.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarCreatedEvent.Operator">
            <summary>
            Gets or sets the email address of the user who created the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarCreatedEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who created the meeting.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarDeletedEvent">
            <summary>
            This event is triggered when a webinar is deleted.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarDeletedEvent.Operator">
            <summary>
            Gets or sets the email address of the user who deleted the webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarDeletedEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who deleted the webinar.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarEndedEvent">
            <summary>
            This event is triggered when a webinar has ended.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarEvent">
            <summary>
            Represents an event related to a webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarEvent.AccountId">
            <summary>
            Gets or sets the unique identifier of the account in wich the event occured.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarEvent.Webinar">
            <summary>
            Gets or sets the webinar object.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarParticipantJoinedEvent">
            <summary>
            This event is triggered when a webinar participant joins the webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarParticipantJoinedEvent.JoinedOn">
            <summary>
            Gets or sets the date and time at which the participant joined the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarParticipantJoinedEvent.Participant">
            <summary>
            Gets or sets the participant.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarParticipantLeftEvent">
            <summary>
            This event is triggered when a webinar participant leaves the webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarParticipantLeftEvent.LeftOn">
            <summary>
            Gets or sets the date and time at which the participant left the webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarParticipantLeftEvent.Participant">
            <summary>
            Gets or sets the participant.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarRegistrationApprovedEvent">
            <summary>
            This event is triggered when a webinar registration has been approved.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarRegistrationApprovedEvent.Operator">
            <summary>
            Gets or sets the email address of the user who approved the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarRegistrationApprovedEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who approved the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarRegistrationApprovedEvent.Registrant">
            <summary>
            Gets or sets the registrant information.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarRegistrationCancelledEvent">
            <summary>
            This event is triggered when a webinar registration has been cancelled.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarRegistrationCancelledEvent.Operator">
            <summary>
            Gets or sets the email address of the user who cancelled the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarRegistrationCancelledEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who cancelled the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarRegistrationCancelledEvent.Registrant">
            <summary>
            Gets or sets the registrant information.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarRegistrationCreatedEvent">
            <summary>
            This event is triggered when a participant registers for a webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarRegistrationCreatedEvent.Registrant">
            <summary>
            Gets or sets the registrant information.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarRegistrationDeniedEvent">
            <summary>
            This event is triggered when a webinar registration has been denied.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarRegistrationDeniedEvent.Operator">
            <summary>
            Gets or sets the email address of the user who denied the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarRegistrationDeniedEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who denied the registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarRegistrationDeniedEvent.Registrant">
            <summary>
            Gets or sets the registrant information.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarServiceIssueEvent">
            <summary>
            This event is triggered every time a service issue is encountered during a webinar.
            The following quality metrics can trigger an alert:
            - Unstable audio.
            - Unstable video.
            - Poor screen share quality.
            - High CPU usage.
            - Call reconnection problems.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarServiceIssueEvent.Issues">
            <summary>
            Gets or sets the issues that occured during the webinar.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarSharingEndedEvent">
            <summary>
            This event is triggered when an app user or account user stops sharing their screen during a webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarSharingEndedEvent.Participant">
            <summary>
            Gets or sets the information about the participant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarSharingEndedEvent.ScreenshareDetails">
            <summary>
            Gets or sets the information about the screenshare.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarSharingStartedEvent">
            <summary>
            This event is triggered when an app user or account user starts sharing their screen during a webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarSharingStartedEvent.Participant">
            <summary>
            Gets or sets the information about the participant.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarSharingStartedEvent.ScreenshareDetails">
            <summary>
            Gets or sets the information about the screenshare.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarStartedEvent">
            <summary>
            This event is triggered when a webinar has started.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webhooks.WebinarUpdatedEvent">
            <summary>
            This event is triggered when a webinar is updated.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarUpdatedEvent.Operator">
            <summary>
            Gets or sets the email address of the user who updated the webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarUpdatedEvent.OperatorId">
            <summary>
            Gets or sets the user ID of the operator who updated the webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webhooks.WebinarUpdatedEvent.ModifiedFields">
            <summary>
            Gets or sets the fields that have been modified.
            </summary>
        </member>
        <member name="T:ZoomNet.Models.Webinar">
            <summary>
            A webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.Webinar.Uuid">
            <summary>
            Gets or sets the unique id.
            </summary>
            <value>
            The unique id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Webinar.Id">
            <summary>
            Gets or sets the webinar id, also known as the webinar number.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Webinar.HostId">
            <summary>
            Gets or sets the ID of the user who is set as the host of the webinar.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Webinar.HostEmail">
            <summary>
            Gets or sets the email address of the host of the webinar.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Webinar.Topic">
            <summary>
            Gets or sets the topic of the meeting.
            </summary>
            <value>
            The topic.
            </value>
        </member>
        <member name="P:ZoomNet.Models.Webinar.Type">
            <summary>
            Gets or sets the webinar type.
            </summary>
            <value>The webinar type.</value>
        </member>
        <member name="P:ZoomNet.Models.Webinar.Duration">
            <summary>
            Gets or sets the duration in minutes.
            </summary>
            <value>The duration in minutes.</value>
        </member>
        <member name="P:ZoomNet.Models.Webinar.Agenda">
            <summary>
            Gets or sets the webinar agenda.
            </summary>
            <value>The agenda.</value>
        </member>
        <member name="P:ZoomNet.Models.Webinar.CreatedOn">
            <summary>
            Gets or sets the date and time when the meeting was created.
            </summary>
            <value>The meeting created time.</value>
        </member>
        <member name="P:ZoomNet.Models.Webinar.JoinUrl">
            <summary>
            Gets or sets the URL to join the webinar.
            </summary>
            <value>The join URL.</value>
        </member>
        <member name="P:ZoomNet.Models.Webinar.StartUrl">
            <summary>
            Gets or sets the URL for the host to start the meeting.
            </summary>
            <value>The start URL.</value>
        </member>
        <member name="P:ZoomNet.Models.Webinar.TrackingFields">
            <summary>
            Gets or sets the tracking fields.
            </summary>
            <value>The tracking fields.</value>
        </member>
        <member name="P:ZoomNet.Models.Webinar.Settings">
            <summary>
            Gets or sets the webinar settings.
            </summary>
            <value>The webinar settings.</value>
        </member>
        <member name="P:ZoomNet.Models.Webinar.Password">
            <summary>
            Gets or sets the webinar password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="T:ZoomNet.Models.WebinarSettings">
            <summary>
            Webinar Settings.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.StartVideoWhenHostJoins">
            <summary>
            Gets or sets the value indicating whether to start video when host joins the webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.StartVideoWhenPanelistsJoin">
            <summary>
            Gets or sets the value indicating whether to start video when panelists join the webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.EnablePracticeSession">
            <summary>
            Gets or sets the value indicating whether to enable practice session.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.EnableHighDefinitionVideo">
            <summary>
            Gets or sets the value indicating whether to enable HD video.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.ApprovalType">
            <summary>
            Gets or sets the approval type.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.RegistrationType">
            <summary>
            Gets or sets the registration type. Used for recurring meeting with fixed time only.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.Audio">
            <summary>
            Gets or sets the value indicating how participants can join the audio portion of the meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.AutoRecording">
            <summary>
            Gets or sets the value indicating if audio is recorded and if so, when the audio is saved.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.EnforceLogin">
            <summary>
            Gets or sets the value indicating that only signed-in users can join this meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.EnforceLoginDomains">
            <summary>
            Gets or sets the value indicating only signed-in users with specified domains can join this meeting.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.AlternativeHosts">
            <summary>
            Gets or sets the value indicating alternative hosts emails or IDs. Multiple value separated by comma.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.CloseRegistration">
            <summary>
            Gets or sets the value indicating whether registration is closed after event date.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.ShowSocialShareButtons">
            <summary>
            Gets or sets the value indicating whether to show the social share buttons on the registration page.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.AllowMultipleDevices">
            <summary>
            Gets or sets the value indicating whether to allow attendees to join from multiple devices.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.OnDemand">
            <summary>
            Gets or sets the value indicating whether to make the webinar on-demand.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.GlobalDialInCountries">
            <summary>
            Gets or sets the list of global dial-in countries.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.ContactName">
            <summary>
            Gets or sets the contact name for registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.ContactEmail">
            <summary>
            Gets or sets the contact email for registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.MaximumNumberOfRegistrants">
            <summary>
            Gets or sets the maximum number of registrants.
            </summary>
            <remarks>
            Omitting this value, setting it to a negative value or setting it to zero indicates that the number of registrants will not be restricted.
            </remarks>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.SurveyUrl">
            <summary>
            Gets or sets the URL of the survey displayed in attendees' browsers after leaving the webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.SendRegistrationConfirmationEmail">
            <summary>
            Gets or sets the value indicating whether email notifications are sent about approval, cancellation, denial of registration.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.AuthenticatedUsersOnly">
            <summary>
            Gets or sets the value indicating that only authenticated users can join the webinar.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.WebinarSettings.AuthenticationTypeId">
            <summary>
            Gets or sets the authentication type for users to join a webinar when <see cref="P:ZoomNet.Models.WebinarSettings.AuthenticatedUsersOnly"/> is set to true.
            </summary>
            <remarks>
            The value of this field can be retrieved from the <see cref="P:ZoomNet.Models.AuthenticationOptions.Id"/> in the response of <see cref="M:ZoomNet.Resources.IUsers.GetMeetingAuthenticationSettingsAsync(System.String,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="T:ZoomNet.Models.ZoomRoom">
            <summary>
            Zoom Room.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.Id">
            <summary>
            Gets or sets the room id.
            </summary>
            <value>
            The room id.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.Name">
            <summary>
            Gets or sets the room name.
            </summary>
            <value>
            The room name.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.CalendarName">
            <summary>
            Gets or sets the Zoom calendar name.
            </summary>
            <value>
            The Zoom calendar name.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.Email">
            <summary>
            Gets or sets the Zoom room email.
            </summary>
            <value>
            The Zoom room email.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.AccountType">
            <summary>
            Gets or sets the Zoom room email type.
            </summary>
            <value>
            Zoom room email type.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.Status">
            <summary>
            Gets or sets the Zoom room status.
            </summary>
            <value>
            The Zoom room status.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.DeviceIp">
            <summary>
            Gets or sets the Zoom room device IP.
            </summary>
            <value>
            The Zoom room device IP.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.Camera">
            <summary>
            Gets or sets the Zoom room camera.
            </summary>
            <value>
            The Zoom room camera.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.Microphone">
            <summary>
            Gets or sets the Zoom room microphone.
            </summary>
            <value>
            The Zoom room microphone.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.Speaker">
            <summary>
            Gets or sets the Zoom room speaker.
            </summary>
            <value>
            The Zoom room speaker.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.LastStartTime">
            <summary>
            Gets or sets the last start time of the Zoom room.
            </summary>
            <value>
            The last start time of the Zoom room.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.Location">
            <summary>
            Gets or sets the Zoom room location.
            </summary>
            <value>
            The Zoom room location.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.Health">
            <summary>
            Gets or sets the health value.
            </summary>
            <value>
            The health value.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.Issues">
            <summary>
            Gets or sets Zoom room issues.
            </summary>
            <value>
            Zoom room issues.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.LiveMeeting">
            <summary>
            Gets or sets information on the live meeting in the Zoom room.
            </summary>
            <value>
            Metrics on the currently live meeting if there is one.
            </value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoom.PastMeetings">
            <summary>
            Gets or sets metrics for previous meetings that happened in this Zoom room.
            </summary>
            <value>
            Pagination object to get metrics on previous meetings that happened in this Zoom room.
            </value>
        </member>
        <member name="T:ZoomNet.Models.ZoomRoomIssueDetails">
            <summary>
            Details of an issue for a Zoom room.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoomIssueDetails.IssueType">
            <summary>
            Gets or sets the Issue Name.<br/>
            The value of the this field could be one of the following:<br/>
            * `Room Controller disconnected`<br/>
            * `Room Controller connected`<br/>
            * `Selected camera has disconnected`<br/>
            * `Selected camera is reconnected`<br/>
            * `Selected microphone has disconnected`<br/>
            * `Selected microphone is reconnected`<br/>
            * `Selected speaker has disconnected`<br/>
            * `Selected speaker is reconnected`<br/>
            * `Zoom room is offline`<br/>
            * `Zoom room is online`<br/>
            * `High CPU usage is detected`<br/>
            * `Low bandwidth network is detected`<br/>
            * `{name} battery is low`<br/>
            * `{name} battery is normal`<br/>
            * `{name} disconnected`<br/>
            * `{name} connected`<br/>
            * `{name} is not charging`<br/><br/>
            Possible values for {name}: <br/>
            * Zoom Rooms Computer<br/>
            * Controller<br/>
            * Scheduling Display.<br/>
            </summary>
            <value>The Issue name.</value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoomIssueDetails.Time">
            <summary>
            Gets or sets the time the issue appeared.
            </summary>
            <value>The time the issue appeared.</value>
        </member>
        <member name="T:ZoomNet.Models.ZoomRoomWithIssues">
            <summary>
            Zoom room with issues.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoomWithIssues.Id">
            <summary>
            Gets or sets the Zoom room id.
            </summary>
            <value>The Zoom room id.</value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoomWithIssues.Name">
            <summary>
            Gets or sets the Zoom room name.
            </summary>
            <value>The Zoom room name.</value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoomWithIssues.IssuesCount">
            <summary>
            Gets or sets the count of issues in the Zoom room.
            </summary>
            <value>The count of issues in the Zoom room.</value>
        </member>
        <member name="T:ZoomNet.Models.ZoomRoomWithIssuesReport">
            <summary>
            Top Zoom rooms with issues for the given date range.
            </summary>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoomWithIssuesReport.From">
            <summary>
            Gets or sets the start date for this report.
            </summary>
            <value>The start date for this report.</value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoomWithIssuesReport.To">
            <summary>
            Gets or sets the end date for this report.
            </summary>
            <value>The end date for this report.</value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoomWithIssuesReport.TotalRecords">
            <summary>
            Gets or sets the number of all records available across pages.
            </summary>
            <value>The number of all records available across pages.</value>
        </member>
        <member name="P:ZoomNet.Models.ZoomRoomWithIssuesReport.ZoomRooms">
            <summary>
            Gets or sets the collection of Zoom rooms with issues.
            </summary>
            <value>The collection of Zoom rooms with issues.</value>
        </member>
        <member name="T:ZoomNet.OnTokenRefreshedDelegate">
            <summary>
            The delegate invoked when a token is refreshed.
            </summary>
            <param name="newRefreshToken">The new refresh token.</param>
            <param name="newAccessToken">The new access token.</param>
        </member>
        <member name="T:ZoomNet.OAuthConnectionInfo">
            <summary>
            Connect using OAuth.
            </summary>
        </member>
        <member name="P:ZoomNet.OAuthConnectionInfo.ClientId">
            <summary>
            Gets the client id.
            </summary>
        </member>
        <member name="P:ZoomNet.OAuthConnectionInfo.ClientSecret">
            <summary>
            Gets the client secret.
            </summary>
        </member>
        <member name="P:ZoomNet.OAuthConnectionInfo.GrantType">
            <summary>
            Gets the grant type.
            </summary>
        </member>
        <member name="P:ZoomNet.OAuthConnectionInfo.AuthorizationCode">
            <summary>
            Gets the authorization code.
            </summary>
        </member>
        <member name="P:ZoomNet.OAuthConnectionInfo.RefreshToken">
            <summary>
            Gets the refresh token.
            </summary>
        </member>
        <member name="P:ZoomNet.OAuthConnectionInfo.AccessToken">
            <summary>
            Gets the access token.
            </summary>
        </member>
        <member name="P:ZoomNet.OAuthConnectionInfo.TokenScope">
            <summary>
            Gets the token scope.
            </summary>
        </member>
        <member name="P:ZoomNet.OAuthConnectionInfo.TokenExpiration">
            <summary>
            Gets the token expiration time.
            </summary>
        </member>
        <member name="P:ZoomNet.OAuthConnectionInfo.OnTokenRefreshed">
            <summary>
            Gets the delegate invoked when the token is refreshed.
            </summary>
        </member>
        <member name="P:ZoomNet.OAuthConnectionInfo.RedirectUri">
            <summary>
            Gets the redirectUri required for refresh of tokens.
            </summary>
        </member>
        <member name="M:ZoomNet.OAuthConnectionInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.OAuthConnectionInfo"/> class.
            </summary>
            <remarks>
            This constructor is used to get access token for APIs that do not
            need a user’s permission, but rather a service’s permission.
            Within the realm of Zoom APIs, Client Credentials grant should be
            used to get access token from the Chatbot Service in order to use
            the "Send Chatbot Messages API". See the "Using OAuth 2.0 / Client
            Credentials" section in the "Using Zoom APIs" document for more details
            (https://marketplace.zoom.us/docs/api-reference/using-zoom-apis).
            </remarks>
            <param name="clientId">Your Client Id.</param>
            <param name="clientSecret">Your Client Secret.</param>
        </member>
        <member name="M:ZoomNet.OAuthConnectionInfo.#ctor(System.String,System.String,System.String,ZoomNet.OnTokenRefreshedDelegate,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:ZoomNet.OAuthConnectionInfo"/> class.
             </summary>
             <remarks>
             The authorization code is generated by Zoom when the user authorizes the app.
             This code can be used only one time to get the initial access token and refresh token.
             Once the authorization code has been used, is is no longer valid and should be discarded.
            
             Also, Zoom's documentation says that the redirect uri must be provided when validating an
             authorization code and converting it into tokens. However I have observed that it's not
             always necessary. It seems that some developers get a "REDIRECT URI MISMATCH" exception when
             they omit this value but other developers don't. Therefore, the redirectUri parameter is
             marked as optional in ZoomNet which allows you to specify it or omit it depending on your
             situation. See this <a href="">Github issue</a> for more details.
             </remarks>
             <param name="clientId">Your Client Id.</param>
             <param name="clientSecret">Your Client Secret.</param>
             <param name="authorizationCode">The authorization code.</param>
             <param name="onTokenRefreshed">The delegate invoked when the token is refreshed.</param>
             <param name="redirectUri">The Redirect Uri.</param>
        </member>
        <member name="M:ZoomNet.OAuthConnectionInfo.#ctor(System.String,System.String,System.String,System.String,ZoomNet.OnTokenRefreshedDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.OAuthConnectionInfo"/> class.
            </summary>
            <remarks>
            This is the most commonly used grant type for Zoom APIs.
            </remarks>
            <param name="clientId">Your Client Id.</param>
            <param name="clientSecret">Your Client Secret.</param>
            <param name="refreshToken">The refresh token.</param>
            <param name="accessToken">The access token. Access tokens expire after 1 hour. ZoomNet will automatically refresh this token when it expires.</param>
            <param name="onTokenRefreshed">The delegate invoked when the token is refreshed.</param>
        </member>
        <member name="T:ZoomNet.Resources.Accounts">
            <summary>
            Allows you to manage sub accounts under the master account.
            </summary>
            <seealso cref="T:ZoomNet.Resources.IAccounts" />
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accounts">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.Accounts.#ctor(Pathoschild.Http.Client.IClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Resources.Accounts" /> class.
            </summary>
            <param name="client">The HTTP client.</param>
        </member>
        <member name="M:ZoomNet.Resources.Accounts.GetAllAsync(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve all the sub accounts under the master account.
            </summary>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Account" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Accounts.GetAllAsync(System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all the sub accounts under the master account.
            </summary>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Account" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Accounts.CreateAsync(System.String,System.String,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Collections.Generic.IEnumerable{System.String},ZoomNet.Models.PayMode,System.Threading.CancellationToken)">
            <summary>
            Create a sub account under the master account.
            </summary>
            <param name="firstName">User's first name.</param>
            <param name="lastName">User's last name.</param>
            <param name="email">User's email address.</param>
            <param name="password">User's password.</param>
            <param name="useSharedVirtualRoomConnectors">Enable/disable the option for a sub account to use shared Virtual Room Connector(s).</param>
            <param name="roomConnectorsIpAddresses">The IP addresses of the Room Connectors that you would like to share with the sub account.</param>
            <param name="useSharedMeetingConnectors">Enable/disable the option for a sub account to use shared Meeting Connector(s).</param>
            <param name="meetingConnectorsIpAddresses">The IP addresses of the Meeting Connectors that you would like to share with the sub account.</param>
            <param name="payMode">Payee.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Account">accounts</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Accounts.GetAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details of a sub account.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Account" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Accounts.DisassociateAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Disassociate a Sub Account from the Master Account.
            </summary>
            <param name="accountId">The account Id that must be disassociated from its master account.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
            <remarks>
            This will leave the Sub Account intact but it will no longer be associated with the master account.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.Accounts.UpdateOptionsAsync(System.Int64,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{ZoomNet.Models.PayMode},System.Threading.CancellationToken)">
            <summary>
            Update a Sub Account's options under the Master Account.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="useSharedVirtualRoomConnectors">Enable/disable the option for a sub account to use shared Virtual Room Connector(s).</param>
            <param name="roomConnectorsIpAddresses">The IP addresses of the Room Connectors that you would like to share with the sub account.</param>
            <param name="useSharedMeetingConnectors">Enable/disable the option for a sub account to use shared Meeting Connector(s).</param>
            <param name="meetingConnectorsIpAddresses">The IP addresses of the Meeting Connectors that you would like to share with the sub account.</param>
            <param name="payMode">Payee.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Accounts.GetMeetingAuthenticationSettingsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve an account's meeting authentication settings.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.AuthenticationSettings">settings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Accounts.GetRecordingAuthenticationSettingsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve an account's recording authentication settings.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.AuthenticationSettings">settings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Accounts.GetManagedDomainsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve a sub account's managed domains.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of managed domains and their status.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Accounts.GetTrustedDomainsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve a sub account's trusted domains.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of trusted domains.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Accounts.UpdateOwnerAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Change the owner of a Sub Account to another user on the same account.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="newOwnerEmail">The new owner's email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.Chat">
            <summary>
            Allows you to manage sub accounts under the master account.
            </summary>
            <seealso cref="T:ZoomNet.Resources.IAccounts" />
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accounts">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.Chat.#ctor(Pathoschild.Http.Client.IClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Resources.Chat" /> class.
            </summary>
            <param name="client">The HTTP client.</param>
        </member>
        <member name="M:ZoomNet.Resources.Chat.GetAccountChannelsForUserAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user's chat channels.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ChatChannel">channels</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.GetAccountChannelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a specific chat channel.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A <see cref="T:ZoomNet.Models.ChatChannel"/>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.CreateAccountChannelAsync(System.String,System.String,ZoomNet.Models.ChatChannelType,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Create a chat channel that allows users to communicate via chat in private or public groups.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="name">The name of the channel.</param>
            <param name="type">The type of channel.</param>
            <param name="emails">The email addresses of the members to include in the channel.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <remarks>Zoom allows a maximum of 5 members to be added at once.</remarks>
            <returns>
            The new <see cref="T:ZoomNet.Models.ChatChannel"/>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.UpdateAccountChannelAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a chat channel.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="name">The name of the channel.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.DeleteAccountChannelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a chat channel.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.GetAccountChannelMembersAsync(System.String,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the members of a chat channel.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ChatChannelMember">channel members</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.InviteMembersToAccountChannelAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Invite members to join a chat channel.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="emails">The email addresses of the members to include in the channel.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <remarks>Zoom allows a maximum of 5 members to be added at once.</remarks>
            <returns>
            An array containing the unique identifiers of the new members.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.RemoveMemberFromAccountChannelAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a chat channel.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="memberId">The member Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.GetChannelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a specific chat channel.
            </summary>
            <param name="channelId">The channel Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A <see cref="T:ZoomNet.Models.ChatChannel"/>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.UpdateChannelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a chat channel.
            </summary>
            <param name="channelId">The channel Id.</param>
            <param name="name">The name of the channel.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.DeleteChannelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a chat channel.
            </summary>
            <param name="channelId">The channel Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.RemoveMemberFromChannelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a chat channel.
            </summary>
            <param name="channelId">The channel Id.</param>
            <param name="memberId">The member Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.JoinChannelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Join a chat channel.
            </summary>
            <param name="channelId">The channel Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The member Id.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.SendMessageToContactAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.ChatMention},System.Threading.CancellationToken)">
            <summary>
            Send a message to a user on on the sender's contact list.
            </summary>
            <param name="userId">The unique identifier of the sender.</param>
            <param name="recipientEmail">The email address of the contact to whom you would like to send the message.</param>
            <param name="message">The message.</param>
            <param name="mentions">Mentions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The message Id.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.SendMessageToChannelAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.ChatMention},System.Threading.CancellationToken)">
            <summary>
            Send a message to a channel of which the sender is a member.
            </summary>
            <param name="userId">The unique identifier of the sender.</param>
            <param name="channelId">The channel Id.</param>
            <param name="message">The message.</param>
            <param name="mentions">Mentions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The message Id.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.GetMessagesToContactAsync(System.String,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the chat messages sent/received to/from a contact.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="recipientEmail">The email address of the contact to whom the user conversed.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ChatMessage">chat messages</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.GetMessagesToChannelAsync(System.String,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the chat messages sent/received in a channel of which the user is a member.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ChatMessage">chat messages</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.UpdateMessageToContactAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.ChatMention},System.Threading.CancellationToken)">
            <summary>
            Update a message that was previously sent to a user on on the sender's contact list.
            </summary>
            <param name="messageId">The unique identifier of the message.</param>
            <param name="userId">The unique identifier of the sender.</param>
            <param name="recipientEmail">The email address of the contact to whom you would like to send the message.</param>
            <param name="message">The message.</param>
            <param name="mentions">Mentions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.UpdateMessageToChannelAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.ChatMention},System.Threading.CancellationToken)">
            <summary>
            Update a message that was previously sent to a channel of which the sender is a member.
            </summary>
            <param name="messageId">The unique identifier of the message.</param>
            <param name="userId">The unique identifier of the sender.</param>
            <param name="channelId">The channel Id.</param>
            <param name="message">The message.</param>
            <param name="mentions">Mentions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.DeleteMessageToContactAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a message that was previously sent to a user on on the sender's contact list.
            </summary>
            <param name="messageId">The unique identifier of the message.</param>
            <param name="userId">The unique identifier of the sender.</param>
            <param name="recipientEmail">The email address of the contact to whom you would like to send the message.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Chat.DeleteMessageToChannelAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a message that was previously sent to a channel of which the sender is a member.
            </summary>
            <param name="messageId">The unique identifier of the message.</param>
            <param name="userId">The unique identifier of the sender.</param>
            <param name="channelId">The channel Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.CloudRecordings">
            <summary>
            Allows you to manage cloud recordings.
            </summary>
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/cloud-recording/">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.#ctor(Pathoschild.Http.Client.IClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Resources.CloudRecordings" /> class.
            </summary>
            <param name="client">The HTTP client.</param>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.GetRecordingsForUserAsync(System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve all cloud recordings for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="queryTrash">Indicates if you want to list recordings from trash.</param>
            <param name="from">The start date.</param>
            <param name="to">The end date.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Recording">recordings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.GetRecordingsForUserAsync(System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all cloud recordings for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="queryTrash">Indicates if you want to list recordings from trash.</param>
            <param name="from">The start date.</param>
            <param name="to">The end date.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Recording">recordings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.GetRecordingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all cloud recordings for a meeting or webinar.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Details of recordings made for a particular meeding or webinar.</returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.MoveRecordingsToTrashAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Move recordings for a meeting to trash.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.DeleteRecordingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Permanently delete recordings for a meeting.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.MoveRecordingToTrashAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Move a specific recording file for a meeting to trash.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="recordingId">The recording id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.DeleteRecordingAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Permanently delete a specific recording file for a meeting.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="recordingId">The recording id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.RecoverRecordingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Recover all deleted recordings of a specific meeting from trash.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
            <remarks>Zoom allows recordings to be recovered from trash for up to 30 days from deletion date.</remarks>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.RecoverRecordingAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Recover a specific recording file of a meeting.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="recordingId">The recording id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
            <remarks>Zoom allows recordings to be recovered from trash for up to 30 days from deletion date.</remarks>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.GetRecordingSettingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve settings applied to a meeting's cloud recording.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.RecordingSettings" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.GetRecordingRegistrantsAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve all registrants for a recording.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant">registrants</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.GetRecordingRegistrantsAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all registrants for a recording.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant">registrants</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.AddRegistrantAsync(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a registrant to an on-demand recording.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="email">Registrant's email address.</param>
            <param name="firstName">Registrant's first name.</param>
            <param name="lastName">Registrant's last name.</param>
            <param name="address">Registrant's address.</param>
            <param name="city">Registrant's city.</param>
            <param name="country">Registrant's country.</param>
            <param name="zip">Registrant's zip/postal code.</param>
            <param name="state">Registrant's state/province.</param>
            <param name="phone">Registrant's phone number.</param>
            <param name="industry">Registrant's industry.</param>
            <param name="organization">Registrant's organization.</param>
            <param name="jobTitle">Registrant's job title.</param>
            <param name="purchasingTimeFrame">This field can be included to gauge interest of attendees towards buying your product or service.</param>
            <param name="roleInPurchaseProcess">Registrant's role in purchase decision.</param>
            <param name="numberOfEmployees">Number of employees.</param>
            <param name="comments">A field that allows registrants to provide any questions or comments that they might have.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A <see cref="T:ZoomNet.Models.RecordingRegistration" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.ApproveRegistrantAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Approve a registration for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.ApproveRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Approve multiple registrations for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantIds">ID for each registrant to be approved.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.RejectRegistrantAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Reject a registration for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.RejectRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Reject multiple registrations for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantIds">ID for each registrant to be rejected.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.CloudRecordings.DownloadFileAsync(ZoomNet.Models.RecordingFile,System.Threading.CancellationToken)">
            <summary>
            Download the recording file.
            </summary>
            <param name="recordingFile">The recording file to download.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>
            The <see cref="T:System.IO.Stream"/> containing the file.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.Contacts">
            <summary>
            Allows you to manage contacts.
            </summary>
            <seealso cref="T:ZoomNet.Resources.IContacts" />
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/contacts/">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.Contacts.#ctor(Pathoschild.Http.Client.IClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Resources.Contacts" /> class.
            </summary>
            <param name="client">The HTTP client.</param>
        </member>
        <member name="M:ZoomNet.Resources.Contacts.GetAllAsync(ZoomNet.Models.ContactType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the current user's contacts.
            </summary>
            <param name="type">The type of contacts.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Contact">contacts</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Contacts.SearchAsync(System.String,System.Boolean,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Search contacts.
            </summary>
            <param name="keyword">The search keyword: either first name, last na,me or email of the contact.</param>
            <param name="queryPresenceStatus">Indicate whether you want the status pf a contact to be included in the response.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Contact">contacts</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Contacts.GetAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a specific contact of the current Zoom user.
            </summary>
            <param name="contactId">The unique identifier or email address of the contact.</param>
            <param name="queryPresenceStatus">Indicate whether you want the status of a contact to be included in the response.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Contact"/>.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.Dashboards">
            <summary>
            Allows you to view various metrics.
            </summary>
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/dashboards">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.#ctor(Pathoschild.Http.Client.IClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Resources.Dashboards" /> class.
            </summary>
            <param name="client">The HTTP client.</param>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetAllMeetingsAsync(System.DateTime,System.DateTime,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve data on total live or past meetings that occurred during a specified period of time.
            Only data from within the last 6 months will be returned.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="type">The type of meetings. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.DashboardMeetingMetrics">meetings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetMeetingAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details of a meeting.
            </summary>
            <param name="meetingId">The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.</param>
            <param name="type">The type of meetings. Allowed values: Past, PastOne, Live.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.DashboardMeetingMetrics" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetMeetingParticipantsAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of participants from live or past meetings.
            If you do not provide the type query parameter, the default value will be set to live and thus,
            you will only see metrics for participants in a live meeting, if any meeting is currently being conducted.To view metrics on past meeting participants,
            provide the appropriate value for type.
            </summary>
            <param name="meetingId">The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.</param>
            <param name="type">The type of meetings. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.DashboardMeetingParticipant">participants</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetMeetingParticipantQosAsync(System.String,System.String,ZoomNet.Models.DashboardMeetingType,System.Threading.CancellationToken)">
            <summary>
            Retrieve the quality of service for participants from live or past meetings.
            This data indicates the connection quality for sending/receiving video, audio, and shared content.
            If nothing is being sent or received at that time, no information will be shown in the fields.
            </summary>
            <param name="meetingId">The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.</param>
            <param name="participantId">The participant id.</param>
            <param name="type">The type of meetings. Allowed values: Past, PastOne, Live.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The <see cref="T:ZoomNet.Models.DashboardMeetingParticipantQos"/> quality of service metrics for the participant.</returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetAllMeetingParticipantsQosAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of meeting participants from live or past meetings along with the quality of service they receive during the meeting such as connection quality for sending/receiving video, audio, and shared content.
            </summary>
            <param name="meetingId">The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.</param>
            <param name="type">The type of meetings. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.DashboardMeetingParticipantQos">quality of service metrics for participants of the meeting.</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetAllMeetingParticipantSharingDetailsAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the sharing and recording details of participants from live or past meetings.
            </summary>
            <param name="meetingId">The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.</param>
            <param name="type">The type of meetings. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.ParticipantSharingDetails">sharing details for the meetings participants.</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetAllWebinarsAsync(System.DateTime,System.DateTime,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve data on total live or past webinars that occurred during a specified period of time.
            Only data from within the last 6 months will be returned.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="type">The type of meetings. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.DashboardMetricsBase">webinars.</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetWebinarAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details of a webinar.
            </summary>
            <param name="webinarId">The webinar ID or meeting UUID. If given the webinar ID it will take the last webinar instance.</param>
            <param name="type">The type of webinar. Allowed values: Past, PastOne, Live.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.DashboardMetricsBase" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetWebinarParticipantsAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of participants from live or past webinars.
            </summary>
            <param name="webinarId">The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.</param>
            <param name="type">The type of webinar. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.DashboardParticipant">participants</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetWebinarParticipantQosAsync(System.String,System.String,ZoomNet.Models.DashboardMeetingType,System.Threading.CancellationToken)">
            <summary>
            Retrieve the quality of service for participants from live or past webinars.
            This data indicates the connection quality for sending/receiving video, audio, and shared content.
            If nothing is being sent or received at that time, no information will be shown in the fields.
            </summary>
            <param name="webinarId">The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.</param>
            <param name="participantId">The participant id.</param>
            <param name="type">The type of webinars. Allowed values: Past, PastOne, Live.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The <see cref="T:ZoomNet.Models.DashboardMeetingParticipantQos"/> quality of service metrics for the participant.</returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetAllWebinarParticipantQosAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of webinar participants from live or past webinars along with the quality of service they receive during the webinar such as connection quality for sending/receiving video, audio, and shared content.
            </summary>
            <param name="webinarId">The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.</param>
            <param name="type">The type of webinars. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.DashboardMeetingParticipantQos">quality of service metrics for participants of the webinar.</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetAllWebinarParticipantSharingDetailsAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the sharing and recording details of participants from live or past webinars.
            </summary>
            <param name="webinarId">The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.</param>
            <param name="type">The type of webinars. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.ParticipantSharingDetails">sharing details for the webinars participants.</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetAllZoomRoomsAsync(System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            List information on all Zoom Rooms in an account.
            </summary>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An array of <see cref="T:ZoomNet.Models.ZoomRoom"/> Zoom rooms.</returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetRoomDetailsAsync(System.String,System.DateTime,System.DateTime,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            The Zoom Rooms dashboard metrics lets you know the type of configuration a Zoom room has and details on the meetings held in that room.
            </summary>
            <param name="zoomRoomId">The Zoom room id.</param>
            <param name = "from" >
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:ZoomNet.Models.ZoomRoom"/> Zoom room with details on current and past meetings.</returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetCrcPortUsageAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            A Cloud Room Connector allows H.323/SIP endpoints to connect to a Zoom meeting. <br/>
            Use this API to get the hour by hour CRC Port usage for a specified period of time. <br/>
            We will provide the report for a maximum of one month.For example, if “from” is set to “2017-08-05” and “to” is set to “2017-10-10”, we will adjust “from” to “2017-09-10”.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The <see cref="T:ZoomNet.Models.CrcPortMetrics">Report </see> of metrics on CRC usage.</returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetImMetricsAsync(System.DateTime,System.DateTime,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get <a href="https://support.zoom.us/hc/en-us/articles/204654719-Dashboard#h_cc7e9749-1c70-4afb-a9a2-9680654821e4">metrics</a> on how users are utilizing the Zoom Chat Client.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ImMetric">chat room usage metrics</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetClientFeedbackMetricsAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Retrieve survey results from <a href="https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf">Zoom meetings client feedback.</a>.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:ZoomNet.Models.ClientFeedbackMetricsReport"/> report with metrics on client feedback.</returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetIssuesOfZoomRoomsAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Get Top 25 issues of Zoom rooms.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:ZoomNet.Models.IssuesOfZoomRoomsReport"/> report with the list of top issues in Zoom rooms.</returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetZoomRoomsWithIssuesAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Get Top 25 issues of Zoom rooms.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:ZoomNet.Models.ZoomRoomWithIssuesReport"/> report with the list of top issues in Zoom rooms.</returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetIssuesOfZoomRoomAsync(System.String,System.DateTime,System.DateTime,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the issues that occurred on the Top 25 Zoom Rooms with issues in an account.
            </summary>
            <param name="zoomRoomId">The Zoom room id.</param>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ZoomRoomIssueDetails">Zoom room issue details</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetZoomMeetingsClientFeedbackAsync(System.String,System.DateTime,System.DateTime,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve detailed information on a <a href="https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf">Zoom meetings client feedback.</a>.
            </summary>
            <param name="feedbackId">The Zoom room id.</param>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ClientFeedbackDetail">client feedback details</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Dashboards.GetClientMeetingSatisfactionMetrics(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            If the <a href="https://support.zoom.us/hc/en-us/articles/115005855266">End of Meeting Feedback Survey</a> option is enabled, attendees will be prompted with a survey window where they can tap either the Thumbs Up or Thumbs Down button that indicates their Zoom meeting experience. <br/>
            With this API, you can get information on the attendees’ meeting satisfaction. Specify a monthly date range for the query using the from and to query parameters.
            The month should fall within the last six months. <br />
            To get information on the survey results with negative experiences(indicated by Thumbs Down), use <see cref="M:ZoomNet.Resources.Dashboards.GetZoomMeetingsClientFeedbackAsync(System.String,System.DateTime,System.DateTime,System.Int32,System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:ZoomNet.Models.ClientSatisfactionReport"/> report with a list of client satisfaction reports.</returns>
        </member>
        <member name="T:ZoomNet.Resources.DataCompliance">
            <summary>
            Allows you to notify Zoom that you comply with the policy which requires you to handle
            user's data in accordance to the user's preference after the user uninstalls your app.
            </summary>
            <seealso cref="T:ZoomNet.Resources.IDataCompliance" />
            <remarks>
            This resource can only be used when you connect to Zoom using OAuth. It cannot be used with a Jwt connection.
            See <a href="https://marketplace.zoom.us/docs/api-reference/data-compliance/">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.DataCompliance.#ctor(Pathoschild.Http.Client.IClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Resources.DataCompliance" /> class.
            </summary>
            <param name="client">The HTTP client.</param>
        </member>
        <member name="M:ZoomNet.Resources.DataCompliance.NotifyAsync(System.String,System.Int64,ZoomNet.Models.Webhooks.AppDeauthorizedEvent,System.Threading.CancellationToken)">
            <summary>
            Notify Zoom that you comply with the policy which requires you to handle user's
            data in accordance to the user's preference after the user uninstalls your app.
            </summary>
            <param name="userId">The Zoom user's id who uninstalled your app.</param>
            <param name="accountId">The account Id.</param>
            <param name="deauthorizationEventReceived">This object represents the payload of the webhook event sent by Zoom in your Deauthorization Endpoint Url after a user uninstalls your app. The values of the parameters in this object should be the same as that of the deauthorization event that you receive.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.IAccounts">
            <summary>
            Allows you to manage sub accounts under the master account.
            </summary>
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accounts">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IAccounts.GetAllAsync(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve all sub accounts under the master account.
            </summary>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Account">accounts</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IAccounts.GetAllAsync(System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all sub accounts under the master account.
            </summary>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Account">accounts</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IAccounts.CreateAsync(System.String,System.String,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Collections.Generic.IEnumerable{System.String},ZoomNet.Models.PayMode,System.Threading.CancellationToken)">
            <summary>
            Create a sub account under the master account.
            </summary>
            <param name="firstName">User's first name.</param>
            <param name="lastName">User's last name.</param>
            <param name="email">User's email address.</param>
            <param name="password">User's password.</param>
            <param name="useSharedVirtualRoomConnectors">Enable/disable the option for a sub account to use shared Virtual Room Connector(s).</param>
            <param name="roomConnectorsIpAddresses">The IP addresses of the Room Connectors that you would like to share with the sub account.</param>
            <param name="useSharedMeetingConnectors">Enable/disable the option for a sub account to use shared Meeting Connector(s).</param>
            <param name="meetingConnectorsIpAddresses">The IP addresses of the Meeting Connectors that you would like to share with the sub account.</param>
            <param name="payMode">Payee.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Account">accounts</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IAccounts.GetAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details of a sub account.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Account" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IAccounts.DisassociateAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Disassociate a Sub Account from the Master Account.
            </summary>
            <param name="accountId">The account Id that must be disassociated from its master account.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
            <remarks>
            This will leave the Sub Account intact but it will no longer be associated with the master account.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IAccounts.UpdateOptionsAsync(System.Int64,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{ZoomNet.Models.PayMode},System.Threading.CancellationToken)">
            <summary>
            Update a Sub Account's options under the Master Account.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="useSharedVirtualRoomConnectors">Enable/disable the option for a sub account to use shared Virtual Room Connector(s).</param>
            <param name="roomConnectorsIpAddresses">The IP addresses of the Room Connectors that you would like to share with the sub account.</param>
            <param name="useSharedMeetingConnectors">Enable/disable the option for a sub account to use shared Meeting Connector(s).</param>
            <param name="meetingConnectorsIpAddresses">The IP addresses of the Meeting Connectors that you would like to share with the sub account.</param>
            <param name="payMode">Payee.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IAccounts.GetMeetingAuthenticationSettingsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve an account's meeting authentication settings.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.AuthenticationSettings">settings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IAccounts.GetRecordingAuthenticationSettingsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve an account's recording authentication settings.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.AuthenticationSettings">settings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IAccounts.GetManagedDomainsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve a sub account's managed domains.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of managed domains and their status.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IAccounts.GetTrustedDomainsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve a sub account's trusted domains.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of trusted domains.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IAccounts.UpdateOwnerAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Change the owner of a Sub Account to another user on the same account.
            </summary>
            <param name="accountId">The account Id.</param>
            <param name="newOwnerEmail">The new owner's email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.IChat">
            <summary>
            Allows you to manage chat channels, messages, etc.
            </summary>
            <remarks>
            See Zoom documentation <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels-account-level/">here</a>,
            <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels/">here</a>,
            <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-messages/">here</a>
            and <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/chatbot-messages/">here</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IChat.GetAccountChannelsForUserAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user's chat channels.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ChatChannel">channels</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.GetAccountChannelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a specific chat channel.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A <see cref="T:ZoomNet.Models.ChatChannel"/>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.CreateAccountChannelAsync(System.String,System.String,ZoomNet.Models.ChatChannelType,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Create a chat channel that allows users to communicate via chat in private or public groups.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="name">The name of the channel.</param>
            <param name="type">The type of channel.</param>
            <param name="emails">The email addresses of the members to include in the channel.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <remarks>Zoom allows a maximum of 5 members to be added at once.</remarks>
            <returns>
            The new <see cref="T:ZoomNet.Models.ChatChannel"/>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.UpdateAccountChannelAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a chat channel.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="name">The name of the channel.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.DeleteAccountChannelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a chat channel.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.GetAccountChannelMembersAsync(System.String,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the members of a chat channel.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ChatChannelMember">channel members</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.InviteMembersToAccountChannelAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Invite members to join a chat channel.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="emails">The email addresses of the members to include in the channel.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <remarks>Zoom allows a maximum of 5 members to be added at once.</remarks>
            <returns>
            An array containing the unique identifiers of the new members.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.RemoveMemberFromAccountChannelAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a chat channel.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="memberId">The member Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.GetChannelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a specific chat channel.
            </summary>
            <param name="channelId">The channel Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A <see cref="T:ZoomNet.Models.ChatChannel"/>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.UpdateChannelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a chat channel.
            </summary>
            <param name="channelId">The channel Id.</param>
            <param name="name">The name of the channel.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.DeleteChannelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a chat channel.
            </summary>
            <param name="channelId">The channel Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.RemoveMemberFromChannelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a chat channel.
            </summary>
            <param name="channelId">The channel Id.</param>
            <param name="memberId">The member Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.JoinChannelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Join a chat channel.
            </summary>
            <param name="channelId">The channel Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The member Id.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.SendMessageToContactAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.ChatMention},System.Threading.CancellationToken)">
            <summary>
            Send a message to a user on the sender's contact list.
            </summary>
            <param name="userId">The unique identifier of the sender.</param>
            <param name="recipientEmail">The email address of the contact to whom you would like to send the message.</param>
            <param name="message">The message.</param>
            <param name="mentions">Mentions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The message Id.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.SendMessageToChannelAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.ChatMention},System.Threading.CancellationToken)">
            <summary>
            Send a message to a channel of which the sender is a member.
            </summary>
            <param name="userId">The unique identifier of the sender.</param>
            <param name="channelId">The channel Id.</param>
            <param name="message">The message.</param>
            <param name="mentions">Mentions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The message Id.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.GetMessagesToContactAsync(System.String,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the chat messages sent/received to/from a contact.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="recipientEmail">The email address of the contact to whom the user conversed.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ChatMessage">chat messages</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.GetMessagesToChannelAsync(System.String,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the chat messages sent/received in a channel of which the user is a member.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="channelId">The channel Id.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ChatMessage">chat messages</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.UpdateMessageToContactAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.ChatMention},System.Threading.CancellationToken)">
            <summary>
            Update a message that was previously sent to a user on on the sender's contact list.
            </summary>
            <param name="messageId">The unique identifier of the message.</param>
            <param name="userId">The unique identifier of the sender.</param>
            <param name="recipientEmail">The email address of the contact to whom you would like to send the message.</param>
            <param name="message">The message.</param>
            <param name="mentions">Mentions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.UpdateMessageToChannelAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.ChatMention},System.Threading.CancellationToken)">
            <summary>
            Update a message that was previously sent to a channel of which the sender is a member.
            </summary>
            <param name="messageId">The unique identifier of the message.</param>
            <param name="userId">The unique identifier of the sender.</param>
            <param name="channelId">The channel Id.</param>
            <param name="message">The message.</param>
            <param name="mentions">Mentions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.DeleteMessageToContactAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a message that was previously sent to a user on on the sender's contact list.
            </summary>
            <param name="messageId">The unique identifier of the message.</param>
            <param name="userId">The unique identifier of the sender.</param>
            <param name="recipientEmail">The email address of the contact to whom you would like to send the message.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IChat.DeleteMessageToChannelAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a message that was previously sent to a channel of which the sender is a member.
            </summary>
            <param name="messageId">The unique identifier of the message.</param>
            <param name="userId">The unique identifier of the sender.</param>
            <param name="channelId">The channel Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.ICloudRecordings">
            <summary>
            Allows you to manage cloud recordings.
            </summary>
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/cloud-recording/">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.GetRecordingsForUserAsync(System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve all cloud recordings for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="queryTrash">Indicates if you want to list recordings from trash.</param>
            <param name="from">The start date.</param>
            <param name="to">The end date.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Recording">recordings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.GetRecordingsForUserAsync(System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all cloud recordings for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="queryTrash">Indicates if you want to list recordings from trash.</param>
            <param name="from">The start date.</param>
            <param name="to">The end date.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Recording">recordings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.GetRecordingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all cloud recordings for a meeting or webinar.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Details of recordings made for a particular meeding or webinar.</returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.MoveRecordingsToTrashAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Move recording files for a meeting to trash.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.DeleteRecordingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Permanently delete recording files for a meeting.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.MoveRecordingToTrashAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Move a specific recording file for a meeting to trash.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="recordingId">The recording id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.DeleteRecordingAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Permanently delete a specific recording file for a meeting.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="recordingId">The recording id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.RecoverRecordingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Recover all deleted recordings of a meeting from trash.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
            <remarks>Zoom allows recordings to be recovered from trash for up to 30 days from deletion date.</remarks>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.RecoverRecordingAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Recover a specific recording file of a meeting.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="recordingId">The recording id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.GetRecordingSettingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve settings applied to a meeting's cloud recording.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.RecordingSettings" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.GetRecordingRegistrantsAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve all registrants for a recording.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant">registrants</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.GetRecordingRegistrantsAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all registrants for a recording.
            </summary>
            <param name="meetingId">The meeting Id or UUID.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant">registrants</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.AddRegistrantAsync(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a registrant to an on-demand recording.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="email">Registrant's email address.</param>
            <param name="firstName">Registrant's first name.</param>
            <param name="lastName">Registrant's last name.</param>
            <param name="address">Registrant's address.</param>
            <param name="city">Registrant's city.</param>
            <param name="country">Registrant's country.</param>
            <param name="zip">Registrant's zip/postal code.</param>
            <param name="state">Registrant's state/province.</param>
            <param name="phone">Registrant's phone number.</param>
            <param name="industry">Registrant's industry.</param>
            <param name="organization">Registrant's organization.</param>
            <param name="jobTitle">Registrant's job title.</param>
            <param name="purchasingTimeFrame">This field can be included to gauge interest of attendees towards buying your product or service.</param>
            <param name="roleInPurchaseProcess">Registrant's role in purchase decision.</param>
            <param name="numberOfEmployees">Number of employees.</param>
            <param name="comments">A field that allows registrants to provide any questions or comments that they might have.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A <see cref="T:ZoomNet.Models.RecordingRegistration" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.ApproveRegistrantAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Approve a registration for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.ApproveRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Approve multiple registrations for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantIds">ID for each registrant to be approved.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.RejectRegistrantAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Reject a registration for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.ICloudRecordings.RejectRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Reject multiple registrations for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantIds">ID for each registrant to be rejected.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.IContacts">
            <summary>
            Allows you to manage contacts.
            </summary>
            <seealso cref="T:ZoomNet.Resources.IContacts" />
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/contacts/">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IContacts.GetAllAsync(ZoomNet.Models.ContactType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the current user's contacts.
            </summary>
            <param name="type">The type of contacts.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Contact">contacts</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IContacts.SearchAsync(System.String,System.Boolean,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Search contacts.
            </summary>
            <param name="keyword">The search keyword: either first name, last na,me or email of the contact.</param>
            <param name="queryPresenceStatus">Indicate whether you want the status of a contact to be included in the response.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Contact">contacts</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IContacts.GetAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a specific contact of the current Zoom user.
            </summary>
            <param name="contactId">The unique identifier or email address of the contact.</param>
            <param name="queryPresenceStatus">Indicate whether you want the status of a contact to be included in the response.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Contact"/>.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.IDashboards">
            <summary>
            Allows you to view various metrics.
            </summary>
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/dashboards">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetAllMeetingsAsync(System.DateTime,System.DateTime,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve data on total live or past meetings that occurred during a specified period of time.
            Only data from within the last 6 months will be returned.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="type">The type of meetings. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.DashboardMeetingMetrics">meetings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetMeetingAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details of a meeting.
            </summary>
            <param name="meetingId">The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.</param>
            <param name="type">The type of meetings. Allowed values: Past, PastOne, Live.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.DashboardMeetingMetrics" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetMeetingParticipantsAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of participants from live or past meetings.
            If you do not provide the type query parameter, the default value will be set to live and thus,
            you will only see metrics for participants in a live meeting, if any meeting is currently being conducted.To view metrics on past meeting participants,
            provide the appropriate value for type.
            </summary>
            <param name="meetingId">The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.</param>
            <param name="type">The type of meetings. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.DashboardMeetingParticipant">participants</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetMeetingParticipantQosAsync(System.String,System.String,ZoomNet.Models.DashboardMeetingType,System.Threading.CancellationToken)">
            <summary>
            Retrieve the quality of service for participants from live or past meetings.
            This data indicates the connection quality for sending/receiving video, audio, and shared content.
            If nothing is being sent or received at that time, no information will be shown in the fields.
            </summary>
            <param name="meetingId">The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.</param>
            <param name="participantId">The participant id.</param>
            <param name="type">The type of meetings. Allowed values: Past, PastOne, Live.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The <see cref="T:ZoomNet.Models.DashboardMeetingParticipantQos"/> quality of service metrics for the participant.</returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetAllMeetingParticipantsQosAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of meeting participants from live or past meetings along with the quality of service they receive during the meeting such as connection quality for sending/receiving video, audio, and shared content.
            </summary>
            <param name="meetingId">The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.</param>
            <param name="type">The type of meetings. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.DashboardMeetingParticipantQos">participants</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetAllMeetingParticipantSharingDetailsAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the sharing and recording details of participants from live or past meetings.
            </summary>
            <param name="meetingId">The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.</param>
            <param name="type">The type of meetings. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.ParticipantSharingDetails">sharing details for the meetings participants.</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetAllWebinarsAsync(System.DateTime,System.DateTime,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve data on total live or past webinars that occurred during a specified period of time.
            Only data from within the last 6 months will be returned.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="type">The type of webinar. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.DashboardMetricsBase">webinars.</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetWebinarAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details of a webinar.
            </summary>
            <param name="webinarId">The webinar ID or meeting UUID. If given the webinar ID it will take the last webinar instance.</param>
            <param name="type">The type of webinar. Allowed values: Past, PastOne, Live.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.DashboardMetricsBase" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetWebinarParticipantsAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of participants from live or past webinars.
            </summary>
            <param name="webinarId">The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.</param>
            <param name="type">The type of webinar. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.DashboardParticipant">participants</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetWebinarParticipantQosAsync(System.String,System.String,ZoomNet.Models.DashboardMeetingType,System.Threading.CancellationToken)">
            <summary>
            Retrieve the quality of service for participants from live or past webinars.
            This data indicates the connection quality for sending/receiving video, audio, and shared content.
            If nothing is being sent or received at that time, no information will be shown in the fields.
            </summary>
            <param name="webinarId">The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.</param>
            <param name="participantId">The participant id.</param>
            <param name="type">The type of webinars. Allowed values: Past, PastOne, Live.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The <see cref="T:ZoomNet.Models.DashboardMeetingParticipantQos"/> quality of service metrics for the participant.</returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetAllWebinarParticipantQosAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of webinar participants from live or past webinars along with the quality of service they receive during the webinar such as connection quality for sending/receiving video, audio, and shared content.
            </summary>
            <param name="webinarId">The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.</param>
            <param name="type">The type of webinars. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.DashboardMeetingParticipantQos">participants</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetAllWebinarParticipantSharingDetailsAsync(System.String,ZoomNet.Models.DashboardMeetingType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the sharing and recording details of participants from live or past webinars.
            </summary>
            <param name="webinarId">The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.</param>
            <param name="type">The type of webinars. Allowed values: Past, PastOne, Live.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.ParticipantSharingDetails">sharing details for the webinars participants.</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetAllZoomRoomsAsync(System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            List information on all Zoom Rooms in an account.
            </summary>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An array of <see cref="T:ZoomNet.Models.ZoomRoom"/> Zoom rooms.</returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetRoomDetailsAsync(System.String,System.DateTime,System.DateTime,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            The Zoom Rooms dashboard metrics lets you know the type of configuration a Zoom room has and details on the meetings held in that room.
            </summary>
            <param name="roomId">The Zoom room id.</param>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:ZoomNet.Models.ZoomRoom"/> Zoom room with details on current and past meetings.</returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetCrcPortUsageAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            A Cloud Room Connector allows H.323/SIP endpoints to connect to a Zoom meeting. <br/>
            Use this API to get the hour by hour CRC Port usage for a specified period of time. <br/>
            We will provide the report for a maximum of one month.For example, if “from” is set to “2017-08-05” and “to” is set to “2017-10-10”, we will adjust “from” to “2017-09-10”.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The <see cref="T:ZoomNet.Models.CrcPortMetrics">Report </see> of metrics on CRC usage.</returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetImMetricsAsync(System.DateTime,System.DateTime,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get <a href="https://support.zoom.us/hc/en-us/articles/204654719-Dashboard#h_cc7e9749-1c70-4afb-a9a2-9680654821e4">metrics</a> on how users are utilizing the Zoom Chat Client.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ImMetric">chat room usage metrics</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetClientFeedbackMetricsAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Retrieve survey results from <a href="https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf">Zoom meetings client feedback.</a>.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:ZoomNet.Models.ClientFeedbackMetricsReport"/> report with metrics on client feedback.</returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetIssuesOfZoomRoomsAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Get Top 25 issues of Zoom rooms.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:ZoomNet.Models.IssuesOfZoomRoomsReport"/> report with the list of top issues in Zoom rooms.</returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetZoomRoomsWithIssuesAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Get information on top 25 Zoom Rooms with issues in a month. The month specified with the “from” and “to” range should fall within the last six months.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:ZoomNet.Models.ZoomRoomWithIssuesReport"/> report with the list of Zoom rooms with issues.</returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetIssuesOfZoomRoomAsync(System.String,System.DateTime,System.DateTime,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the issues that occurred on the Top 25 Zoom Rooms with issues in an account.
            </summary>
            <param name="zoomRoomId">The Zoom room id.</param>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ZoomRoomIssueDetails">Zoom room issue details</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetZoomMeetingsClientFeedbackAsync(System.String,System.DateTime,System.DateTime,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve detailed information on a <a href="https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf">Zoom meetings client feedback.</a>.
            </summary>
            <param name="feedbackId">The Zoom room id.</param>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="pageSize">The number of records returned within a single API call.</param>
            <param name="pageToken">
            The next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results exceeds the current page size.
            The expiration period for this token is 15 minutes.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.ClientFeedbackDetail">client feedback details</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IDashboards.GetClientMeetingSatisfactionMetrics(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            If the <a href="https://support.zoom.us/hc/en-us/articles/115005855266">End of Meeting Feedback Survey</a> option is enabled, attendees will be prompted with a survey window where they can tap either the Thumbs Up or Thumbs Down button that indicates their Zoom meeting experience. <br/>
            With this API, you can get information on the attendees’ meeting satisfaction. Specify a monthly date range for the query using the from and to query parameters.
            The month should fall within the last six months. <br />
            To get information on the survey results with negative experiences(indicated by Thumbs Down), use <see cref="M:ZoomNet.Resources.IDashboards.GetZoomMeetingsClientFeedbackAsync(System.String,System.DateTime,System.DateTime,System.Int32,System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="from">
            Date to start searching from. Should be within a month of "to" as only a months worth of data is returned at a time.
            </param>
            <param name="to">Date to end search.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:ZoomNet.Models.ClientSatisfactionReport"/> report with a list of client satisfaction reports.</returns>
        </member>
        <member name="T:ZoomNet.Resources.IDataCompliance">
            <summary>
            Allows you to notify Zoom that you comply with the policy which requires you to handle
            user's data in accordance to the user's preference after the user uninstalls your app.
            </summary>
            <remarks>
            This resource can only be used when you connect to Zoom using OAuth. It cannot be used with a Jwt connection.
            See <a href="https://marketplace.zoom.us/docs/api-reference/data-compliance/">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IDataCompliance.NotifyAsync(System.String,System.Int64,ZoomNet.Models.Webhooks.AppDeauthorizedEvent,System.Threading.CancellationToken)">
            <summary>
            Notify Zoom that you comply with the policy which requires you to handle user's
            data in accordance to the user's preference after the user uninstalls your app.
            </summary>
            <param name="userId">The Zoom user's id who uninstalled your app.</param>
            <param name="accountId">The account Id.</param>
            <param name="deauthorizationEventReceived">This object represents the payload of the webhook event sent by Zoom in your Deauthorization Endpoint Url after a user uninstalls your app. The values of the parameters in this object should be the same as that of the deauthorization event that you receive.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.IMeetings">
            <summary>
            Allows you to manage meetings.
            </summary>
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.GetAllAsync(System.String,ZoomNet.Models.MeetingListType,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve all meetings of the specified type for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="type">The type of meetings. Allowed values: Scheduled, Live, Upcoming.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Meeting">meetings</see>.
            </returns>
            <remarks>
            This call omits 'occurrences'. Therefore the 'Occurrences' property will be empty.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.GetAllAsync(System.String,ZoomNet.Models.MeetingListType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all meetings of the specified type for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="type">The type of meetings. Allowed values: Scheduled, Live, Upcoming.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Meeting">meetings</see>.
            </returns>
            <remarks>
            This call omits 'occurrences'. Therefore the 'Occurrences' property will be empty.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.CreateInstantMeetingAsync(System.String,System.String,System.String,System.String,ZoomNet.Models.MeetingSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Creates an instant meeting for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Meeting topic.</param>
            <param name="agenda">Meeting description.</param>
            <param name="password">Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.</param>
            <param name="settings">Meeting settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The new meeting.
            </returns>
            <exception cref="T:System.Exception">Thrown when an exception occured while creating the meeting.</exception>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.CreateScheduledMeetingAsync(System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{ZoomNet.Models.TimeZones},System.String,ZoomNet.Models.MeetingSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Create a scheduled meeting for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Meeting topic.</param>
            <param name="agenda">Meeting description.</param>
            <param name="start">Meeting start time.</param>
            <param name="duration">Meeting duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="password">Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.</param>
            <param name="settings">Meeting settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The new meeting.
            </returns>
            <exception cref="T:System.Exception">Thrown when an exception occured while creating the meeting.</exception>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.CreateRecurringMeetingAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Int32,ZoomNet.Models.RecurrenceInfo,System.Nullable{ZoomNet.Models.TimeZones},System.String,ZoomNet.Models.MeetingSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Create a recurring meeting for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Meeting topic.</param>
            <param name="agenda">Meeting description.</param>
            <param name="start">Meeting start time. If omitted, a 'Recurring meeting with no fixed time' will be created.</param>
            <param name="duration">Meeting duration (minutes).</param>
            <param name="recurrence">Recurrence information.</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="password">Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.</param>
            <param name="settings">Meeting settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The new meeting.
            </returns>
            <exception cref="T:System.Exception">Thrown when an exception occured while creating the meeting.</exception>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.UpdateMeetingOccurrenceAsync(System.Int64,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{ZoomNet.Models.TimeZones},ZoomNet.Models.MeetingSettings,System.Threading.CancellationToken)">
            <summary>
            Update the details of a meeting occurrence.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="agenda">Meeting description.</param>
            <param name="start">Meeting start time.</param>
            <param name="duration">Meeting duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="settings">Meeting settings.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.UpdateScheduledMeetingAsync(System.Int64,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{ZoomNet.Models.TimeZones},System.String,ZoomNet.Models.MeetingSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Update the details of a scheduled meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Meeting topic.</param>
            <param name="agenda">Meeting description.</param>
            <param name="start">Meeting start time.</param>
            <param name="duration">Meeting duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="password">Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.</param>
            <param name="settings">Meeting settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.UpdateRecurringMeetingAsync(System.Int64,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{ZoomNet.Models.TimeZones},ZoomNet.Models.RecurrenceInfo,System.String,ZoomNet.Models.MeetingSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Update the details of a recurring meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Meeting topic.</param>
            <param name="agenda">Meeting description.</param>
            <param name="start">Meeting start time. If omitted, a 'Recurring meeting with no fixed time' will be created.</param>
            <param name="duration">Meeting duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="recurrence">Recurrence information.</param>
            <param name="password">Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.</param>
            <param name="settings">Meeting settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.GetAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details of a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Meeting" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.DeleteAsync(System.Int64,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Delete a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="notifyHost">If true, a notification email is sent to the host and alternative host.</param>
            <param name="notifyRegistrants">If true, a notification email is sent to the registrants.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.EndAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            End a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.GetRegistrantsAsync(System.Int64,ZoomNet.Models.RegistrantStatus,System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            List registrants of a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="status">The registrant status.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.GetRegistrantsAsync(System.Int64,ZoomNet.Models.RegistrantStatus,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            List registrants of a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="status">The registrant status.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.AddRegistrantAsync(System.Int64,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a registrant to a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="email">A valid email address.</param>
            <param name="firstName">User's first name.</param>
            <param name="lastName">User's last name.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.ApproveRegistrantAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Approve a registration for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="registrantEmail">The registrant's email address.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.ApproveRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.Threading.CancellationToken)">
            <summary>
            Approve multiple registrations for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantsInfo">ID and email for each registrant to be approved.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.RejectRegistrantAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Reject a registration for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="registrantEmail">The registrant's email address.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.RejectRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.Threading.CancellationToken)">
            <summary>
            Reject multiple registrations for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantsInfo">ID and email for each registrant to be rejected.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.CancelRegistrantAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a previously approved registration for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="registrantEmail">The registrant's email address.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.CancelRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel multiple previously approved registrations for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantsInfo">ID and email for each registrant to be cancelled.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.GetPollsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve all polls for a meeting.
            </summary>
            <param name="meetingId">The meeting id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Poll" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.CreatePoll(System.Int64,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.PollQuestion},System.Threading.CancellationToken)">
            <summary>
            Create a poll for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="title">Title for the poll.</param>
            <param name="questions">The poll questions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.GetPollAsync(System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve a poll.
            </summary>
            <param name="meetingId">The meeting id.</param>
            <param name="pollId">The poll id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Poll" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.UpdatePollAsync(System.Int64,System.Int64,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.PollQuestion},System.Threading.CancellationToken)">
            <summary>
            Update a poll for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="pollId">The poll id.</param>
            <param name="title">Title for the poll.</param>
            <param name="questions">The poll questions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.DeletePollAsync(System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Delete a poll for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="pollId">The poll id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.GetInvitationAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get the meeting invite note that was sent for a specific meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The invite note.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.UpdateLiveStreamAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a meeting’s live stream information.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="streamUrl">Streaming URL.</param>
            <param name="streamKey">Stream name and key.</param>
            <param name="pageUrl">The live stream page URL.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.StartLiveStreamAsync(System.Int64,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Start a meeting’s live stream.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="displaySpeakerName">Display the name of the active speaker during a live stream.</param>
            <param name="speakerName">The name of the speaker.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IMeetings.StopLiveStreamAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Stop a meeting’s live stream.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.IPastMeetings">
            <summary>
            Allows you to manage meetings that occured in the past.
            </summary>
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetings">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IPastMeetings.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details of a meeting that occured in the past.
            </summary>
            <param name="uuid">The meeting UUID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Meeting" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IPastMeetings.GetParticipantsAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            List participants of a meeting that occured in the past.
            </summary>
            <param name="uuid">The meeting UUID.</param>
            <param name="recordsPerPage">The number of records to return.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Participant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IPastMeetings.GetInstancesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of ended meeting instance.
            </summary>
            <param name="meetingId">The meeting identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.PastInstance" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IPastMeetings.GetPollResultsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of poll results for a meeting that occured in the past.
            </summary>
            <param name="meetingId">The meeting identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.PollResult" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IPastMeetings.GetFilesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of files sent via in-meeting chat during a meeting.
            </summary>
            <remarks>
            The in-meeting files are deleted after 24 hours of the meeting completion time.
            </remarks>
            <param name="meetingId">The meeting identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.MeetingFile" />.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.IPastWebinars">
            <summary>
            Allows you to manage webinars that occured in the past.
            </summary>
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IPastWebinars.GetAbsenteesAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            List absentees of a webinar that occured in the past.
            </summary>
            <param name="uuid">The webinar UUID.</param>
            <param name="recordsPerPage">The number of records to return.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IPastWebinars.GetInstancesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of ended webinar instance.
            </summary>
            <param name="webinarId">The webinar identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.PastInstance" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IPastWebinars.GetPollResultsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of poll results for a webinar that occured in the past.
            </summary>
            <param name="webinarId">The webinar identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.PollResult" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IPastWebinars.GetQuestionsAndAnswersResultsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of Q&amp;A results for a webinar that occured in the past.
            </summary>
            <param name="webinarId">The webinar identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.PollResult" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IPastWebinars.GetFilesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of files sent via in-webinar chat during a webinar.
            </summary>
            <remarks>
            The in-webinar files are deleted after 24 hours of the webinar completion time.
            </remarks>
            <param name="webinarId">The webinar identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.MeetingFile" />.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.IUsers">
            <summary>
            Allows you to manage users.
            </summary>
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/users/">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.GetAllAsync(ZoomNet.Models.UserStatus,System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve all users on your account.
            </summary>
            <param name="status">The user status. Allowed values: Active, Inactive, pending.</param>
            <param name="roleId">Unique identifier for the role. Provide this parameter if you would like to filter the response by a specific role.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.User">users</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.GetAllAsync(ZoomNet.Models.UserStatus,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all users on your account.
            </summary>
            <param name="status">The user status. Allowed values: Active, Inactive, pending.</param>
            <param name="roleId">Unique identifier for the role. Provide this parameter if you would like to filter the response by a specific role.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.User">users</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.CreateAsync(System.String,System.String,System.String,System.String,ZoomNet.Models.UserType,ZoomNet.Models.UserCreateType,System.Threading.CancellationToken)">
            <summary>
            Creates a user.
            </summary>
            <param name="email">The email address.</param>
            <param name="firstName">First name.</param>
            <param name="lastName">Last name.</param>
            <param name="password">User password. Only used when createType is <see cref="F:ZoomNet.Models.UserCreateType.Auto"/>.</param>
            <param name="type">The type of user.</param>
            <param name="createType">Specify how to create the user.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The new user.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the information of a specific user on a Zoom account.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.User" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.DeleteAsync(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Permanently delete a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="transferEmail">Transfer email.</param>
            <param name="transferMeetings">Transfer meetings.</param>
            <param name="transferWebinars">Transfer webinars.</param>
            <param name="transferRecordings">Transfer recordings.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
            <remarks>
            To delete a pending user in the account, use <see cref="M:ZoomNet.Resources.IUsers.DisassociateAsync(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.DisassociateAsync(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Disassociate a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="transferEmail">Transfer email.</param>
            <param name="transferMeetings">Transfer meetings.</param>
            <param name="transferWebinars">Transfer webinars.</param>
            <param name="transferRecordings">Transfer recordings.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.GetAssistantsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user's assistants.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Assistant">assistants</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.AddAssistantsByIdAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Add assistants to a user.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="assistantIds">The id of the assistants to associate with this user.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.AddAssistantsByEmailAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Add assistants to a user.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="assistantEmails">The email address of the assistants to associate with this user.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.DeleteAssistantAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a specific assistant of a user.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="assistantId">The id of the assistant to disassociate from this user.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.DeleteAllAssistantsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete all assistants of a user.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.GetSchedulersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user's schedulers.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Assistant">schedulers</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.DeleteSchedulerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a specific scheduler of a user.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="assistantId">The id of the scheduler to disassociate from this user.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.DeleteAllSchedulersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete all schedulers of a user.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.UploadProfilePicture(System.String,System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Upload a user’s profile picture.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="fileName">The file name.</param>
            <param name="pictureData">The binary data.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.GetSettingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user's settings.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.UserSettings">settings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.GetMeetingAuthenticationSettingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user's meeting authentication settings.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.AuthenticationSettings">settings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.GetRecordingAuthenticationSettingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user's recording authentication settings.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.AuthenticationSettings">settings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.DeactivateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deactivate a specific user on a Zoom account.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.ReactivateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Reactivate a specific user on a Zoom account.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.ChangePasswordAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Change the password of a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="password">The password.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.GetPermissionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the permissions that have been granted to a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of strings.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.RevokeSsoTokenAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Revoke a user's SSO token.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.CheckEmailInUseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Verify if a user's email is registered with Zoom.
            </summary>
            <param name="email">The email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            true if the email is registered to a user within your account.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.ChangeEmailAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Change a user's email address on a Zoom account that has managed domain set up.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="email">The email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.CheckPersonalMeetingRoomNameInUseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Verify if a personal meeting room with the given name exists or not.
            </summary>
            <param name="name">The room name.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            true if a room with the given name exists.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IUsers.SwitchAccountAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Disassociate a user from one account and move the user to another account under the same master account.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="currentAccountId">The current account id.</param>
            <param name="newAccountId">The new account id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.IWebinars">
            <summary>
            Allows you to manage webinars.
            </summary>
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.GetAllAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve all webinars for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Webinar">webinars</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.GetAllAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all webinars for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Webinar">webinars</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.CreateScheduledWebinarAsync(System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{ZoomNet.Models.TimeZones},System.String,ZoomNet.Models.WebinarSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a scheduled webinar for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Webinar topic.</param>
            <param name="agenda">Webinar description.</param>
            <param name="start">Webinar start time.</param>
            <param name="duration">Webinar duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="password">Password to join the webinar. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.</param>
            <param name="settings">Webinar settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="templateId">Template Identifer.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The new webinar.
            </returns>
            <exception cref="T:System.Exception">Thrown when an exception occured while creating the webinar.</exception>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.CreateRecurringWebinarAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Int32,ZoomNet.Models.RecurrenceInfo,System.Nullable{ZoomNet.Models.TimeZones},System.String,ZoomNet.Models.WebinarSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a recurring webinar for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Webinar topic.</param>
            <param name="agenda">Webinar description.</param>
            <param name="start">Webinar start time.</param>
            <param name="duration">Webinar duration (minutes).</param>
            <param name="recurrence">Recurrence information.</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="password">Password to join the webinar. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.</param>
            <param name="settings">Webinar settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="templateId">Template Identifer. If passed in, Zoom advise using the userId in the <paramref name="userId"/> field, rather than email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The new webinar.
            </returns>
            <exception cref="T:System.Exception">Thrown when an exception occured while creating the webinar.</exception>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.UpdateWebinarOccurrenceAsync(System.Int64,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{ZoomNet.Models.TimeZones},ZoomNet.Models.WebinarSettings,System.Threading.CancellationToken)">
            <summary>
            Update the details of a webinar occurrence.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="agenda">Meeting description.</param>
            <param name="start">Meeting start time.</param>
            <param name="duration">Meeting duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="settings">Meeting settings.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.UpdateScheduledWebinarAsync(System.Int64,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{ZoomNet.Models.TimeZones},System.String,ZoomNet.Models.WebinarSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Updates an existing scheduled webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="topic">Webinar topic.</param>
            <param name="agenda">Webinar description.</param>
            <param name="start">Webinar start time.</param>
            <param name="duration">Webinar duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="password">Password to join the webinar. By default the password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters. This can be updated within Zoom account settings.</param>
            <param name="settings">Webinar settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.UpdateRecurringWebinarAsync(System.Int64,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{ZoomNet.Models.TimeZones},ZoomNet.Models.RecurrenceInfo,System.String,ZoomNet.Models.WebinarSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Updates an existing recurring webinar for a user.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="topic">Webinar topic.</param>
            <param name="agenda">Webinar description.</param>
            <param name="start">Webinar start time.</param>
            <param name="duration">Webinar duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="recurrence">Recurrence information.</param>
            <param name="password">Password to join the webinar. By default the password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters. This can be updated within Zoom account settings.</param>
            <param name="settings">Webinar settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.GetAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details of a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Webinar" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.DeleteAsync(System.Int64,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Delete a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="sendNotification">If true, a notification email is sent to the panelists and registrants.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.EndAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            End a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.GetPanelistsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            List panelists of a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Panelist"/>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.AddPanelistAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a single panelist to a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="email">Panelist's email address.</param>
            <param name="fullName">Panelist's full name.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.AddPanelistsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Threading.CancellationToken)">
            <summary>
            Add multiple panelists to a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="panelists">The panelists to add to the webinar.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.RemovePanelistAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a single panelist from a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="panelistId">Panelist's email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.RemoveAllPanelistsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Remove all panelists from a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.GetRegistrantsAsync(System.Int64,ZoomNet.Models.RegistrantStatus,System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            List the users that have registered for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="status">The registrant status.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.GetRegistrantsAsync(System.Int64,ZoomNet.Models.RegistrantStatus,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            List the users that have registered for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="status">The registrant status.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.GetRegistrantAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details on a specific user who registered for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.AddRegistrantAsync(System.Int64,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a registrant to a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="email">A valid email address.</param>
            <param name="firstName">User's first name.</param>
            <param name="lastName">User's last name.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A <see cref="T:ZoomNet.Models.RegistrantInfo" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.ApproveRegistrantAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Approve a registration for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="registrantEmail">The registrant's email address.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.ApproveRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.Threading.CancellationToken)">
            <summary>
            Approve multiple registrations for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantsInfo">ID and email for each registrant to be approved.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.RejectRegistrantAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Reject a registration for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="registrantEmail">The registrant's email address.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.RejectRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.Threading.CancellationToken)">
            <summary>
            Reject multiple registrations for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantsInfo">ID and email for each registrant to be rejected.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.CancelRegistrantAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a previously approved registration for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="registrantEmail">The registrant's email address.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.CancelRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel multiple previously approved registrations for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantsInfo">ID and email for each registrant to be cancelled.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.GetPollsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve all polls for a webinar.
            </summary>
            <param name="webinarId">The webinar id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Poll" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.CreatePoll(System.Int64,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.PollQuestion},System.Threading.CancellationToken)">
            <summary>
            Create a poll for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="title">Title for the poll.</param>
            <param name="questions">The poll questions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.GetPollAsync(System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve a poll.
            </summary>
            <param name="webinarId">The webinar id.</param>
            <param name="pollId">The poll id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Poll" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.UpdatePollAsync(System.Int64,System.Int64,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.PollQuestion},System.Threading.CancellationToken)">
            <summary>
            Update a poll for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="pollId">The poll id.</param>
            <param name="title">Title for the poll.</param>
            <param name="questions">The poll questions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.DeletePollAsync(System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Delete a poll for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="pollId">The poll id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.GetRegistrationQuestions(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve the questions that are to be answered by users while registering for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.PollQuestion"/>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.UpdateRegistrationQuestions(System.Int64,System.Collections.Generic.IEnumerable{ZoomNet.Models.PollQuestion},System.Threading.CancellationToken)">
            <summary>
            Update the questions that are to be answered by users while registering for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="customQuestions">The questions to be answered.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.GetTrackingSourcesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve all the tracking sources of a webinar.
            </summary>
            <param name="webinarId">The webinar id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.TrackingSource" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.IWebinars.GetWebinarTemplatesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all the templates created for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Template" />.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.Meetings">
            <summary>
            Allows you to manage meetings.
            </summary>
            <seealso cref="T:ZoomNet.Resources.IMeetings" />
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.#ctor(Pathoschild.Http.Client.IClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Resources.Meetings" /> class.
            </summary>
            <param name="client">The HTTP client.</param>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.GetAllAsync(System.String,ZoomNet.Models.MeetingListType,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve all meetings of the specified type for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="type">The type of meetings. Allowed values: Scheduled, Live, Upcoming.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Meeting" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.GetAllAsync(System.String,ZoomNet.Models.MeetingListType,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all meetings of the specified type for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="type">The type of meetings. Allowed values: Scheduled, Live, Upcoming.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Meeting" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.CreateInstantMeetingAsync(System.String,System.String,System.String,System.String,ZoomNet.Models.MeetingSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Creates an instant meeting for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Meeting topic.</param>
            <param name="agenda">Meeting description.</param>
            <param name="password">Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.</param>
            <param name="settings">Meeting settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The new meeting.
            </returns>
            <exception cref="T:System.Exception">Thrown when an exception occured while creating the meeting.</exception>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.CreateScheduledMeetingAsync(System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{ZoomNet.Models.TimeZones},System.String,ZoomNet.Models.MeetingSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Creates a scheduled meeting for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Meeting topic.</param>
            <param name="agenda">Meeting description.</param>
            <param name="start">Meeting start time.</param>
            <param name="duration">Meeting duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="password">Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.</param>
            <param name="settings">Meeting settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The new meeting.
            </returns>
            <exception cref="T:System.Exception">Thrown when an exception occured while creating the meeting.</exception>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.CreateRecurringMeetingAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Int32,ZoomNet.Models.RecurrenceInfo,System.Nullable{ZoomNet.Models.TimeZones},System.String,ZoomNet.Models.MeetingSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Creates a recurring meeting for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Meeting topic.</param>
            <param name="agenda">Meeting description.</param>
            <param name="start">Meeting start time. If omitted, a 'Recurring meeting with no fixed time' will be created.</param>
            <param name="duration">Meeting duration (minutes).</param>
            <param name="recurrence">Recurrence information.</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="password">Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.</param>
            <param name="settings">Meeting settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The new meeting.
            </returns>
            <exception cref="T:System.Exception">Thrown when an exception occured while creating the meeting.</exception>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.GetAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details of a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Meeting" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.UpdateMeetingOccurrenceAsync(System.Int64,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{ZoomNet.Models.TimeZones},ZoomNet.Models.MeetingSettings,System.Threading.CancellationToken)">
            <summary>
            Update the details of a meeting occurence.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="agenda">Meeting description.</param>
            <param name="start">Meeting start time.</param>
            <param name="duration">Meeting duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="settings">Meeting settings.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.UpdateScheduledMeetingAsync(System.Int64,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{ZoomNet.Models.TimeZones},System.String,ZoomNet.Models.MeetingSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Update the details of a scheduled meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Meeting topic.</param>
            <param name="agenda">Meeting description.</param>
            <param name="start">Meeting start time.</param>
            <param name="duration">Meeting duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="password">Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.</param>
            <param name="settings">Meeting settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.UpdateRecurringMeetingAsync(System.Int64,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{ZoomNet.Models.TimeZones},ZoomNet.Models.RecurrenceInfo,System.String,ZoomNet.Models.MeetingSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Update the details of a recurring meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Meeting topic.</param>
            <param name="agenda">Meeting description.</param>
            <param name="start">Meeting start time. If omitted, a 'Recurring meeting with no fixed time' will be created.</param>
            <param name="duration">Meeting duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="recurrence">Recurrence information.</param>
            <param name="password">Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.</param>
            <param name="settings">Meeting settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.DeleteAsync(System.Int64,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Delete a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="notifyHost">If true, a notification email is sent to the host and alternative host.</param>
            <param name="notifyRegistrants">If true, a notification email is sent to the registrants.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.EndAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            End a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.GetRegistrantsAsync(System.Int64,ZoomNet.Models.RegistrantStatus,System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            List registrants of a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="status">The registrant status.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.GetRegistrantsAsync(System.Int64,ZoomNet.Models.RegistrantStatus,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            List registrants of a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="status">The registrant status.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.AddRegistrantAsync(System.Int64,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a registrant to a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="email">A valid email address.</param>
            <param name="firstName">User's first name.</param>
            <param name="lastName">User's last name.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.ApproveRegistrantAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Approve a registration for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="registrantEmail">The registrant's email address.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.ApproveRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.Threading.CancellationToken)">
            <summary>
            Approve multiple registrations for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantsInfo">ID and email for each registrant to be approved.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.RejectRegistrantAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Reject a registration for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="registrantEmail">The registrant's email address.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.RejectRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.Threading.CancellationToken)">
            <summary>
            Reject multiple registrations for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantsInfo">ID and email for each registrant to be rejected.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.CancelRegistrantAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a previously approved registration for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="registrantEmail">The registrant's email address.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.CancelRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel multiple previously approved registrations for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="registrantsInfo">ID and email for each registrant to be cancelled.</param>
            <param name="occurrenceId">The meeting occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.GetPollsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve all polls for a meeting.
            </summary>
            <param name="meetingId">The meeting id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Poll" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.CreatePoll(System.Int64,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.PollQuestion},System.Threading.CancellationToken)">
            <summary>
            Create a poll for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="title">Title for the poll.</param>
            <param name="questions">The poll questions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A <see cref="T:ZoomNet.Models.Poll"/>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.GetPollAsync(System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve a poll.
            </summary>
            <param name="meetingId">The meeting id.</param>
            <param name="pollId">The poll id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Poll" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.UpdatePollAsync(System.Int64,System.Int64,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.PollQuestion},System.Threading.CancellationToken)">
            <summary>
            Update a poll for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="pollId">The poll id.</param>
            <param name="title">Title for the poll.</param>
            <param name="questions">The poll questions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.DeletePollAsync(System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Delete a poll for a meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="pollId">The poll id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.GetInvitationAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get the meeting invite note that was sent for a specific meeting.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The invite note.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.UpdateLiveStreamAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a meeting’s live stream information.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="streamUrl">Streaming URL.</param>
            <param name="streamKey">Stream name and key.</param>
            <param name="pageUrl">The live stream page URL.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.StartLiveStreamAsync(System.Int64,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Start a meeting’s live stream.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="displaySpeakerName">Display the name of the active speaker during a live stream.</param>
            <param name="speakerName">The name of the speaker.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Meetings.StopLiveStreamAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Stop a meeting’s live stream.
            </summary>
            <param name="meetingId">The meeting ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.PastMeetings">
            <summary>
            Allows you to manage meetings that occured in the past.
            </summary>
            <seealso cref="T:ZoomNet.Resources.IMeetings" />
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetings">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.PastMeetings.#ctor(Pathoschild.Http.Client.IClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Resources.PastMeetings" /> class.
            </summary>
            <param name="client">The HTTP client.</param>
        </member>
        <member name="M:ZoomNet.Resources.PastMeetings.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details of a meeting that occured in the past.
            </summary>
            <param name="uuid">The meeting UUID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Meeting" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.PastMeetings.GetParticipantsAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            List participants of a meeting that occured in the past.
            </summary>
            <param name="uuid">The meeting UUID.</param>
            <param name="recordsPerPage">The number of records to return.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Participant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.PastMeetings.GetInstancesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of ended meeting instance.
            </summary>
            <param name="meetingId">The meeting identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.PastInstance" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.PastMeetings.GetPollResultsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of poll results for a meeting that occured in the past.
            </summary>
            <param name="meetingId">The meeting identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.PollResult" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.PastMeetings.GetFilesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of files sent via in-meeting chat during a meeting.
            </summary>
            <remarks>
            The in-meeting files are deleted after 24 hours of the meeting completion time.
            </remarks>
            <param name="meetingId">The meeting identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.MeetingFile" />.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.PastWebinars">
            <summary>
            Allows you to manage webinars that occured in the past.
            </summary>
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.PastWebinars.#ctor(Pathoschild.Http.Client.IClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Resources.PastWebinars" /> class.
            </summary>
            <param name="client">The HTTP client.</param>
        </member>
        <member name="M:ZoomNet.Resources.PastWebinars.GetAbsenteesAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            List absentees of a webinar that occured in the past.
            </summary>
            <param name="uuid">The webinar UUID.</param>
            <param name="recordsPerPage">The number of records to return.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.PastWebinars.GetInstancesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of ended webinar instance.
            </summary>
            <param name="webinarId">The webinar identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.PastInstance" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.PastWebinars.GetPollResultsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of poll results for a webinar that occured in the past.
            </summary>
            <param name="webinarId">The webinar identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.PollResult" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.PastWebinars.GetQuestionsAndAnswersResultsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of Q&amp;A results for a webinar that occured in the past.
            </summary>
            <param name="webinarId">The webinar identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.PollResult" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.PastWebinars.GetFilesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of files sent via in-webinar chat during a webinar.
            </summary>
            <remarks>
            The in-webinar files are deleted after 24 hours of the webinar completion time.
            </remarks>
            <param name="webinarId">The webinar identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.MeetingFile" />.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.Users">
            <summary>
            Allows you to manage users.
            </summary>
            <seealso cref="T:ZoomNet.Resources.IUsers" />
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/users/">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.Users.#ctor(Pathoschild.Http.Client.IClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Resources.Users" /> class.
            </summary>
            <param name="client">The HTTP client.</param>
        </member>
        <member name="M:ZoomNet.Resources.Users.GetAllAsync(ZoomNet.Models.UserStatus,System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve all users on your account.
            </summary>
            <param name="status">The user status. Allowed values: Active, Inactive, pending.</param>
            <param name="roleId">Unique identifier for the role. Provide this parameter if you would like to filter the response by a specific role.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.User">users</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.GetAllAsync(ZoomNet.Models.UserStatus,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all users on your account.
            </summary>
            <param name="status">The user status. Allowed values: Active, Inactive, pending.</param>
            <param name="roleId">Unique identifier for the role. Provide this parameter if you would like to filter the response by a specific role.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.User">users</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.CreateAsync(System.String,System.String,System.String,System.String,ZoomNet.Models.UserType,ZoomNet.Models.UserCreateType,System.Threading.CancellationToken)">
            <summary>
            Creates a user.
            </summary>
            <param name="email">The email address.</param>
            <param name="firstName">First name.</param>
            <param name="lastName">Last name.</param>
            <param name="password">User password. Only used when createType is <see cref="F:ZoomNet.Models.UserCreateType.Auto"/>.</param>
            <param name="type">The type of user.</param>
            <param name="createType">Specify how to create the user.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The new user.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the information of a specific user on a Zoom account.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.User" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.DeleteAsync(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Delete a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="transferEmail">Transfer email.</param>
            <param name="transferMeetings">Transfer meetings.</param>
            <param name="transferWebinars">Transfer webinars.</param>
            <param name="transferRecordings">Transfer recordings.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.DisassociateAsync(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Disassociate a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="transferEmail">Transfer email.</param>
            <param name="transferMeetings">Transfer meetings.</param>
            <param name="transferWebinars">Transfer webinars.</param>
            <param name="transferRecordings">Transfer recordings.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.GetAssistantsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user's assistants.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Assistant">assistants</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.AddAssistantsByIdAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Add assistants to a user.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="assistantIds">The id of the assistants to associate with this user.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.AddAssistantsByEmailAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Add assistants to a user.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="assistantEmails">The email address of the assistants to associate with this user.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.DeleteAssistantAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a specific assistant of a user.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="assistantId">The id of the assistant to disassociate from this user.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.DeleteAllAssistantsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete all assistants of a user.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.GetSchedulersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user's schedulers.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Assistant">schedulers</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.DeleteSchedulerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a specific scheduler of a user.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="assistantId">The id of the scheduler to disassociate from this user.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.DeleteAllSchedulersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete all schedulers of a user.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.UploadProfilePicture(System.String,System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Upload a user’s profile picture.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="fileName">The file name.</param>
            <param name="pictureData">The binary data.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
            <remarks>
            File size cannot exceed 2M.
            Only jpg/jpeg, gif or png image file can be uploaded.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.Users.GetSettingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user's settings.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.UserSettings">settings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.GetMeetingAuthenticationSettingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user's meeting authentication settings.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.AuthenticationSettings">settings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.GetRecordingAuthenticationSettingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user's recording authentication settings.
            </summary>
            <param name="userId">The user Id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.AuthenticationSettings">settings</see>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.DeactivateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deactivate a specific user on a Zoom account.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.ReactivateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Reactivate a specific user on a Zoom account.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.ChangePasswordAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Change the password of a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="password">The password.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.GetPermissionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the permissions that have been granted to a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of strings.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.RevokeSsoTokenAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Revoke a user's SSO token.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.CheckEmailInUseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Verify if a user's email is registered with Zoom.
            </summary>
            <param name="email">The email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            true if the email is registered to a user within your account.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.ChangeEmailAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Change a user's email address on a Zoom account that has managed domain set up.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="email">The email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.CheckPersonalMeetingRoomNameInUseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Verify if a personal meeting room with the given name exists or not.
            </summary>
            <param name="name">The room name.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            true if a room with the given name exists.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Users.SwitchAccountAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Disassociate a user from one account and move the user to another account under the same master account.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="currentAccountId">The current account id.</param>
            <param name="newAccountId">The new account id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="T:ZoomNet.Resources.Webinars">
            <summary>
            Allows you to manage webinars.
            </summary>
            <seealso cref="T:ZoomNet.Resources.IWebinars" />
            <remarks>
            See <a href="https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/">Zoom documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.#ctor(Pathoschild.Http.Client.IClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Resources.Webinars" /> class.
            </summary>
            <param name="client">The HTTP client.</param>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.GetAllAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Retrieve all webinars for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Webinar" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.GetAllAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all webinars for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Webinar" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.CreateScheduledWebinarAsync(System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{ZoomNet.Models.TimeZones},System.String,ZoomNet.Models.WebinarSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a scheduled webinar for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Webinar topic.</param>
            <param name="agenda">Webinar description.</param>
            <param name="start">Webinar start time.</param>
            <param name="duration">Webinar duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="password">Password to join the webinar. By default the password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters. This can be updated within Zoom account settings.</param>
            <param name="settings">Webinar settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="templateId">Template Identifer. If passed in, Zoom advise using the userId in the <paramref name="userId"/> field, rather than email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The new webinar.
            </returns>
            <exception cref="T:System.Exception">Thrown when an exception occured while creating the webinar.</exception>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.CreateRecurringWebinarAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Int32,ZoomNet.Models.RecurrenceInfo,System.Nullable{ZoomNet.Models.TimeZones},System.String,ZoomNet.Models.WebinarSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a recurring webinar for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="topic">Webinar topic.</param>
            <param name="agenda">Webinar description.</param>
            <param name="start">Webinar start time.</param>
            <param name="duration">Webinar duration (minutes).</param>
            <param name="recurrence">Recurrence information.</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="password">Password to join the webinar. By default the password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters. This can be updated within Zoom account settings.</param>
            <param name="settings">Webinar settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="templateId">Template Identifer. If passed in, Zoom advise using the userId in the <paramref name="userId"/> field, rather than email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The new webinar.
            </returns>
            <exception cref="T:System.Exception">Thrown when an exception occured while creating the webinar.</exception>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.UpdateWebinarOccurrenceAsync(System.Int64,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{ZoomNet.Models.TimeZones},ZoomNet.Models.WebinarSettings,System.Threading.CancellationToken)">
            <summary>
            Update the details of a webinar occurence.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="agenda">Webinar description.</param>
            <param name="start">Webinar start time.</param>
            <param name="duration">Webinar duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="settings">Webinar settings.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.UpdateScheduledWebinarAsync(System.Int64,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{ZoomNet.Models.TimeZones},System.String,ZoomNet.Models.WebinarSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Updates an existing scheduled webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="topic">Webinar topic.</param>
            <param name="agenda">Webinar description.</param>
            <param name="start">Webinar start time.</param>
            <param name="duration">Webinar duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="password">Password to join the webinar. By default the password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters. This can be updated within Zoom account settings.</param>
            <param name="settings">Webinar settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.UpdateRecurringWebinarAsync(System.Int64,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{ZoomNet.Models.TimeZones},ZoomNet.Models.RecurrenceInfo,System.String,ZoomNet.Models.WebinarSettings,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Updates an existing recurring webinar for a user.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="topic">Webinar topic.</param>
            <param name="agenda">Webinar description.</param>
            <param name="start">Webinar start time.</param>
            <param name="duration">Webinar duration (minutes).</param>
            <param name="timeZone">The time zone for start time.</param>
            <param name="recurrence">Recurrence information.</param>
            <param name="password">Password to join the webinar. By default the password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters. This can be updated within Zoom account settings.</param>
            <param name="settings">Webinar settings.</param>
            <param name="trackingFields">Tracking fields.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.GetAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the details of a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Webinar" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.DeleteAsync(System.Int64,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Delete a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="sendNotification">If true, a notification email is sent to the panelists and registrants.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.EndAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            End a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.GetPanelistsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            List panelists of a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Panelist"/>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.AddPanelistAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a single panelist to a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="email">Panelist's email address.</param>
            <param name="fullName">Panelist's full name.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.AddPanelistsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Threading.CancellationToken)">
            <summary>
            Add multiple panelists to a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="panelists">The panelists to add to the webinar.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.RemovePanelistAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a single panelist from a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="panelistId">Panelist's email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.RemoveAllPanelistsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Remove all panelists from a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.GetRegistrantsAsync(System.Int64,ZoomNet.Models.RegistrantStatus,System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            List the users that have registered for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="status">The registrant status.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="page">The current page number of returned records.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.GetRegistrantsAsync(System.Int64,ZoomNet.Models.RegistrantStatus,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            List the users that have registered for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="status">The registrant status.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="recordsPerPage">The number of records returned within a single API call.</param>
            <param name="pagingToken">The paging token.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.GetRegistrantAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details on a specific user who registered for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Registrant" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.AddRegistrantAsync(System.Int64,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a registrant to a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="email">A valid email address.</param>
            <param name="firstName">User's first name.</param>
            <param name="lastName">User's last name.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A <see cref="T:ZoomNet.Models.RegistrantInfo" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.ApproveRegistrantAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Approve a registration for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="registrantEmail">The registrant's email address.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.ApproveRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.Threading.CancellationToken)">
            <summary>
            Approve multiple registrations for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantsInfo">ID and email for each registrant to be approved.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.RejectRegistrantAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Reject a registration for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="registrantEmail">The registrant's email address.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.RejectRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.Threading.CancellationToken)">
            <summary>
            Reject multiple registrations for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantsInfo">ID and email for each registrant to be rejected.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.CancelRegistrantAsync(System.Int64,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a previously approved registration for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantId">The registrant ID.</param>
            <param name="registrantEmail">The registrant's email address.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.CancelRegistrantsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel multiple previously approved registrations for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="registrantsInfo">ID and email for each registrant to be cancelled.</param>
            <param name="occurrenceId">The webinar occurrence id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.GetPollsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve all polls for a webinar.
            </summary>
            <param name="webinarId">The webinar id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Poll" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.CreatePoll(System.Int64,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.PollQuestion},System.Threading.CancellationToken)">
            <summary>
            Create a poll for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="title">Title for the poll.</param>
            <param name="questions">The poll questions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.GetPollAsync(System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve a poll.
            </summary>
            <param name="webinarId">The webinar id.</param>
            <param name="pollId">The poll id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:ZoomNet.Models.Poll" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.UpdatePollAsync(System.Int64,System.Int64,System.String,System.Collections.Generic.IEnumerable{ZoomNet.Models.PollQuestion},System.Threading.CancellationToken)">
            <summary>
            Update a poll for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="pollId">The poll id.</param>
            <param name="title">Title for the poll.</param>
            <param name="questions">The poll questions.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.DeletePollAsync(System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Delete a poll for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="pollId">The poll id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.GetRegistrationQuestions(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve the questions that are to be answered by users while registering for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.PollQuestion"/>.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.UpdateRegistrationQuestions(System.Int64,System.Collections.Generic.IEnumerable{ZoomNet.Models.PollQuestion},System.Threading.CancellationToken)">
            <summary>
            Update the questions that are to be answered by users while registering for a webinar.
            </summary>
            <param name="webinarId">The webinar ID.</param>
            <param name="customQuestions">The questions to be answered.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The async task.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.GetTrackingSourcesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieve all the tracking sources of a webinar.
            </summary>
            <param name="webinarId">The webinar id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.TrackingSource" />.
            </returns>
        </member>
        <member name="M:ZoomNet.Resources.Webinars.GetWebinarTemplatesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all the templates created for a user.
            </summary>
            <param name="userId">The user Id or email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An array of <see cref="T:ZoomNet.Models.Template" />.
            </returns>
        </member>
        <member name="T:ZoomNet.Utilities.DaysOfWeekConverter">
            <summary>
            Converts a JSON string into and array of <see cref="T:System.DayOfWeek">days of the week</see>.
            </summary>
            <seealso cref="T:Newtonsoft.Json.JsonConverter" />
        </member>
        <member name="M:ZoomNet.Utilities.DaysOfWeekConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:ZoomNet.Utilities.DaysOfWeekConverter.CanRead">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can read JSON.
            </summary>
            <value>
            <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can read JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ZoomNet.Utilities.DaysOfWeekConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON.
            </summary>
            <value>
            <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ZoomNet.Utilities.DaysOfWeekConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:ZoomNet.Utilities.DaysOfWeekConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
            <exception cref="T:System.Exception">Unable to determine the field type.</exception>
        </member>
        <member name="T:ZoomNet.Utilities.DiagnosticHandler">
            <summary>
            Diagnostic handler for requests dispatched to the Zoom API.
            </summary>
            <seealso cref="T:Pathoschild.Http.Client.Extensibility.IHttpFilter" />
        </member>
        <member name="M:ZoomNet.Utilities.DiagnosticHandler.OnRequest(Pathoschild.Http.Client.IRequest)">
            <summary>Method invoked just before the HTTP request is submitted. This method can modify the outgoing HTTP request.</summary>
            <param name="request">The HTTP request.</param>
        </member>
        <member name="M:ZoomNet.Utilities.DiagnosticHandler.OnResponse(Pathoschild.Http.Client.IResponse,System.Boolean)">
            <summary>Method invoked just after the HTTP response is received. This method can modify the incoming HTTP response.</summary>
            <param name="response">The HTTP response.</param>
            <param name="httpErrorAsException">Whether HTTP error responses should be raised as exceptions.</param>
        </member>
        <member name="T:ZoomNet.Utilities.EpochConverter">
            <summary>
            Converts a 'Unix time' expressed as the number of seconds since midnight on January 1st 1970 to and from JSON.
            </summary>
            <seealso cref="T:Newtonsoft.Json.Converters.DateTimeConverterBase" />
        </member>
        <member name="M:ZoomNet.Utilities.EpochConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ZoomNet.Utilities.EpochConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:ZoomNet.Utilities.EpochConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="T:ZoomNet.Utilities.Http429RetryStrategy">
            <summary>
            Implements IRetryConfig with back off based on a wait time derived from the
            "Retry-After" response header. The value in this header contains the date
            and time when the next attempt can take place.
            </summary>
            <seealso cref="T:Pathoschild.Http.Client.Retry.IRetryConfig" />
        </member>
        <member name="P:ZoomNet.Utilities.Http429RetryStrategy.MaxRetries">
            <summary>Gets the maximum number of times to retry a request before failing.</summary>
        </member>
        <member name="M:ZoomNet.Utilities.Http429RetryStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Utilities.Http429RetryStrategy" /> class.
            </summary>
        </member>
        <member name="M:ZoomNet.Utilities.Http429RetryStrategy.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Utilities.Http429RetryStrategy" /> class.
            </summary>
            <param name="maxAttempts">The maximum attempts.</param>
        </member>
        <member name="M:ZoomNet.Utilities.Http429RetryStrategy.#ctor(System.Int32,ZoomNet.Utilities.ISystemClock)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Utilities.Http429RetryStrategy" /> class.
            </summary>
            <param name="maxAttempts">The maximum attempts.</param>
            <param name="systemClock">The system clock. This is for unit testing only.</param>
        </member>
        <member name="M:ZoomNet.Utilities.Http429RetryStrategy.ShouldRetry(System.Net.Http.HttpResponseMessage)">
            <summary>
            Checks if we should retry an operation.
            </summary>
            <param name="response">The Http response of the previous request.</param>
            <returns>
              <c>true</c> if another attempt should be made; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ZoomNet.Utilities.Http429RetryStrategy.GetDelay(System.Int32,System.Net.Http.HttpResponseMessage)">
            <summary>
            Gets a TimeSpan value which defines how long to wait before trying again after an unsuccessful attempt.
            </summary>
            <param name="attempt">The number of attempts carried out so far. That is, after the first attempt (for
            the first retry), attempt will be set to 1, after the second attempt it is set to 2, and so on.</param>
            <param name="response">The Http response of the previous request.</param>
            <returns>
            A TimeSpan value which defines how long to wait before the next attempt.
            </returns>
        </member>
        <member name="T:ZoomNet.Utilities.ISystemClock">
            <summary>
            Interface for the SystemClock.
            </summary>
        </member>
        <member name="P:ZoomNet.Utilities.ISystemClock.Now">
            <summary>
            Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this
            computer, expressed as the local time.
            </summary>
            <value>
            The current date and time, expressed as the local time.
            </value>
        </member>
        <member name="P:ZoomNet.Utilities.ISystemClock.UtcNow">
            <summary>
            Gets a System.DateTime object that is set to the current date and time on this
            computer, expressed as the Coordinated Universal Time (UTC).
            </summary>
            <value>
            The current date and time, expressed as the Coordinated Universal Time (UTC).
            </value>
        </member>
        <member name="T:ZoomNet.Utilities.ITokenHandler">
            <summary>
            Interface for token handlers.
            </summary>
        </member>
        <member name="P:ZoomNet.Utilities.ITokenHandler.Token">
            <summary>
            Gets the access token.
            </summary>
        </member>
        <member name="P:ZoomNet.Utilities.ITokenHandler.ConnectionInfo">
            <summary>
            Gets the connection information.
            </summary>
        </member>
        <member name="M:ZoomNet.Utilities.ITokenHandler.RefreshTokenIfNecessary(System.Boolean)">
            <summary>
            Refresh the access token if the previous one has expired.
            </summary>
            <param name="forceRefresh">Indicates if the token should be refreshes even if it's not expired.</param>
            <returns>The refreshed access token or the current token if we determined that it didn't need to be refreshed.</returns>
        </member>
        <member name="T:ZoomNet.Utilities.JwtTokenHandler">
            <summary>
            Handler to ensure requests to the Zoom API include a valid JWT token.
            </summary>
            <seealso cref="T:Pathoschild.Http.Client.Extensibility.IHttpFilter" />
            <seealso cref="T:ZoomNet.Utilities.ITokenHandler" />
        </member>
        <member name="M:ZoomNet.Utilities.JwtTokenHandler.OnRequest(Pathoschild.Http.Client.IRequest)">
            <summary>Method invoked just before the HTTP request is submitted. This method can modify the outgoing HTTP request.</summary>
            <param name="request">The HTTP request.</param>
        </member>
        <member name="M:ZoomNet.Utilities.JwtTokenHandler.OnResponse(Pathoschild.Http.Client.IResponse,System.Boolean)">
            <summary>Method invoked just after the HTTP response is received. This method can modify the incoming HTTP response.</summary>
            <param name="response">The HTTP response.</param>
            <param name="httpErrorAsException">Whether HTTP error responses should be raised as exceptions.</param>
        </member>
        <member name="T:ZoomNet.Utilities.MeetingConverter">
            <summary>
            Converts a JSON string into and array of <see cref="T:ZoomNet.Models.Meeting">meetings</see>.
            </summary>
            <seealso cref="T:Newtonsoft.Json.JsonConverter" />
        </member>
        <member name="M:ZoomNet.Utilities.MeetingConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:ZoomNet.Utilities.MeetingConverter.CanRead">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can read JSON.
            </summary>
            <value>
            <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can read JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ZoomNet.Utilities.MeetingConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON.
            </summary>
            <value>
            <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ZoomNet.Utilities.MeetingConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:ZoomNet.Utilities.MeetingConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
            <exception cref="T:System.Exception">Unable to determine the field type.</exception>
        </member>
        <member name="T:ZoomNet.Utilities.OAuthTokenHandler">
            <summary>
            Handler to ensure requests to the Zoom API include a valid JWT token.
            </summary>
            <seealso cref="T:Pathoschild.Http.Client.Extensibility.IHttpFilter" />
        </member>
        <member name="M:ZoomNet.Utilities.OAuthTokenHandler.OnRequest(Pathoschild.Http.Client.IRequest)">
            <summary>Method invoked just before the HTTP request is submitted. This method can modify the outgoing HTTP request.</summary>
            <param name="request">The HTTP request.</param>
        </member>
        <member name="M:ZoomNet.Utilities.OAuthTokenHandler.OnResponse(Pathoschild.Http.Client.IResponse,System.Boolean)">
            <summary>Method invoked just after the HTTP response is received. This method can modify the incoming HTTP response.</summary>
            <param name="response">The HTTP response.</param>
            <param name="httpErrorAsException">Whether HTTP error responses should be raised as exceptions.</param>
        </member>
        <member name="T:ZoomNet.Utilities.RandomGenerator">
            <summary>
            Random generator.
            </summary>
        </member>
        <member name="M:ZoomNet.Utilities.RandomGenerator.RollDice(System.Byte)">
            <summary>
            This method simulates a roll of the dice. The input parameter is the
            number of sides of the dice.
            </summary>
            <param name="numberSides">Number of sides of the dice.</param>
            <returns>A random value.</returns>
            <remarks>
            From RNGCryptoServiceProvider <a href="https://msdn.microsoft.com/en-us/library/system.security.cryptography.rngcryptoserviceprovider.aspx">documentation</a>.
            </remarks>
        </member>
        <member name="T:ZoomNet.Utilities.SystemClock">
            <summary>
            A replacement for .Net <see cref="P:System.DateTime.Now" /> and <see cref="P:System.DateTime.UtcNow" />.
            </summary>
            <seealso cref="T:ZoomNet.Utilities.ISystemClock" />
        </member>
        <member name="P:ZoomNet.Utilities.SystemClock.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="P:ZoomNet.Utilities.SystemClock.Now">
            <summary>
            Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this
            computer, expressed as the local time.
            </summary>
            <value>
            The current date and time, expressed as the local time.
            </value>
        </member>
        <member name="P:ZoomNet.Utilities.SystemClock.UtcNow">
            <summary>
            Gets a System.DateTime object that is set to the current date and time on this
            computer, expressed as the Coordinated Universal Time (UTC).
            </summary>
            <value>
            The current date and time, expressed as the Coordinated Universal Time (UTC).
            </value>
        </member>
        <member name="T:ZoomNet.Utilities.TrackingFieldsConverter">
            <summary>
            Converts a JSON string into and array of tracking fields.
            </summary>
            <seealso cref="T:Newtonsoft.Json.JsonConverter" />
        </member>
        <member name="M:ZoomNet.Utilities.TrackingFieldsConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:ZoomNet.Utilities.TrackingFieldsConverter.CanRead">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can read JSON.
            </summary>
            <value>
            <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can read JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ZoomNet.Utilities.TrackingFieldsConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON.
            </summary>
            <value>
            <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ZoomNet.Utilities.TrackingFieldsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:ZoomNet.Utilities.TrackingFieldsConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
            <exception cref="T:System.Exception">Unable to determine the field type.</exception>
        </member>
        <member name="T:ZoomNet.Utilities.WebHookEventConverter">
            <summary>
            Converts a JSON string received from a webhook into and array of <see cref="T:ZoomNet.Models.Webhooks.Event">events</see>.
            </summary>
            <seealso cref="T:Newtonsoft.Json.JsonConverter" />
        </member>
        <member name="M:ZoomNet.Utilities.WebHookEventConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:ZoomNet.Utilities.WebHookEventConverter.CanRead">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can read JSON.
            </summary>
            <value>
            <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can read JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ZoomNet.Utilities.WebHookEventConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON.
            </summary>
            <value>
            <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ZoomNet.Utilities.WebHookEventConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:ZoomNet.Utilities.WebHookEventConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
            <exception cref="T:System.Exception">Unable to determine the field type.</exception>
        </member>
        <member name="T:ZoomNet.Utilities.WebinarConverter">
            <summary>
            Converts a JSON string into and array of <see cref="T:ZoomNet.Models.Webinar">webinars</see>.
            </summary>
            <seealso cref="T:Newtonsoft.Json.JsonConverter" />
        </member>
        <member name="M:ZoomNet.Utilities.WebinarConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:ZoomNet.Utilities.WebinarConverter.CanRead">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can read JSON.
            </summary>
            <value>
            <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can read JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ZoomNet.Utilities.WebinarConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON.
            </summary>
            <value>
            <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ZoomNet.Utilities.WebinarConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:ZoomNet.Utilities.WebinarConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
            <exception cref="T:System.Exception">Unable to determine the field type.</exception>
        </member>
        <member name="T:ZoomNet.Utilities.ZoomClientOptions">
            <summary>
            Options for the Zoom client.
            </summary>
        </member>
        <member name="P:ZoomNet.Utilities.ZoomClientOptions.LogLevelSuccessfulCalls">
            <summary>
            Gets or sets the log levels for successful calls (HTTP status code in the 200-299 range).
            </summary>
        </member>
        <member name="P:ZoomNet.Utilities.ZoomClientOptions.LogLevelFailedCalls">
            <summary>
            Gets or sets the log levels for failed calls (HTTP status code outside of the 200-299 range).
            </summary>
        </member>
        <member name="T:ZoomNet.Utilities.ZoomErrorHandler">
            <summary>
            Error handler for requests dispatched to the Zoom API.
            </summary>
            <seealso cref="T:Pathoschild.Http.Client.Extensibility.IHttpFilter" />
        </member>
        <member name="M:ZoomNet.Utilities.ZoomErrorHandler.OnRequest(Pathoschild.Http.Client.IRequest)">
            <summary>Method invoked just before the HTTP request is submitted. This method can modify the outgoing HTTP request.</summary>
            <param name="request">The HTTP request.</param>
        </member>
        <member name="M:ZoomNet.Utilities.ZoomErrorHandler.OnResponse(Pathoschild.Http.Client.IResponse,System.Boolean)">
            <summary>Method invoked just after the HTTP response is received. This method can modify the incoming HTTP response.</summary>
            <param name="response">The HTTP response.</param>
            <param name="httpErrorAsException">Whether HTTP error responses should be raised as exceptions.</param>
        </member>
        <member name="T:ZoomNet.Utilities.ZoomException">
            <summary>
            Exception that includes both the formatted message and the status code.
            </summary>
        </member>
        <member name="P:ZoomNet.Utilities.ZoomException.StatusCode">
            <summary>
            Gets the status code of the non-successful call.
            </summary>
        </member>
        <member name="P:ZoomNet.Utilities.ZoomException.ResponseMessage">
            <summary>
            Gets the HTTP response message which caused the exception.
            </summary>
        </member>
        <member name="P:ZoomNet.Utilities.ZoomException.DiagnosticLog">
            <summary>
            Gets the human readable representation of the request/response.
            </summary>
        </member>
        <member name="P:ZoomNet.Utilities.ZoomException.ErrorCode">
            <summary>
            Gets the Zoom error code.
            </summary>
            <remarks>
            Sometimes the Zoom API documentation contains additional details about a given error code.
            </remarks>
        </member>
        <member name="M:ZoomNet.Utilities.ZoomException.#ctor(System.String,System.Net.Http.HttpResponseMessage,System.String,System.Nullable{System.Int32},System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Utilities.ZoomException"/> class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="responseMessage">The response message of the non-successful call.</param>
            <param name="diagnosticLog">The human readable representation of the request/response.</param>
            <param name="errorCode">The Zoom error code.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="T:ZoomNet.Utilities.ZoomRetryCoordinator">
            <summary>A request coordinator which retries failed requests with a delay between each attempt.</summary>
        </member>
        <member name="M:ZoomNet.Utilities.ZoomRetryCoordinator.#ctor(ZoomNet.Utilities.ITokenHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Utilities.ZoomRetryCoordinator" /> class.
            </summary>
            <param name="tokenHandler">The handler that takes care of renewing expired tokens.</param>
        </member>
        <member name="M:ZoomNet.Utilities.ZoomRetryCoordinator.#ctor(Pathoschild.Http.Client.Retry.IRetryConfig,ZoomNet.Utilities.ITokenHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Utilities.ZoomRetryCoordinator" /> class.
            </summary>
            <param name="config">The retry configuration.</param>
            <param name="tokenHandler">The handler that takes care of renewing expired tokens.</param>
        </member>
        <member name="M:ZoomNet.Utilities.ZoomRetryCoordinator.#ctor(System.Collections.Generic.IEnumerable{Pathoschild.Http.Client.Retry.IRetryConfig},ZoomNet.Utilities.ITokenHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.Utilities.ZoomRetryCoordinator" /> class.
            </summary>
            <param name="config">The retry configuration.</param>
            <param name="tokenHandler">The handler that takes care of renewing expired tokens.</param>
        </member>
        <member name="M:ZoomNet.Utilities.ZoomRetryCoordinator.ExecuteAsync(Pathoschild.Http.Client.IRequest,System.Func{Pathoschild.Http.Client.IRequest,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Dispatch an HTTP request.</summary>
            <param name="request">The response message to validate.</param>
            <param name="dispatcher">A method which executes the request.</param>
            <returns>The final HTTP response.</returns>
        </member>
        <member name="T:ZoomNet.WebhookParser">
            <summary>
            Allows parsing of information posted from Zoom.
            </summary>
        </member>
        <member name="F:ZoomNet.WebhookParser.AUTHORIZATION_HEADER_NAME">
            <summary>
            The name of the HTTP header where Zoom stores the verification token.
            </summary>
        </member>
        <member name="M:ZoomNet.WebhookParser.ParseEventWebhook(System.String)">
            <summary>
            Parses the event webhook.
            </summary>
            <param name="requestBody">The content submitted by Zoom's WebHook.</param>
            <returns>An <see cref="T:ZoomNet.Models.Webhooks.Event" />.</returns>
        </member>
        <member name="T:ZoomNet.ZoomClient">
            <summary>
            REST client for interacting with Zoom's API.
            </summary>
        </member>
        <member name="P:ZoomNet.ZoomClient.Version">
            <summary>
            Gets the Version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:ZoomNet.ZoomClient.Accounts">
            <summary>
            Gets the resource which allows you to manage sub accounts.
            </summary>
            <value>
            The accounts resource.
            </value>
        </member>
        <member name="P:ZoomNet.ZoomClient.Chat">
            <summary>
            Gets the resource which allows you to manage chat channels, messages, etc.
            </summary>
            <value>
            The chat resource.
            </value>
        </member>
        <member name="P:ZoomNet.ZoomClient.CloudRecordings">
            <summary>
            Gets the resource which allows you to manage cloud recordings.
            </summary>
            <value>
            The recordings resource.
            </value>
        </member>
        <member name="P:ZoomNet.ZoomClient.Contacts">
            <summary>
            Gets the resource which allows you to manage contacts.
            </summary>
            <value>
            The contacts resource.
            </value>
        </member>
        <member name="P:ZoomNet.ZoomClient.DataCompliance">
            <summary>
            Gets the resource which allows you to notify Zoom that you comply with the policy which requires
            you to handle user's data in accordance to the user's preference after the user uninstalls your app.
            </summary>
            <value>
            The data compliance resource.
            </value>
        </member>
        <member name="P:ZoomNet.ZoomClient.Meetings">
            <summary>
            Gets the resource which allows you to manage meetings.
            </summary>
            <value>
            The meetings resource.
            </value>
        </member>
        <member name="P:ZoomNet.ZoomClient.PastMeetings">
            <summary>
            Gets the resource which allows you to manage meetings that occured in the past.
            </summary>
            <value>
            The past meetings resource.
            </value>
        </member>
        <member name="P:ZoomNet.ZoomClient.PastWebinars">
            <summary>
            Gets the resource which allows you to manage webinars that occured in the past.
            </summary>
            <value>
            The past webinars resource.
            </value>
        </member>
        <member name="P:ZoomNet.ZoomClient.Users">
            <summary>
            Gets the resource which allows you to manage users.
            </summary>
            <value>
            The users resource.
            </value>
        </member>
        <member name="P:ZoomNet.ZoomClient.Webinars">
            <summary>
            Gets the resource which allows you to manage webinars.
            </summary>
            <value>
            The webinars resource.
            </value>
        </member>
        <member name="P:ZoomNet.ZoomClient.Dashboards">
            <summary>
            Gets the resource which allows you to view metrics.
            </summary>
        </member>
        <member name="M:ZoomNet.ZoomClient.#ctor(ZoomNet.IConnectionInfo,ZoomNet.Utilities.ZoomClientOptions,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.ZoomClient"/> class.
            </summary>
            <param name="connectionInfo">Connection information.</param>
            <param name="options">Options for the Zoom client.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:ZoomNet.ZoomClient.#ctor(ZoomNet.IConnectionInfo,System.Net.IWebProxy,ZoomNet.Utilities.ZoomClientOptions,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.ZoomClient"/> class with a specific proxy.
            </summary>
            <param name="connectionInfo">Connection information.</param>
            <param name="proxy">Allows you to specify a proxy.</param>
            <param name="options">Options for the Zoom client.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:ZoomNet.ZoomClient.#ctor(ZoomNet.IConnectionInfo,System.Net.Http.HttpMessageHandler,ZoomNet.Utilities.ZoomClientOptions,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.ZoomClient"/> class with a specific handler.
            </summary>
            <param name="connectionInfo">Connection information.</param>
            <param name="handler">TThe HTTP handler stack to use for sending requests.</param>
            <param name="options">Options for the Zoom client.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:ZoomNet.ZoomClient.#ctor(ZoomNet.IConnectionInfo,System.Net.Http.HttpClient,ZoomNet.Utilities.ZoomClientOptions,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomNet.ZoomClient"/> class with a specific http client.
            </summary>
            <param name="connectionInfo">Connection information.</param>
            <param name="httpClient">Allows you to inject your own HttpClient. This is useful, for example, to setup the HtppClient with a proxy.</param>
            <param name="options">Options for the Zoom client.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:ZoomNet.ZoomClient.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:ZoomNet.ZoomClient"/> class.
            </summary>
        </member>
        <member name="M:ZoomNet.ZoomClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:ZoomNet.ZoomClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:StrongGrid.Models.WebinarType">
            <summary>
            Enumeration to indicate the type of webinar.
            </summary>
        </member>
        <member name="F:StrongGrid.Models.WebinarType.Regular">
            <summary>
            Regular webinar.
            </summary>
        </member>
        <member name="F:StrongGrid.Models.WebinarType.RecurringNoFixedTime">
            <summary>
            Recurring webinar with no fixed time.
            </summary>
        </member>
        <member name="F:StrongGrid.Models.WebinarType.RecurringFixedTime">
            <summary>
            Recurring webinar with fixed time.
            </summary>
        </member>
    </members>
</doc>
